//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace smartsuite.bussinesLogic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DevCall4ContentEntities1 : DbContext
    {
        public DevCall4ContentEntities1()
            : base("name=DevCall4ContentEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AccountType> AccountType { get; set; }
        public DbSet<AreaCodeToTimeZone> AreaCodeToTimeZone { get; set; }
        public DbSet<BlacklistedUsers> BlacklistedUsers { get; set; }
        public DbSet<BroadcastPlusAdmins> BroadcastPlusAdmins { get; set; }
        public DbSet<BroadcastSMS> BroadcastSMS { get; set; }
        public DbSet<BroadcastSMSAPI> BroadcastSMSAPI { get; set; }
        public DbSet<BroadcastSMSBatch> BroadcastSMSBatch { get; set; }
        public DbSet<BroadcastSMSCancelLog> BroadcastSMSCancelLog { get; set; }
        public DbSet<BroadcastSMSCoupon> BroadcastSMSCoupon { get; set; }
        public DbSet<BroadcastSMSEditLog> BroadcastSMSEditLog { get; set; }
        public DbSet<BroadcastSMSFilter> BroadcastSMSFilter { get; set; }
        public DbSet<BroadcastSMSFilterType> BroadcastSMSFilterType { get; set; }
        public DbSet<BroadcastSMSMessagetextArchive> BroadcastSMSMessagetextArchive { get; set; }
        public DbSet<BroadcastSMSMessagetextUserArchive> BroadcastSMSMessagetextUserArchive { get; set; }
        public DbSet<BroadcastSMSOffer> BroadcastSMSOffer { get; set; }
        public DbSet<BroadcastSMSQueue> BroadcastSMSQueue { get; set; }
        public DbSet<BroadcastSMSSubscriptions> BroadcastSMSSubscriptions { get; set; }
        public DbSet<BroadcastSMSTest> BroadcastSMSTest { get; set; }
        public DbSet<BroadcastSMSUniversalSendPageExecuteLog> BroadcastSMSUniversalSendPageExecuteLog { get; set; }
        public DbSet<BroadcastType> BroadcastType { get; set; }
        public DbSet<Campaign> Campaign { get; set; }
        public DbSet<CampaignAudio> CampaignAudio { get; set; }
        public DbSet<CampaignLocation> CampaignLocation { get; set; }
        public DbSet<CampaignMarket> CampaignMarket { get; set; }
        public DbSet<CampaignSchedule> CampaignSchedule { get; set; }
        public DbSet<CampaignType> CampaignType { get; set; }
        public DbSet<Carrier> Carrier { get; set; }
        public DbSet<CCTransaction> CCTransaction { get; set; }
        public DbSet<CDR> CDR { get; set; }
        public DbSet<CDRLog> CDRLog { get; set; }
        public DbSet<CDRLogArchive> CDRLogArchive { get; set; }
        public DbSet<CDRLogType> CDRLogType { get; set; }
        public DbSet<CDRStatus> CDRStatus { get; set; }
        public DbSet<CDRType> CDRType { get; set; }
        public DbSet<Company> Company { get; set; }
        public DbSet<CompanyAccount> CompanyAccount { get; set; }
        public DbSet<CompanyInternalMagement> CompanyInternalMagement { get; set; }
        public DbSet<CompanyIVRRate> CompanyIVRRate { get; set; }
        public DbSet<CompanyMarket> CompanyMarket { get; set; }
        public DbSet<CompanyMessageRate> CompanyMessageRate { get; set; }
        public DbSet<ContactDetailsWithPagingExecuteLog> ContactDetailsWithPagingExecuteLog { get; set; }
        public DbSet<ContentType> ContentType { get; set; }
        public DbSet<Country> Country { get; set; }
        public DbSet<CRMLink> CRMLink { get; set; }
        public DbSet<CustomTickerMessage> CustomTickerMessage { get; set; }
        public DbSet<DA_Category> DA_Category { get; set; }
        public DbSet<DA_DirectoryEntry> DA_DirectoryEntry { get; set; }
        public DbSet<DA_Transfer> DA_Transfer { get; set; }
        public DbSet<DID> DID { get; set; }
        public DbSet<Gateway> Gateway { get; set; }
        public DbSet<GatewayType> GatewayType { get; set; }
        public DbSet<Graphic> Graphic { get; set; }
        public DbSet<GraphicBackground> GraphicBackground { get; set; }
        public DbSet<GraphicExtraElement> GraphicExtraElement { get; set; }
        public DbSet<GraphicFormat> GraphicFormat { get; set; }
        public DbSet<GraphicTemplate> GraphicTemplate { get; set; }
        public DbSet<GraphicTemplateParamDefinition> GraphicTemplateParamDefinition { get; set; }
        public DbSet<GraphicType> GraphicType { get; set; }
        public DbSet<IVRInputValueType> IVRInputValueType { get; set; }
        public DbSet<IVRTree> IVRTree { get; set; }
        public DbSet<IVRTreeDynamicAudio> IVRTreeDynamicAudio { get; set; }
        public DbSet<IVRTreeInput> IVRTreeInput { get; set; }
        public DbSet<IVRTreeType> IVRTreeType { get; set; }
        public DbSet<LeadList> LeadList { get; set; }
        public DbSet<LoyaltyStatusType> LoyaltyStatusType { get; set; }
        public DbSet<MailBox> MailBox { get; set; }
        public DbSet<Manufacturer> Manufacturer { get; set; }
        public DbSet<MaxInteractions> MaxInteractions { get; set; }
        public DbSet<MaxReplies> MaxReplies { get; set; }
        public DbSet<MessageDetails> MessageDetails { get; set; }
        public DbSet<MessageFlow> MessageFlow { get; set; }
        public DbSet<MessageFlowCarrier> MessageFlowCarrier { get; set; }
        public DbSet<MessageFlowDID> MessageFlowDID { get; set; }
        public DbSet<MessageFlowInput> MessageFlowInput { get; set; }
        public DbSet<MessageFlowInputType> MessageFlowInputType { get; set; }
        public DbSet<MessageFlowSchedule> MessageFlowSchedule { get; set; }
        public DbSet<MessageFlowTree> MessageFlowTree { get; set; }
        public DbSet<MessageFlowType> MessageFlowType { get; set; }
        public DbSet<Messages> Messages { get; set; }
        public DbSet<MessageStatus> MessageStatus { get; set; }
        public DbSet<MessageTransaction> MessageTransaction { get; set; }
        public DbSet<MessageTransactionResponse> MessageTransactionResponse { get; set; }
        public DbSet<MessageType> MessageType { get; set; }
        public DbSet<MobileInfo> MobileInfo { get; set; }
        public DbSet<MobileModel> MobileModel { get; set; }
        public DbSet<MOOptionType> MOOptionType { get; set; }
        public DbSet<mPTTCode> mPTTCode { get; set; }
        public DbSet<NPANXXMaster> NPANXXMaster { get; set; }
        public DbSet<NumberList> NumberList { get; set; }
        public DbSet<OptInSource> OptInSource { get; set; }
        public DbSet<OptInSourceByCampaign> OptInSourceByCampaign { get; set; }
        public DbSet<OutboundCallSchedule> OutboundCallSchedule { get; set; }
        public DbSet<OutboundCallSubscriptionList> OutboundCallSubscriptionList { get; set; }
        public DbSet<OutboundEventScheduler> OutboundEventScheduler { get; set; }
        public DbSet<OutboundEventType> OutboundEventType { get; set; }
        public DbSet<PaymentGateway> PaymentGateway { get; set; }
        public DbSet<PaymentMethod> PaymentMethod { get; set; }
        public DbSet<PD_TransactionLog> PD_TransactionLog { get; set; }
        public DbSet<PDSHour> PDSHour { get; set; }
        public DbSet<Poll> Poll { get; set; }
        public DbSet<PollAnswer> PollAnswer { get; set; }
        public DbSet<PollAnswerAudience> PollAnswerAudience { get; set; }
        public DbSet<PollResponse> PollResponse { get; set; }
        public DbSet<PollSchedule> PollSchedule { get; set; }
        public DbSet<PredictiveDialerBadNumbers> PredictiveDialerBadNumbers { get; set; }
        public DbSet<PredictiveDialerSchedule> PredictiveDialerSchedule { get; set; }
        public DbSet<PromotionalMessage> PromotionalMessage { get; set; }
        public DbSet<PSMSPayoutType> PSMSPayoutType { get; set; }
        public DbSet<ReferAFriendOffer> ReferAFriendOffer { get; set; }
        public DbSet<ReminderInfo> ReminderInfo { get; set; }
        public DbSet<RepeatTypes> RepeatTypes { get; set; }
        public DbSet<ReportAccessByCompanyID> ReportAccessByCompanyID { get; set; }
        public DbSet<ReportingCampaignIDs> ReportingCampaignIDs { get; set; }
        public DbSet<ReportingServicesLogin> ReportingServicesLogin { get; set; }
        public DbSet<Reports> Reports { get; set; }
        public DbSet<ReportTypes> ReportTypes { get; set; }
        public DbSet<SalesPackages> SalesPackages { get; set; }
        public DbSet<ScheduledReports> ScheduledReports { get; set; }
        public DbSet<ScheduledReportsEmailLog> ScheduledReportsEmailLog { get; set; }
        public DbSet<SCKSupportedCarrier> SCKSupportedCarrier { get; set; }
        public DbSet<ServiceID> ServiceID { get; set; }
        public DbSet<ShortCodeInfo> ShortCodeInfo { get; set; }
        public DbSet<ShortCodeKeyword> ShortCodeKeyword { get; set; }
        public DbSet<ShortCodeMOOptions> ShortCodeMOOptions { get; set; }
        public DbSet<ShortCodeProvider> ShortCodeProvider { get; set; }
        public DbSet<SmartSMSOffer> SmartSMSOffer { get; set; }
        public DbSet<SmartSMSofferHistory> SmartSMSofferHistory { get; set; }
        public DbSet<SmartSMSTemplate> SmartSMSTemplate { get; set; }
        public DbSet<SocialBroadcastQueue> SocialBroadcastQueue { get; set; }
        public DbSet<SoftwareLicenseType> SoftwareLicenseType { get; set; }
        public DbSet<States> States { get; set; }
        public DbSet<SubscribedExemptPhoneList> SubscribedExemptPhoneList { get; set; }
        public DbSet<SubwayUniqueSubscriberCount> SubwayUniqueSubscriberCount { get; set; }
        public DbSet<SupportedCarrier> SupportedCarrier { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<sysreplservers> sysreplservers { get; set; }
        public DbSet<Target> Target { get; set; }
        public DbSet<TargetInteraction> TargetInteraction { get; set; }
        public DbSet<TargetPayment> TargetPayment { get; set; }
        public DbSet<TEMP_CNN_Votes> TEMP_CNN_Votes { get; set; }
        public DbSet<TEMP_M_ResortMessages> TEMP_M_ResortMessages { get; set; }
        public DbSet<TEMP_M_ResortNewUser> TEMP_M_ResortNewUser { get; set; }
        public DbSet<TEMP_M_Upload> TEMP_M_Upload { get; set; }
        public DbSet<TEMP_QuickVote_Answer> TEMP_QuickVote_Answer { get; set; }
        public DbSet<TEMP_QuickVote_AnswerOption> TEMP_QuickVote_AnswerOption { get; set; }
        public DbSet<TEMP_QuickVote_Question> TEMP_QuickVote_Question { get; set; }
        public DbSet<TEMP_QuickVote_Vote> TEMP_QuickVote_Vote { get; set; }
        public DbSet<TickerGraphic> TickerGraphic { get; set; }
        public DbSet<TickerMessage> TickerMessage { get; set; }
        public DbSet<TimePeriod> TimePeriod { get; set; }
        public DbSet<TimePeriods> TimePeriods { get; set; }
        public DbSet<TimeZone> TimeZone { get; set; }
        public DbSet<TrainingGuide> TrainingGuide { get; set; }
        public DbSet<Transaction> Transaction { get; set; }
        public DbSet<TransactionLog> TransactionLog { get; set; }
        public DbSet<User> User { get; set; }
        public DbSet<UserArmCard> UserArmCard { get; set; }
        public DbSet<UserInfo> UserInfo { get; set; }
        public DbSet<UserKeyword> UserKeyword { get; set; }
        public DbSet<UserLoginHistory> UserLoginHistory { get; set; }
        public DbSet<UserPermissionsDisplayGraphic> UserPermissionsDisplayGraphic { get; set; }
        public DbSet<UserPermissionsReports> UserPermissionsReports { get; set; }
        public DbSet<UserProduct> UserProduct { get; set; }
        public DbSet<UserReportsHistory> UserReportsHistory { get; set; }
        public DbSet<UserReSubscription> UserReSubscription { get; set; }
        public DbSet<UserSecurity> UserSecurity { get; set; }
        public DbSet<UserSubscription> UserSubscription { get; set; }
        public DbSet<UserSubscriptionLog> UserSubscriptionLog { get; set; }
        public DbSet<UserSubscriptionLogOriginal> UserSubscriptionLogOriginal { get; set; }
        public DbSet<UserTrainingGuide> UserTrainingGuide { get; set; }
        public DbSet<UserTransaction> UserTransaction { get; set; }
        public DbSet<UserType> UserType { get; set; }
        public DbSet<VoiceMail> VoiceMail { get; set; }
        public DbSet<VotingGraphic> VotingGraphic { get; set; }
        public DbSet<VotingGraphicOption> VotingGraphicOption { get; set; }
        public DbSet<WebServiceIdentifiedIPAddress> WebServiceIdentifiedIPAddress { get; set; }
        public DbSet<WebServiceLog> WebServiceLog { get; set; }
        public DbSet<AreaCodeToState> AreaCodeToState { get; set; }
        public DbSet<BroadcastSMSArchive> BroadcastSMSArchive { get; set; }
        public DbSet<BroadcastSMSBatchDelayed> BroadcastSMSBatchDelayed { get; set; }
        public DbSet<BroadCastSMSDupeDelete> BroadCastSMSDupeDelete { get; set; }
        public DbSet<BroadcastSocialSubscriptions> BroadcastSocialSubscriptions { get; set; }
        public DbSet<CampaignInteraction> CampaignInteraction { get; set; }
        public DbSet<CampaignOld> CampaignOld { get; set; }
        public DbSet<CampaignSonicMarketsNew> CampaignSonicMarketsNew { get; set; }
        public DbSet<CatchAllStatus> CatchAllStatus { get; set; }
        public DbSet<CDRLogTEST> CDRLogTEST { get; set; }
        public DbSet<CompanyToCRMLink> CompanyToCRMLink { get; set; }
        public DbSet<CouponCodes> CouponCodes { get; set; }
        public DbSet<DA_CallQueue> DA_CallQueue { get; set; }
        public DbSet<DA_CampaignRelationship> DA_CampaignRelationship { get; set; }
        public DbSet<DA_EntryAlias> DA_EntryAlias { get; set; }
        public DbSet<DecisionTree> DecisionTree { get; set; }
        public DbSet<ExternalImport_List> ExternalImport_List { get; set; }
        public DbSet<GraphicTemplateParam> GraphicTemplateParam { get; set; }
        public DbSet<JTPoints> JTPoints { get; set; }
        public DbSet<Menu> Menu { get; set; }
        public DbSet<MessageDelayed> MessageDelayed { get; set; }
        public DbSet<MessageDelayedOld> MessageDelayedOld { get; set; }
        public DbSet<MessageFlowInputOld> MessageFlowInputOld { get; set; }
        public DbSet<MessageFlowOLD> MessageFlowOLD { get; set; }
        public DbSet<MIMEtype> MIMEtype { get; set; }
        public DbSet<NPANXXtoState> NPANXXtoState { get; set; }
        public DbSet<PrizeList> PrizeList { get; set; }
        public DbSet<Report_BroadcastSummaryCompleteGroupView> Report_BroadcastSummaryCompleteGroupView { get; set; }
        public DbSet<ShortCodeKeywordOLD> ShortCodeKeywordOLD { get; set; }
        public DbSet<ShortCodeTransport> ShortCodeTransport { get; set; }
        public DbSet<SonicStoreID> SonicStoreID { get; set; }
        public DbSet<SonicSurvey> SonicSurvey { get; set; }
        public DbSet<StamptLink> StamptLink { get; set; }
        public DbSet<Stores> Stores { get; set; }
        public DbSet<SwishMarkIVRCoverageMatrix> SwishMarkIVRCoverageMatrix { get; set; }
        public DbSet<TargetOLD> TargetOLD { get; set; }
        public DbSet<TargetSource> TargetSource { get; set; }
        public DbSet<TEMP_M_ResortAccounts> TEMP_M_ResortAccounts { get; set; }
        public DbSet<TEMP_M_ResortPrizeList> TEMP_M_ResortPrizeList { get; set; }
        public DbSet<TEMP_Obama> TEMP_Obama { get; set; }
        public DbSet<TEMP_Obama_LocalOffice> TEMP_Obama_LocalOffice { get; set; }
        public DbSet<TEMP_Obama_VoterLine> TEMP_Obama_VoterLine { get; set; }
        public DbSet<TEMP_RevMsgNumberScrub> TEMP_RevMsgNumberScrub { get; set; }
        public DbSet<test_tab> test_tab { get; set; }
        public DbSet<TickerMessageStatusType> TickerMessageStatusType { get; set; }
        public DbSet<UserOld> UserOld { get; set; }
        public DbSet<UserPermissions> UserPermissions { get; set; }
        public DbSet<UserStamptLink> UserStamptLink { get; set; }
        public DbSet<UserSubscriptionLogOLD> UserSubscriptionLogOLD { get; set; }
        public DbSet<UserSubscriptionOLD> UserSubscriptionOLD { get; set; }
        public DbSet<ZipInfo> ZipInfo { get; set; }
        public DbSet<ZipToState> ZipToState { get; set; }
    
        [EdmFunction("DevCall4ContentEntities1", "fn_NewSplit")]
        public virtual IQueryable<fn_NewSplit_Result> fn_NewSplit(string cSV, string splitter)
        {
            var cSVParameter = cSV != null ?
                new ObjectParameter("CSV", cSV) :
                new ObjectParameter("CSV", typeof(string));
    
            var splitterParameter = splitter != null ?
                new ObjectParameter("Splitter", splitter) :
                new ObjectParameter("Splitter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_NewSplit_Result>("[DevCall4ContentEntities1].[fn_NewSplit](@CSV, @Splitter)", cSVParameter, splitterParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "fnGetSubscriberCount")]
        public virtual IQueryable<fnGetSubscriberCount_Result> fnGetSubscriberCount(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetSubscriberCount_Result>("[DevCall4ContentEntities1].[fnGetSubscriberCount](@StartDate, @EndDate)", startDateParameter, endDateParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "fnGetSubscriberCountByCompany")]
        public virtual IQueryable<fnGetSubscriberCountByCompany_Result> fnGetSubscriberCountByCompany(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetSubscriberCountByCompany_Result>("[DevCall4ContentEntities1].[fnGetSubscriberCountByCompany](@StartDate, @EndDate)", startDateParameter, endDateParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "fnGetSubscribersForExport")]
        public virtual IQueryable<fnGetSubscribersForExport_Result> fnGetSubscribersForExport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetSubscribersForExport_Result>("[DevCall4ContentEntities1].[fnGetSubscribersForExport](@StartDate, @EndDate)", startDateParameter, endDateParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "fnMessageTransactionSummary")]
        public virtual IQueryable<fnMessageTransactionSummary_Result> fnMessageTransactionSummary(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("sDate", sDate) :
                new ObjectParameter("sDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("eDate", eDate) :
                new ObjectParameter("eDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnMessageTransactionSummary_Result>("[DevCall4ContentEntities1].[fnMessageTransactionSummary](@CompanyID, @CampaignID, @sDate, @eDate)", companyIDParameter, campaignIDParameter, sDateParameter, eDateParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "fnMessageTransactionSummaryPerCompany")]
        public virtual IQueryable<fnMessageTransactionSummaryPerCompany_Result> fnMessageTransactionSummaryPerCompany(Nullable<long> companyID, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("sDate", sDate) :
                new ObjectParameter("sDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("eDate", eDate) :
                new ObjectParameter("eDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnMessageTransactionSummaryPerCompany_Result>("[DevCall4ContentEntities1].[fnMessageTransactionSummaryPerCompany](@CompanyID, @sDate, @eDate)", companyIDParameter, sDateParameter, eDateParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "fnSplit")]
        public virtual IQueryable<fnSplit_Result> fnSplit(string cSV)
        {
            var cSVParameter = cSV != null ?
                new ObjectParameter("CSV", cSV) :
                new ObjectParameter("CSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplit_Result>("[DevCall4ContentEntities1].[fnSplit](@CSV)", cSVParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "fnSplit2")]
        public virtual IQueryable<fnSplit2_Result> fnSplit2(string cSV, string splitter)
        {
            var cSVParameter = cSV != null ?
                new ObjectParameter("CSV", cSV) :
                new ObjectParameter("CSV", typeof(string));
    
            var splitterParameter = splitter != null ?
                new ObjectParameter("Splitter", splitter) :
                new ObjectParameter("Splitter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplit2_Result>("[DevCall4ContentEntities1].[fnSplit2](@CSV, @Splitter)", cSVParameter, splitterParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "Split")]
        public virtual IQueryable<Split_Result> Split(string sep, string s)
        {
            var sepParameter = sep != null ?
                new ObjectParameter("sep", sep) :
                new ObjectParameter("sep", typeof(string));
    
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[DevCall4ContentEntities1].[Split](@sep, @s)", sepParameter, sParameter);
        }
    
        [EdmFunction("DevCall4ContentEntities1", "SplitStrings_Moden")]
        public virtual IQueryable<SplitStrings_Moden_Result> SplitStrings_Moden(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitStrings_Moden_Result>("[DevCall4ContentEntities1].[SplitStrings_Moden](@List, @Delimiter)", listParameter, delimiterParameter);
        }
    
        public virtual int AccountInfoUpdate(ObjectParameter statusCode, Nullable<long> userID, Nullable<long> companyID, string companyName, string fName, string lName, string address, string address2, string city, string state, string zip, Nullable<long> phone, Nullable<long> fax, string email, string login, string password, string logoURL)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var logoURLParameter = logoURL != null ?
                new ObjectParameter("LogoURL", logoURL) :
                new ObjectParameter("LogoURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountInfoUpdate", statusCode, userIDParameter, companyIDParameter, companyNameParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, zipParameter, phoneParameter, faxParameter, emailParameter, loginParameter, passwordParameter, logoURLParameter);
        }
    
        public virtual ObjectResult<AccountTypeView_Result> AccountTypeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccountTypeView_Result>("AccountTypeView");
        }
    
        public virtual int ActivateDeactivateCampaign(Nullable<bool> shortCodeKeywordActive, Nullable<long> shortCodeKeywordID, Nullable<bool> messageFlowActive, Nullable<long> messageFlowID, Nullable<bool> campaignActive, Nullable<long> campaignID, Nullable<bool> isHidden)
        {
            var shortCodeKeywordActiveParameter = shortCodeKeywordActive.HasValue ?
                new ObjectParameter("ShortCodeKeywordActive", shortCodeKeywordActive) :
                new ObjectParameter("ShortCodeKeywordActive", typeof(bool));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var messageFlowActiveParameter = messageFlowActive.HasValue ?
                new ObjectParameter("MessageFlowActive", messageFlowActive) :
                new ObjectParameter("MessageFlowActive", typeof(bool));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var campaignActiveParameter = campaignActive.HasValue ?
                new ObjectParameter("CampaignActive", campaignActive) :
                new ObjectParameter("CampaignActive", typeof(bool));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var isHiddenParameter = isHidden.HasValue ?
                new ObjectParameter("IsHidden", isHidden) :
                new ObjectParameter("IsHidden", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivateDeactivateCampaign", shortCodeKeywordActiveParameter, shortCodeKeywordIDParameter, messageFlowActiveParameter, messageFlowIDParameter, campaignActiveParameter, campaignIDParameter, isHiddenParameter);
        }
    
        public virtual int AddArchivedSMSMessagesToNewUser(Nullable<long> companyID, Nullable<long> userID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddArchivedSMSMessagesToNewUser", companyIDParameter, userIDParameter);
        }
    
        public virtual int AddBroadcastPlus(Nullable<int> campaignID, string mobileNumbers)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var mobileNumbersParameter = mobileNumbers != null ?
                new ObjectParameter("MobileNumbers", mobileNumbers) :
                new ObjectParameter("MobileNumbers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBroadcastPlus", campaignIDParameter, mobileNumbersParameter);
        }
    
        public virtual int AddContactsToGroup(ObjectParameter contactCount, Nullable<long> changedByUserID)
        {
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddContactsToGroup", contactCount, changedByUserIDParameter);
        }
    
        public virtual int AddSmartSMSOffer(Nullable<long> companyID, string posKeyDescription, string offerText, string legalFinePrint, string clientOfferID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var posKeyDescriptionParameter = posKeyDescription != null ?
                new ObjectParameter("PosKeyDescription", posKeyDescription) :
                new ObjectParameter("PosKeyDescription", typeof(string));
    
            var offerTextParameter = offerText != null ?
                new ObjectParameter("OfferText", offerText) :
                new ObjectParameter("OfferText", typeof(string));
    
            var legalFinePrintParameter = legalFinePrint != null ?
                new ObjectParameter("LegalFinePrint", legalFinePrint) :
                new ObjectParameter("LegalFinePrint", typeof(string));
    
            var clientOfferIDParameter = clientOfferID != null ?
                new ObjectParameter("ClientOfferID", clientOfferID) :
                new ObjectParameter("ClientOfferID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSmartSMSOffer", companyIDParameter, posKeyDescriptionParameter, offerTextParameter, legalFinePrintParameter, clientOfferIDParameter);
        }
    
        public virtual int AdminArchiveBroadcastSMS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdminArchiveBroadcastSMS");
        }
    
        public virtual int AdminBroadCastGantt(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdminBroadCastGantt", startDateParameter, endDateParameter);
        }
    
        public virtual int AdminTTMTresultsPage(string contestantName, Nullable<long> messageFlowDidID)
        {
            var contestantNameParameter = contestantName != null ?
                new ObjectParameter("ContestantName", contestantName) :
                new ObjectParameter("ContestantName", typeof(string));
    
            var messageFlowDidIDParameter = messageFlowDidID.HasValue ?
                new ObjectParameter("MessageFlowDidID", messageFlowDidID) :
                new ObjectParameter("MessageFlowDidID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdminTTMTresultsPage", contestantNameParameter, messageFlowDidIDParameter);
        }
    
        public virtual int ArchiveUserSubscriptions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ArchiveUserSubscriptions");
        }
    
        public virtual ObjectResult<string> AudioGreting(Nullable<long> iVRTreeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AudioGreting", iVRTreeIDParameter);
        }
    
        public virtual int AutoCampaignCreate(string keyWord)
        {
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("keyWord", keyWord) :
                new ObjectParameter("keyWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCampaignCreate", keyWordParameter);
        }
    
        public virtual int AutoCampaignCreateJamba(string storeid)
        {
            var storeidParameter = storeid != null ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoCampaignCreateJamba", storeidParameter);
        }
    
        public virtual int BroadcastBatchScheduleUpdate(Nullable<long> broadcastSMSBatchID, Nullable<System.DateTime> nextScheduledTime, Nullable<System.DateTime> lastRunTime)
        {
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID.HasValue ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(long));
    
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            var lastRunTimeParameter = lastRunTime.HasValue ?
                new ObjectParameter("LastRunTime", lastRunTime) :
                new ObjectParameter("LastRunTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastBatchScheduleUpdate", broadcastSMSBatchIDParameter, nextScheduledTimeParameter, lastRunTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> BroadcastMessageScheduleDate(string smartSMSCouponName)
        {
            var smartSMSCouponNameParameter = smartSMSCouponName != null ?
                new ObjectParameter("SmartSMSCouponName", smartSMSCouponName) :
                new ObjectParameter("SmartSMSCouponName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("BroadcastMessageScheduleDate", smartSMSCouponNameParameter);
        }
    
        public virtual int BroadcastSMSApiUniversal(Nullable<long> broadcastSMSQueueID)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSApiUniversal", broadcastSMSQueueIDParameter);
        }
    
        public virtual ObjectResult<BroadcastSMSApiUniversal1_Result> BroadcastSMSApiUniversal1(Nullable<long> broadcastSMSQueueID)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BroadcastSMSApiUniversal1_Result>("BroadcastSMSApiUniversal1", broadcastSMSQueueIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> BroadcastSMSBatchBulkInsert(string description, string messageText, Nullable<System.DateTime> nextScheduledTime, Nullable<long> userID, Nullable<System.DateTime> dateCreated, Nullable<int> batchCount)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var batchCountParameter = batchCount.HasValue ?
                new ObjectParameter("BatchCount", batchCount) :
                new ObjectParameter("BatchCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("BroadcastSMSBatchBulkInsert", descriptionParameter, messageTextParameter, nextScheduledTimeParameter, userIDParameter, dateCreatedParameter, batchCountParameter);
        }
    
        public virtual int BroadcastSMSBatchCancel(string broadcastSMSBatchID)
        {
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSBatchCancel", broadcastSMSBatchIDParameter);
        }
    
        public virtual int BroadcastSMSBatchDayLimitCheck(Nullable<long> campaignID, Nullable<long> userID, ObjectParameter isLimitReached)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSBatchDayLimitCheck", campaignIDParameter, userIDParameter, isLimitReached);
        }
    
        public virtual int BroadcastSMSBatchInsert(ObjectParameter broadcastSMSBatchID, string description, string messageText, Nullable<System.DateTime> nextScheduledTime, Nullable<long> userID, Nullable<System.DateTime> dateCreated)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSBatchInsert", broadcastSMSBatchID, descriptionParameter, messageTextParameter, nextScheduledTimeParameter, userIDParameter, dateCreatedParameter);
        }
    
        public virtual int BroadcastSMSCouponDelete(Nullable<long> broadcastSMSQueueID)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSCouponDelete", broadcastSMSQueueIDParameter);
        }
    
        public virtual int BroadcastSMSCouponInsert(Nullable<long> broadcastSMSQueueID, Nullable<long> couponOfferID, Nullable<System.DateTime> couponExpirationDate, string couponDescription)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            var couponOfferIDParameter = couponOfferID.HasValue ?
                new ObjectParameter("CouponOfferID", couponOfferID) :
                new ObjectParameter("CouponOfferID", typeof(long));
    
            var couponExpirationDateParameter = couponExpirationDate.HasValue ?
                new ObjectParameter("CouponExpirationDate", couponExpirationDate) :
                new ObjectParameter("CouponExpirationDate", typeof(System.DateTime));
    
            var couponDescriptionParameter = couponDescription != null ?
                new ObjectParameter("CouponDescription", couponDescription) :
                new ObjectParameter("CouponDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSCouponInsert", broadcastSMSQueueIDParameter, couponOfferIDParameter, couponExpirationDateParameter, couponDescriptionParameter);
        }
    
        public virtual int BroadcastSMSCouponUpdate(Nullable<long> broadcastSMSQueueID, Nullable<long> couponOfferID, Nullable<System.DateTime> couponExpirationDate, string couponDescription)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            var couponOfferIDParameter = couponOfferID.HasValue ?
                new ObjectParameter("CouponOfferID", couponOfferID) :
                new ObjectParameter("CouponOfferID", typeof(long));
    
            var couponExpirationDateParameter = couponExpirationDate.HasValue ?
                new ObjectParameter("CouponExpirationDate", couponExpirationDate) :
                new ObjectParameter("CouponExpirationDate", typeof(System.DateTime));
    
            var couponDescriptionParameter = couponDescription != null ?
                new ObjectParameter("CouponDescription", couponDescription) :
                new ObjectParameter("CouponDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSCouponUpdate", broadcastSMSQueueIDParameter, couponOfferIDParameter, couponExpirationDateParameter, couponDescriptionParameter);
        }
    
        public virtual int BroadcastSMSEdit(Nullable<long> broadcastSMSQueueID, string messageText, Nullable<System.DateTime> nextScheduledTime)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSEdit", broadcastSMSQueueIDParameter, messageTextParameter, nextScheduledTimeParameter);
        }
    
        public virtual int BroadcastSMSInsert(Nullable<long> campaignID, Nullable<long> shortCodeInfoID, Nullable<long> transactionID, string messageText, Nullable<long> broadcastSMSBatchID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("transactionID", transactionID) :
                new ObjectParameter("transactionID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID.HasValue ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSInsert", campaignIDParameter, shortCodeInfoIDParameter, transactionIDParameter, messageTextParameter, broadcastSMSBatchIDParameter);
        }
    
        public virtual int BroadcastSMSOfferInsert(Nullable<long> broadcastSMSQueueID, Nullable<long> smartSMSOfferID)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            var smartSMSOfferIDParameter = smartSMSOfferID.HasValue ?
                new ObjectParameter("SmartSMSOfferID", smartSMSOfferID) :
                new ObjectParameter("SmartSMSOfferID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSOfferInsert", broadcastSMSQueueIDParameter, smartSMSOfferIDParameter);
        }
    
        public virtual int BroadcastSMSQueueCancel(Nullable<long> broadcastSMSQueueID, Nullable<long> senderUserID)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            var senderUserIDParameter = senderUserID.HasValue ?
                new ObjectParameter("SenderUserID", senderUserID) :
                new ObjectParameter("SenderUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSQueueCancel", broadcastSMSQueueIDParameter, senderUserIDParameter);
        }
    
        public virtual int BroadcastSMSQueueInsert(Nullable<long> companyID, string campaignID, string messageFlowID, string shortCodeProvider, Nullable<int> timeZoneID, Nullable<long> totalRows, Nullable<long> shortCodeInfoID, string messageText, string broadcastSMSBatchID, Nullable<long> broadcastTypeID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var totalRowsParameter = totalRows.HasValue ?
                new ObjectParameter("TotalRows", totalRows) :
                new ObjectParameter("TotalRows", typeof(long));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            var broadcastTypeIDParameter = broadcastTypeID.HasValue ?
                new ObjectParameter("BroadcastTypeID", broadcastTypeID) :
                new ObjectParameter("BroadcastTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSQueueInsert", companyIDParameter, campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRowsParameter, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter, broadcastTypeIDParameter);
        }
    
        public virtual int BroadcastSMSRegular(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, string shortCodeProvider, Nullable<int> timeZoneID, Nullable<long> shortCodeInfoID, string messageText, Nullable<int> broadcastSMSBatchID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID.HasValue ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSRegular", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, shortCodeProviderParameter, timeZoneIDParameter, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter);
        }
    
        public virtual int BroadcastSMSSubscriptionsBulkInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSSubscriptionsBulkInsert");
        }
    
        public virtual int BroadcastSMSSubscriptionsInsert(Nullable<int> broadcastSMSBatchID, string messageFlowIDs)
        {
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID.HasValue ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(int));
    
            var messageFlowIDsParameter = messageFlowIDs != null ?
                new ObjectParameter("MessageFlowIDs", messageFlowIDs) :
                new ObjectParameter("MessageFlowIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSSubscriptionsInsert", broadcastSMSBatchIDParameter, messageFlowIDsParameter);
        }
    
        public virtual ObjectResult<BroadcastSMSSubscriptionsView_Result> BroadcastSMSSubscriptionsView(string broadcastSMSBatchID, Nullable<long> socialBroadcastQueueID)
        {
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            var socialBroadcastQueueIDParameter = socialBroadcastQueueID.HasValue ?
                new ObjectParameter("SocialBroadcastQueueID", socialBroadcastQueueID) :
                new ObjectParameter("SocialBroadcastQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BroadcastSMSSubscriptionsView_Result>("BroadcastSMSSubscriptionsView", broadcastSMSBatchIDParameter, socialBroadcastQueueIDParameter);
        }
    
        public virtual ObjectResult<BroadcastSMSSubscriptionsViewDetailed_Result> BroadcastSMSSubscriptionsViewDetailed(string broadcastSMSBatchID, Nullable<long> socialBroadcastQueueID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> isScheduledBroadcast)
        {
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            var socialBroadcastQueueIDParameter = socialBroadcastQueueID.HasValue ?
                new ObjectParameter("SocialBroadcastQueueID", socialBroadcastQueueID) :
                new ObjectParameter("SocialBroadcastQueueID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var isScheduledBroadcastParameter = isScheduledBroadcast.HasValue ?
                new ObjectParameter("IsScheduledBroadcast", isScheduledBroadcast) :
                new ObjectParameter("IsScheduledBroadcast", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BroadcastSMSSubscriptionsViewDetailed_Result>("BroadcastSMSSubscriptionsViewDetailed", broadcastSMSBatchIDParameter, socialBroadcastQueueIDParameter, campaignIDParameter, startDateParameter, endDateParameter, isScheduledBroadcastParameter);
        }
    
        public virtual int BroadcastSMSUniversal(string campaignID, string messageFlowID, string shortCodeProvider, Nullable<int> timeZoneID, ObjectParameter totalRows, Nullable<long> shortCodeInfoID, string messageText, string broadcastSMSBatchID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSUniversal", campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRows, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter);
        }
    
        public virtual int BroadcastSMSUniversalNationalSendPage(Nullable<long> broadCastSMSQueueID, ObjectParameter totalRows)
        {
            var broadCastSMSQueueIDParameter = broadCastSMSQueueID.HasValue ?
                new ObjectParameter("BroadCastSMSQueueID", broadCastSMSQueueID) :
                new ObjectParameter("BroadCastSMSQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSUniversalNationalSendPage", broadCastSMSQueueIDParameter, totalRows);
        }
    
        public virtual int BroadcastSMSUniversalSendPage(string campaignID, string messageFlowID, string shortCodeProvider, Nullable<int> timeZoneID, ObjectParameter totalRows, Nullable<long> shortCodeInfoID, string messageText, string broadcastSMSBatchID, string broadCastSMSQueueID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            var broadCastSMSQueueIDParameter = broadCastSMSQueueID != null ?
                new ObjectParameter("BroadCastSMSQueueID", broadCastSMSQueueID) :
                new ObjectParameter("BroadCastSMSQueueID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSUniversalSendPage", campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRows, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter, broadCastSMSQueueIDParameter);
        }
    
        public virtual int BroadcastSMSUniversalSendPagePrint(string campaignID, string messageFlowID, string shortCodeProvider, Nullable<int> timeZoneID, ObjectParameter totalRows, Nullable<long> shortCodeInfoID, string messageText, string broadcastSMSBatchID, string broadCastSMSQueueID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            var broadCastSMSQueueIDParameter = broadCastSMSQueueID != null ?
                new ObjectParameter("BroadCastSMSQueueID", broadCastSMSQueueID) :
                new ObjectParameter("BroadCastSMSQueueID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSUniversalSendPagePrint", campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRows, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter, broadCastSMSQueueIDParameter);
        }
    
        public virtual int BroadcastSMSUniversalView(string campaignID, string messageFlowID, string shortCodeProvider, Nullable<int> timeZoneID, ObjectParameter totalRows, Nullable<long> shortCodeInfoID, string messageText, string broadcastSMSBatchID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSMSUniversalView", campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRows, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter);
        }
    
        public virtual int BroadcastSocialEdit(Nullable<long> socialBroadcastQueueID, string messageText, Nullable<System.DateTime> nextScheduledTime)
        {
            var socialBroadcastQueueIDParameter = socialBroadcastQueueID.HasValue ?
                new ObjectParameter("SocialBroadcastQueueID", socialBroadcastQueueID) :
                new ObjectParameter("SocialBroadcastQueueID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BroadcastSocialEdit", socialBroadcastQueueIDParameter, messageTextParameter, nextScheduledTimeParameter);
        }
    
        public virtual int CampaignAudioDelete(Nullable<long> campaignAudioID)
        {
            var campaignAudioIDParameter = campaignAudioID.HasValue ?
                new ObjectParameter("CampaignAudioID", campaignAudioID) :
                new ObjectParameter("CampaignAudioID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignAudioDelete", campaignAudioIDParameter);
        }
    
        public virtual int CampaignAudioInsert(ObjectParameter campaignAudioID, Nullable<long> campaignID, string mobileCarrierPromptURL, string unsupportedCarrierMessageURL)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var mobileCarrierPromptURLParameter = mobileCarrierPromptURL != null ?
                new ObjectParameter("MobileCarrierPromptURL", mobileCarrierPromptURL) :
                new ObjectParameter("MobileCarrierPromptURL", typeof(string));
    
            var unsupportedCarrierMessageURLParameter = unsupportedCarrierMessageURL != null ?
                new ObjectParameter("UnsupportedCarrierMessageURL", unsupportedCarrierMessageURL) :
                new ObjectParameter("UnsupportedCarrierMessageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignAudioInsert", campaignAudioID, campaignIDParameter, mobileCarrierPromptURLParameter, unsupportedCarrierMessageURLParameter);
        }
    
        public virtual int CampaignAudioUpdate(Nullable<long> campaignID, string mobileCarrierPromptURL, string unsupportedCarrierMessageURL, string errorMessageURL, ObjectParameter intSuccess)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var mobileCarrierPromptURLParameter = mobileCarrierPromptURL != null ?
                new ObjectParameter("MobileCarrierPromptURL", mobileCarrierPromptURL) :
                new ObjectParameter("MobileCarrierPromptURL", typeof(string));
    
            var unsupportedCarrierMessageURLParameter = unsupportedCarrierMessageURL != null ?
                new ObjectParameter("UnsupportedCarrierMessageURL", unsupportedCarrierMessageURL) :
                new ObjectParameter("UnsupportedCarrierMessageURL", typeof(string));
    
            var errorMessageURLParameter = errorMessageURL != null ?
                new ObjectParameter("ErrorMessageURL", errorMessageURL) :
                new ObjectParameter("ErrorMessageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignAudioUpdate", campaignIDParameter, mobileCarrierPromptURLParameter, unsupportedCarrierMessageURLParameter, errorMessageURLParameter, intSuccess);
        }
    
        public virtual int CampaignCreatorCampaignInsert(ObjectParameter campaignID, Nullable<long> companyID, string description, Nullable<bool> active, Nullable<int> campaignTypeID, Nullable<bool> useMXCarrierLookup, Nullable<bool> useNetNumberLookup, string maxAutoResponse, string inactiveCampMessage, Nullable<bool> alwaysActive)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var campaignTypeIDParameter = campaignTypeID.HasValue ?
                new ObjectParameter("CampaignTypeID", campaignTypeID) :
                new ObjectParameter("CampaignTypeID", typeof(int));
    
            var useMXCarrierLookupParameter = useMXCarrierLookup.HasValue ?
                new ObjectParameter("UseMXCarrierLookup", useMXCarrierLookup) :
                new ObjectParameter("UseMXCarrierLookup", typeof(bool));
    
            var useNetNumberLookupParameter = useNetNumberLookup.HasValue ?
                new ObjectParameter("UseNetNumberLookup", useNetNumberLookup) :
                new ObjectParameter("UseNetNumberLookup", typeof(bool));
    
            var maxAutoResponseParameter = maxAutoResponse != null ?
                new ObjectParameter("MaxAutoResponse", maxAutoResponse) :
                new ObjectParameter("MaxAutoResponse", typeof(string));
    
            var inactiveCampMessageParameter = inactiveCampMessage != null ?
                new ObjectParameter("InactiveCampMessage", inactiveCampMessage) :
                new ObjectParameter("InactiveCampMessage", typeof(string));
    
            var alwaysActiveParameter = alwaysActive.HasValue ?
                new ObjectParameter("AlwaysActive", alwaysActive) :
                new ObjectParameter("AlwaysActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignCreatorCampaignInsert", campaignID, companyIDParameter, descriptionParameter, activeParameter, campaignTypeIDParameter, useMXCarrierLookupParameter, useNetNumberLookupParameter, maxAutoResponseParameter, inactiveCampMessageParameter, alwaysActiveParameter);
        }
    
        public virtual int CampaignCreatorCampaignUpdate(Nullable<long> campaignID, string description, Nullable<int> campaignTypeID, Nullable<bool> useMXCarrierLookup, Nullable<bool> useNetNumberLookup, string maxAutoResponse, string inactiveCampMessage, Nullable<bool> alwaysActive)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var campaignTypeIDParameter = campaignTypeID.HasValue ?
                new ObjectParameter("CampaignTypeID", campaignTypeID) :
                new ObjectParameter("CampaignTypeID", typeof(int));
    
            var useMXCarrierLookupParameter = useMXCarrierLookup.HasValue ?
                new ObjectParameter("UseMXCarrierLookup", useMXCarrierLookup) :
                new ObjectParameter("UseMXCarrierLookup", typeof(bool));
    
            var useNetNumberLookupParameter = useNetNumberLookup.HasValue ?
                new ObjectParameter("UseNetNumberLookup", useNetNumberLookup) :
                new ObjectParameter("UseNetNumberLookup", typeof(bool));
    
            var maxAutoResponseParameter = maxAutoResponse != null ?
                new ObjectParameter("MaxAutoResponse", maxAutoResponse) :
                new ObjectParameter("MaxAutoResponse", typeof(string));
    
            var inactiveCampMessageParameter = inactiveCampMessage != null ?
                new ObjectParameter("InactiveCampMessage", inactiveCampMessage) :
                new ObjectParameter("InactiveCampMessage", typeof(string));
    
            var alwaysActiveParameter = alwaysActive.HasValue ?
                new ObjectParameter("AlwaysActive", alwaysActive) :
                new ObjectParameter("AlwaysActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignCreatorCampaignUpdate", campaignIDParameter, descriptionParameter, campaignTypeIDParameter, useMXCarrierLookupParameter, useNetNumberLookupParameter, maxAutoResponseParameter, inactiveCampMessageParameter, alwaysActiveParameter);
        }
    
        public virtual int CampaignCreatorKeywordDelete(Nullable<long> shortCodeKeywordID, Nullable<long> messageFlowID, Nullable<long> campaignID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignCreatorKeywordDelete", shortCodeKeywordIDParameter, messageFlowIDParameter, campaignIDParameter);
        }
    
        public virtual int CampaignCreatorMaxIntKeywordDelete(Nullable<long> shortCodeInfoID, string shortCodeKeyword, Nullable<long> campaignID, Nullable<long> messageFlowID, Nullable<long> shortCodeKeywordID)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var shortCodeKeywordParameter = shortCodeKeyword != null ?
                new ObjectParameter("ShortCodeKeyword", shortCodeKeyword) :
                new ObjectParameter("ShortCodeKeyword", typeof(string));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignCreatorMaxIntKeywordDelete", shortCodeInfoIDParameter, shortCodeKeywordParameter, campaignIDParameter, messageFlowIDParameter, shortCodeKeywordIDParameter);
        }
    
        public virtual int CampaignCreatorTargetUpdate(Nullable<int> contentTypeID, string messageText, Nullable<long> shortCodeKeywordID, Nullable<long> campaignID, string description)
        {
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(int));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignCreatorTargetUpdate", contentTypeIDParameter, messageTextParameter, shortCodeKeywordIDParameter, campaignIDParameter, descriptionParameter);
        }
    
        public virtual int CampaignDelete(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignDelete", campaignIDParameter);
        }
    
        public virtual int CampaignInsert(ObjectParameter campaignID, Nullable<long> companyID, string description, Nullable<bool> active, Nullable<long> campaignTypeID, Nullable<bool> useMXCarrierLookup, Nullable<bool> useNetNumberLookup)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var campaignTypeIDParameter = campaignTypeID.HasValue ?
                new ObjectParameter("CampaignTypeID", campaignTypeID) :
                new ObjectParameter("CampaignTypeID", typeof(long));
    
            var useMXCarrierLookupParameter = useMXCarrierLookup.HasValue ?
                new ObjectParameter("UseMXCarrierLookup", useMXCarrierLookup) :
                new ObjectParameter("UseMXCarrierLookup", typeof(bool));
    
            var useNetNumberLookupParameter = useNetNumberLookup.HasValue ?
                new ObjectParameter("UseNetNumberLookup", useNetNumberLookup) :
                new ObjectParameter("UseNetNumberLookup", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignInsert", campaignID, companyIDParameter, descriptionParameter, activeParameter, campaignTypeIDParameter, useMXCarrierLookupParameter, useNetNumberLookupParameter);
        }
    
        public virtual ObjectResult<CampaignScheduleView_Result> CampaignScheduleView(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampaignScheduleView_Result>("CampaignScheduleView", campaignIDParameter);
        }
    
        public virtual ObjectResult<CampaignTypeView_Result> CampaignTypeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampaignTypeView_Result>("CampaignTypeView");
        }
    
        public virtual int CampaignUpdate(Nullable<long> campaignID, Nullable<long> companyID, string description, Nullable<bool> active, Nullable<bool> aMD, Nullable<bool> leaveVMail)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var aMDParameter = aMD.HasValue ?
                new ObjectParameter("AMD", aMD) :
                new ObjectParameter("AMD", typeof(bool));
    
            var leaveVMailParameter = leaveVMail.HasValue ?
                new ObjectParameter("LeaveVMail", leaveVMail) :
                new ObjectParameter("LeaveVMail", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUpdate", campaignIDParameter, companyIDParameter, descriptionParameter, activeParameter, aMDParameter, leaveVMailParameter);
        }
    
        public virtual int CampaignUpdate_CarrierLookup(Nullable<long> campaignID, Nullable<bool> useMXCarrierLookup, Nullable<bool> useNetNumberLookup)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var useMXCarrierLookupParameter = useMXCarrierLookup.HasValue ?
                new ObjectParameter("UseMXCarrierLookup", useMXCarrierLookup) :
                new ObjectParameter("UseMXCarrierLookup", typeof(bool));
    
            var useNetNumberLookupParameter = useNetNumberLookup.HasValue ?
                new ObjectParameter("UseNetNumberLookup", useNetNumberLookup) :
                new ObjectParameter("UseNetNumberLookup", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUpdate_CarrierLookup", campaignIDParameter, useMXCarrierLookupParameter, useNetNumberLookupParameter);
        }
    
        public virtual int CampaignUpdate_FBAuth(Nullable<long> campaignid, string fBAuthCode, Nullable<long> fBFanPageID, Nullable<bool> fBUseGlobal)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(long));
    
            var fBAuthCodeParameter = fBAuthCode != null ?
                new ObjectParameter("FBAuthCode", fBAuthCode) :
                new ObjectParameter("FBAuthCode", typeof(string));
    
            var fBFanPageIDParameter = fBFanPageID.HasValue ?
                new ObjectParameter("FBFanPageID", fBFanPageID) :
                new ObjectParameter("FBFanPageID", typeof(long));
    
            var fBUseGlobalParameter = fBUseGlobal.HasValue ?
                new ObjectParameter("FBUseGlobal", fBUseGlobal) :
                new ObjectParameter("FBUseGlobal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUpdate_FBAuth", campaignidParameter, fBAuthCodeParameter, fBFanPageIDParameter, fBUseGlobalParameter);
        }
    
        public virtual int CampaignUpdate_Social(Nullable<long> campaignID, string twitterUsername, string twitterPassword, string fBAuthCode)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var twitterUsernameParameter = twitterUsername != null ?
                new ObjectParameter("TwitterUsername", twitterUsername) :
                new ObjectParameter("TwitterUsername", typeof(string));
    
            var twitterPasswordParameter = twitterPassword != null ?
                new ObjectParameter("TwitterPassword", twitterPassword) :
                new ObjectParameter("TwitterPassword", typeof(string));
    
            var fBAuthCodeParameter = fBAuthCode != null ?
                new ObjectParameter("FBAuthCode", fBAuthCode) :
                new ObjectParameter("FBAuthCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUpdate_Social", campaignIDParameter, twitterUsernameParameter, twitterPasswordParameter, fBAuthCodeParameter);
        }
    
        public virtual int CampaignUpdate_TwitterAuth(Nullable<long> campaignid, string twitterToken, string twitterTokenSecret, string twitterUserName, Nullable<bool> twitterUseGlobal)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(long));
    
            var twitterTokenParameter = twitterToken != null ?
                new ObjectParameter("twitterToken", twitterToken) :
                new ObjectParameter("twitterToken", typeof(string));
    
            var twitterTokenSecretParameter = twitterTokenSecret != null ?
                new ObjectParameter("twitterTokenSecret", twitterTokenSecret) :
                new ObjectParameter("twitterTokenSecret", typeof(string));
    
            var twitterUserNameParameter = twitterUserName != null ?
                new ObjectParameter("twitterUserName", twitterUserName) :
                new ObjectParameter("twitterUserName", typeof(string));
    
            var twitterUseGlobalParameter = twitterUseGlobal.HasValue ?
                new ObjectParameter("TwitterUseGlobal", twitterUseGlobal) :
                new ObjectParameter("TwitterUseGlobal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUpdate_TwitterAuth", campaignidParameter, twitterTokenParameter, twitterTokenSecretParameter, twitterUserNameParameter, twitterUseGlobalParameter);
        }
    
        public virtual int CampaignUserInfoAddUserCallback(Nullable<long> dID, Nullable<long> callerID, Nullable<int> cDRType, Nullable<int> cDRStatusID, Nullable<long> userID, string asteriskIP, Nullable<long> campaignID, Nullable<long> iVRTreeID, ObjectParameter startNode, ObjectParameter cDRID, ObjectParameter result_output)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var cDRTypeParameter = cDRType.HasValue ?
                new ObjectParameter("CDRType", cDRType) :
                new ObjectParameter("CDRType", typeof(int));
    
            var cDRStatusIDParameter = cDRStatusID.HasValue ?
                new ObjectParameter("CDRStatusID", cDRStatusID) :
                new ObjectParameter("CDRStatusID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var asteriskIPParameter = asteriskIP != null ?
                new ObjectParameter("AsteriskIP", asteriskIP) :
                new ObjectParameter("AsteriskIP", typeof(string));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUserInfoAddUserCallback", dIDParameter, callerIDParameter, cDRTypeParameter, cDRStatusIDParameter, userIDParameter, asteriskIPParameter, campaignIDParameter, iVRTreeIDParameter, startNode, cDRID, result_output);
        }
    
        public virtual int CampaignUserInfoAddUserSupportCarrier(Nullable<long> dID, Nullable<long> callerID, Nullable<int> cDRType, Nullable<int> cDRStatusID, ObjectParameter campaignID, ObjectParameter companyID, ObjectParameter unsupportedCarrierMessageURL, ObjectParameter useMXCarrierLookup, ObjectParameter useNetNumberLookup, ObjectParameter startNode, ObjectParameter userID, ObjectParameter cDRID, ObjectParameter countSupportedCarrier, ObjectParameter result_output, ObjectParameter campaign_active)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var cDRTypeParameter = cDRType.HasValue ?
                new ObjectParameter("CDRType", cDRType) :
                new ObjectParameter("CDRType", typeof(int));
    
            var cDRStatusIDParameter = cDRStatusID.HasValue ?
                new ObjectParameter("CDRStatusID", cDRStatusID) :
                new ObjectParameter("CDRStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUserInfoAddUserSupportCarrier", dIDParameter, callerIDParameter, cDRTypeParameter, cDRStatusIDParameter, campaignID, companyID, unsupportedCarrierMessageURL, useMXCarrierLookup, useNetNumberLookup, startNode, userID, cDRID, countSupportedCarrier, result_output, campaign_active);
        }
    
        public virtual int CampaignUserInfoAddUserSupportCarrier_v1(Nullable<long> dID, Nullable<long> callerID, Nullable<int> cDRType, Nullable<int> cDRStatusID, string asteriskIP, ObjectParameter campaignID, ObjectParameter companyID, ObjectParameter unsupportedCarrierMessageURL, ObjectParameter useMXCarrierLookup, ObjectParameter useNetNumberLookup, ObjectParameter startNode, ObjectParameter userID, ObjectParameter cDRID, ObjectParameter countSupportedCarrier, ObjectParameter result_output, ObjectParameter campaign_active)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var cDRTypeParameter = cDRType.HasValue ?
                new ObjectParameter("CDRType", cDRType) :
                new ObjectParameter("CDRType", typeof(int));
    
            var cDRStatusIDParameter = cDRStatusID.HasValue ?
                new ObjectParameter("CDRStatusID", cDRStatusID) :
                new ObjectParameter("CDRStatusID", typeof(int));
    
            var asteriskIPParameter = asteriskIP != null ?
                new ObjectParameter("AsteriskIP", asteriskIP) :
                new ObjectParameter("AsteriskIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUserInfoAddUserSupportCarrier_v1", dIDParameter, callerIDParameter, cDRTypeParameter, cDRStatusIDParameter, asteriskIPParameter, campaignID, companyID, unsupportedCarrierMessageURL, useMXCarrierLookup, useNetNumberLookup, startNode, userID, cDRID, countSupportedCarrier, result_output, campaign_active);
        }
    
        public virtual int CampaignUserInfoAddUserSupportCarrier_v2(Nullable<long> dID, Nullable<long> callerID, Nullable<int> cDRType, Nullable<int> cDRStatusID, string asteriskIP, Nullable<long> companyID, ObjectParameter userID, ObjectParameter cDRID, ObjectParameter result_output)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var cDRTypeParameter = cDRType.HasValue ?
                new ObjectParameter("CDRType", cDRType) :
                new ObjectParameter("CDRType", typeof(int));
    
            var cDRStatusIDParameter = cDRStatusID.HasValue ?
                new ObjectParameter("CDRStatusID", cDRStatusID) :
                new ObjectParameter("CDRStatusID", typeof(int));
    
            var asteriskIPParameter = asteriskIP != null ?
                new ObjectParameter("AsteriskIP", asteriskIP) :
                new ObjectParameter("AsteriskIP", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUserInfoAddUserSupportCarrier_v2", dIDParameter, callerIDParameter, cDRTypeParameter, cDRStatusIDParameter, asteriskIPParameter, companyIDParameter, userID, cDRID, result_output);
        }
    
        public virtual int CampaignUserInfoAddUserSupportedCarrier(Nullable<long> dID, Nullable<long> callerID, ObjectParameter campaignID, ObjectParameter companyID, ObjectParameter unsupportedCarrierMessageURL, ObjectParameter useMXCarrierLookup, ObjectParameter startNode, ObjectParameter userID, ObjectParameter cDRID, ObjectParameter countSupportedCarrier, ObjectParameter result_output)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignUserInfoAddUserSupportedCarrier", dIDParameter, callerIDParameter, campaignID, companyID, unsupportedCarrierMessageURL, useMXCarrierLookup, startNode, userID, cDRID, countSupportedCarrier, result_output);
        }
    
        public virtual ObjectResult<CampaignView_Result> CampaignView(Nullable<long> companyID, string sortBy, string sortType)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampaignView_Result>("CampaignView", companyIDParameter, sortByParameter, sortTypeParameter);
        }
    
        public virtual ObjectResult<CampaignView_withCampaignID_Result> CampaignView_withCampaignID(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampaignView_withCampaignID_Result>("CampaignView_withCampaignID", campaignIDParameter);
        }
    
        public virtual ObjectResult<CampaignViewPaged_Result> CampaignViewPaged(Nullable<long> companyID, string sortBy, string sortType, Nullable<int> pageSize, Nullable<int> pageNumber)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampaignViewPaged_Result>("CampaignViewPaged", companyIDParameter, sortByParameter, sortTypeParameter, pageSizeParameter, pageNumberParameter);
        }
    
        public virtual ObjectResult<CampaignViewTUI_Result> CampaignViewTUI(Nullable<long> companyID, string sortBy, string sortType)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CampaignViewTUI_Result>("CampaignViewTUI", companyIDParameter, sortByParameter, sortTypeParameter);
        }
    
        public virtual int CatchAllInsert(string messageTransactionID, Nullable<long> userID, Nullable<byte> catchAllStatusID)
        {
            var messageTransactionIDParameter = messageTransactionID != null ?
                new ObjectParameter("MessageTransactionID", messageTransactionID) :
                new ObjectParameter("MessageTransactionID", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var catchAllStatusIDParameter = catchAllStatusID.HasValue ?
                new ObjectParameter("CatchAllStatusID", catchAllStatusID) :
                new ObjectParameter("CatchAllStatusID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CatchAllInsert", messageTransactionIDParameter, userIDParameter, catchAllStatusIDParameter);
        }
    
        public virtual int CatchAllUtilityView(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<long> shortCodeInfoID, Nullable<bool> isAdmin, ObjectParameter totalReceived)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CatchAllUtilityView", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, searchKeywordParameter, shortCodeInfoIDParameter, isAdminParameter, totalReceived);
        }
    
        public virtual ObjectResult<CCTransactionCancel_Result> CCTransactionCancel(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CCTransactionCancel_Result>("CCTransactionCancel", userIDParameter);
        }
    
        public virtual int CCTransactionDelete(Nullable<long> cCTransactionID)
        {
            var cCTransactionIDParameter = cCTransactionID.HasValue ?
                new ObjectParameter("CCTransactionID", cCTransactionID) :
                new ObjectParameter("CCTransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CCTransactionDelete", cCTransactionIDParameter);
        }
    
        public virtual int CCTransactionInsert(ObjectParameter cCTransactionID, Nullable<long> cCNumber, string cCAddress, string cCAddress2, string cCCity, string cCState, string cCZip, Nullable<long> cCExpiration, Nullable<System.DateTime> dateCreated, string cCTransactionNumber, Nullable<int> responseCode, string responseDescription, string approvalCode, Nullable<long> transactionID, Nullable<long> paymentGatewayID, Nullable<bool> monthlyBill)
        {
            var cCNumberParameter = cCNumber.HasValue ?
                new ObjectParameter("CCNumber", cCNumber) :
                new ObjectParameter("CCNumber", typeof(long));
    
            var cCAddressParameter = cCAddress != null ?
                new ObjectParameter("CCAddress", cCAddress) :
                new ObjectParameter("CCAddress", typeof(string));
    
            var cCAddress2Parameter = cCAddress2 != null ?
                new ObjectParameter("CCAddress2", cCAddress2) :
                new ObjectParameter("CCAddress2", typeof(string));
    
            var cCCityParameter = cCCity != null ?
                new ObjectParameter("CCCity", cCCity) :
                new ObjectParameter("CCCity", typeof(string));
    
            var cCStateParameter = cCState != null ?
                new ObjectParameter("CCState", cCState) :
                new ObjectParameter("CCState", typeof(string));
    
            var cCZipParameter = cCZip != null ?
                new ObjectParameter("CCZip", cCZip) :
                new ObjectParameter("CCZip", typeof(string));
    
            var cCExpirationParameter = cCExpiration.HasValue ?
                new ObjectParameter("CCExpiration", cCExpiration) :
                new ObjectParameter("CCExpiration", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var cCTransactionNumberParameter = cCTransactionNumber != null ?
                new ObjectParameter("CCTransactionNumber", cCTransactionNumber) :
                new ObjectParameter("CCTransactionNumber", typeof(string));
    
            var responseCodeParameter = responseCode.HasValue ?
                new ObjectParameter("ResponseCode", responseCode) :
                new ObjectParameter("ResponseCode", typeof(int));
    
            var responseDescriptionParameter = responseDescription != null ?
                new ObjectParameter("ResponseDescription", responseDescription) :
                new ObjectParameter("ResponseDescription", typeof(string));
    
            var approvalCodeParameter = approvalCode != null ?
                new ObjectParameter("ApprovalCode", approvalCode) :
                new ObjectParameter("ApprovalCode", typeof(string));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var paymentGatewayIDParameter = paymentGatewayID.HasValue ?
                new ObjectParameter("PaymentGatewayID", paymentGatewayID) :
                new ObjectParameter("PaymentGatewayID", typeof(long));
    
            var monthlyBillParameter = monthlyBill.HasValue ?
                new ObjectParameter("MonthlyBill", monthlyBill) :
                new ObjectParameter("MonthlyBill", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CCTransactionInsert", cCTransactionID, cCNumberParameter, cCAddressParameter, cCAddress2Parameter, cCCityParameter, cCStateParameter, cCZipParameter, cCExpirationParameter, dateCreatedParameter, cCTransactionNumberParameter, responseCodeParameter, responseDescriptionParameter, approvalCodeParameter, transactionIDParameter, paymentGatewayIDParameter, monthlyBillParameter);
        }
    
        public virtual int CCTransactionUpdate(Nullable<long> cCTransactionID, Nullable<long> cCNumber, string cCAddress, string cCAddress2, string cCCity, string cCState, string cCZip, Nullable<long> cCExpiration, Nullable<int> cCCVV, Nullable<System.DateTime> dateCreated, string cCTransactionNumber, Nullable<int> responseCode, string responseDescription, string approvalCode, Nullable<long> transactionID, Nullable<long> paymentGatewayID)
        {
            var cCTransactionIDParameter = cCTransactionID.HasValue ?
                new ObjectParameter("CCTransactionID", cCTransactionID) :
                new ObjectParameter("CCTransactionID", typeof(long));
    
            var cCNumberParameter = cCNumber.HasValue ?
                new ObjectParameter("CCNumber", cCNumber) :
                new ObjectParameter("CCNumber", typeof(long));
    
            var cCAddressParameter = cCAddress != null ?
                new ObjectParameter("CCAddress", cCAddress) :
                new ObjectParameter("CCAddress", typeof(string));
    
            var cCAddress2Parameter = cCAddress2 != null ?
                new ObjectParameter("CCAddress2", cCAddress2) :
                new ObjectParameter("CCAddress2", typeof(string));
    
            var cCCityParameter = cCCity != null ?
                new ObjectParameter("CCCity", cCCity) :
                new ObjectParameter("CCCity", typeof(string));
    
            var cCStateParameter = cCState != null ?
                new ObjectParameter("CCState", cCState) :
                new ObjectParameter("CCState", typeof(string));
    
            var cCZipParameter = cCZip != null ?
                new ObjectParameter("CCZip", cCZip) :
                new ObjectParameter("CCZip", typeof(string));
    
            var cCExpirationParameter = cCExpiration.HasValue ?
                new ObjectParameter("CCExpiration", cCExpiration) :
                new ObjectParameter("CCExpiration", typeof(long));
    
            var cCCVVParameter = cCCVV.HasValue ?
                new ObjectParameter("CCCVV", cCCVV) :
                new ObjectParameter("CCCVV", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var cCTransactionNumberParameter = cCTransactionNumber != null ?
                new ObjectParameter("CCTransactionNumber", cCTransactionNumber) :
                new ObjectParameter("CCTransactionNumber", typeof(string));
    
            var responseCodeParameter = responseCode.HasValue ?
                new ObjectParameter("ResponseCode", responseCode) :
                new ObjectParameter("ResponseCode", typeof(int));
    
            var responseDescriptionParameter = responseDescription != null ?
                new ObjectParameter("ResponseDescription", responseDescription) :
                new ObjectParameter("ResponseDescription", typeof(string));
    
            var approvalCodeParameter = approvalCode != null ?
                new ObjectParameter("ApprovalCode", approvalCode) :
                new ObjectParameter("ApprovalCode", typeof(string));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var paymentGatewayIDParameter = paymentGatewayID.HasValue ?
                new ObjectParameter("PaymentGatewayID", paymentGatewayID) :
                new ObjectParameter("PaymentGatewayID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CCTransactionUpdate", cCTransactionIDParameter, cCNumberParameter, cCAddressParameter, cCAddress2Parameter, cCCityParameter, cCStateParameter, cCZipParameter, cCExpirationParameter, cCCVVParameter, dateCreatedParameter, cCTransactionNumberParameter, responseCodeParameter, responseDescriptionParameter, approvalCodeParameter, transactionIDParameter, paymentGatewayIDParameter);
        }
    
        public virtual int CCTransactionUpdateMonthlyBill(Nullable<long> cCTransactionID, Nullable<int> monthlyBill)
        {
            var cCTransactionIDParameter = cCTransactionID.HasValue ?
                new ObjectParameter("CCTransactionID", cCTransactionID) :
                new ObjectParameter("CCTransactionID", typeof(long));
    
            var monthlyBillParameter = monthlyBill.HasValue ?
                new ObjectParameter("MonthlyBill", monthlyBill) :
                new ObjectParameter("MonthlyBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CCTransactionUpdateMonthlyBill", cCTransactionIDParameter, monthlyBillParameter);
        }
    
        public virtual int CDRDelete(Nullable<long> cDRID)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CDRDelete", cDRIDParameter);
        }
    
        public virtual int CDRInsert(ObjectParameter cDRID, Nullable<long> dID, Nullable<long> callerID, Nullable<System.DateTime> callStart, Nullable<System.DateTime> callEnd, Nullable<long> userID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var callStartParameter = callStart.HasValue ?
                new ObjectParameter("CallStart", callStart) :
                new ObjectParameter("CallStart", typeof(System.DateTime));
    
            var callEndParameter = callEnd.HasValue ?
                new ObjectParameter("CallEnd", callEnd) :
                new ObjectParameter("CallEnd", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CDRInsert", cDRID, dIDParameter, callerIDParameter, callStartParameter, callEndParameter, userIDParameter);
        }
    
        public virtual int CDRLogDelete(Nullable<long> cDRLogID)
        {
            var cDRLogIDParameter = cDRLogID.HasValue ?
                new ObjectParameter("CDRLogID", cDRLogID) :
                new ObjectParameter("CDRLogID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CDRLogDelete", cDRLogIDParameter);
        }
    
        public virtual int CDRLogInsert(ObjectParameter cDRLogID, string description, Nullable<long> cDRID, Nullable<int> cDRLogTypeID)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var cDRLogTypeIDParameter = cDRLogTypeID.HasValue ?
                new ObjectParameter("CDRLogTypeID", cDRLogTypeID) :
                new ObjectParameter("CDRLogTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CDRLogInsert", cDRLogID, descriptionParameter, cDRIDParameter, cDRLogTypeIDParameter);
        }
    
        public virtual int CDRLogUpdate(Nullable<long> cDRLogID, Nullable<System.DateTime> dateTime, string description, Nullable<long> cDRID, Nullable<int> cDRLogTypeID)
        {
            var cDRLogIDParameter = cDRLogID.HasValue ?
                new ObjectParameter("CDRLogID", cDRLogID) :
                new ObjectParameter("CDRLogID", typeof(long));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var cDRLogTypeIDParameter = cDRLogTypeID.HasValue ?
                new ObjectParameter("CDRLogTypeID", cDRLogTypeID) :
                new ObjectParameter("CDRLogTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CDRLogUpdate", cDRLogIDParameter, dateTimeParameter, descriptionParameter, cDRIDParameter, cDRLogTypeIDParameter);
        }
    
        public virtual ObjectResult<CDRLogView_Result> CDRLogView(Nullable<long> cDRID)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CDRLogView_Result>("CDRLogView", cDRIDParameter);
        }
    
        public virtual ObjectResult<CDRLogViewSorted_Result> CDRLogViewSorted(Nullable<long> cDRID, string sortBy, string sortType)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CDRLogViewSorted_Result>("CDRLogViewSorted", cDRIDParameter, sortByParameter, sortTypeParameter);
        }
    
        public virtual ObjectResult<string> CDRLogViewTORM(Nullable<long> tormID, Nullable<int> tormFlag)
        {
            var tormIDParameter = tormID.HasValue ?
                new ObjectParameter("TormID", tormID) :
                new ObjectParameter("TormID", typeof(long));
    
            var tormFlagParameter = tormFlag.HasValue ?
                new ObjectParameter("TormFlag", tormFlag) :
                new ObjectParameter("TormFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CDRLogViewTORM", tormIDParameter, tormFlagParameter);
        }
    
        public virtual ObjectResult<CDRLogViewTotalsByDay_Result> CDRLogViewTotalsByDay(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CDRLogViewTotalsByDay_Result>("CDRLogViewTotalsByDay", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CDRUpdate(Nullable<long> cDRID, Nullable<long> dID, Nullable<long> callerID, Nullable<System.DateTime> callStart, Nullable<System.DateTime> callEnd, Nullable<long> userID)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var callStartParameter = callStart.HasValue ?
                new ObjectParameter("CallStart", callStart) :
                new ObjectParameter("CallStart", typeof(System.DateTime));
    
            var callEndParameter = callEnd.HasValue ?
                new ObjectParameter("CallEnd", callEnd) :
                new ObjectParameter("CallEnd", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CDRUpdate", cDRIDParameter, dIDParameter, callerIDParameter, callStartParameter, callEndParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> ChangeKeywordAPIURL(Nullable<long> shortCode, Nullable<long> companyID, string keyword, Nullable<long> userid, string apiURL)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("shortCode", shortCode) :
                new ObjectParameter("shortCode", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var apiURLParameter = apiURL != null ?
                new ObjectParameter("apiURL", apiURL) :
                new ObjectParameter("apiURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("ChangeKeywordAPIURL", shortCodeParameter, companyIDParameter, keywordParameter, useridParameter, apiURLParameter);
        }
    
        public virtual int CheckUpdateCarrierOnUser(Nullable<long> campaignid, Nullable<long> userid, string mxtelecom_carrierid, ObjectParameter result_output)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var mxtelecom_carrieridParameter = mxtelecom_carrierid != null ?
                new ObjectParameter("mxtelecom_carrierid", mxtelecom_carrierid) :
                new ObjectParameter("mxtelecom_carrierid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckUpdateCarrierOnUser", campaignidParameter, useridParameter, mxtelecom_carrieridParameter, result_output);
        }
    
        public virtual int CheckUpdateNetNumberCarrierOnUser(Nullable<long> campaignid, Nullable<long> userid, string netnumberid, ObjectParameter result_output)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var netnumberidParameter = netnumberid != null ?
                new ObjectParameter("netnumberid", netnumberid) :
                new ObjectParameter("netnumberid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckUpdateNetNumberCarrierOnUser", campaignidParameter, useridParameter, netnumberidParameter, result_output);
        }
    
        public virtual ObjectResult<CheckUserShortCodeDOI_Result> CheckUserShortCodeDOI(Nullable<long> messageFlowID, string userIdList)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var userIdListParameter = userIdList != null ?
                new ObjectParameter("UserIdList", userIdList) :
                new ObjectParameter("UserIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckUserShortCodeDOI_Result>("CheckUserShortCodeDOI", messageFlowIDParameter, userIdListParameter);
        }
    
        public virtual int CompanyAccountInsert(Nullable<long> companyID, Nullable<int> accountTypeID, Nullable<long> maxTransactions, Nullable<decimal> setupFee, Nullable<decimal> licenseFee, Nullable<decimal> tFRate, Nullable<decimal> dIDRate, Nullable<decimal> terminationRate, Nullable<int> iVRBillingIncrement, Nullable<decimal> sMSMORate, Nullable<decimal> sMSMTRate, Nullable<int> pSMSPayoutTypeID, Nullable<double> pSMSPayoutValue, Nullable<int> softwareLicenseTypeID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var accountTypeIDParameter = accountTypeID.HasValue ?
                new ObjectParameter("AccountTypeID", accountTypeID) :
                new ObjectParameter("AccountTypeID", typeof(int));
    
            var maxTransactionsParameter = maxTransactions.HasValue ?
                new ObjectParameter("MaxTransactions", maxTransactions) :
                new ObjectParameter("MaxTransactions", typeof(long));
    
            var setupFeeParameter = setupFee.HasValue ?
                new ObjectParameter("SetupFee", setupFee) :
                new ObjectParameter("SetupFee", typeof(decimal));
    
            var licenseFeeParameter = licenseFee.HasValue ?
                new ObjectParameter("LicenseFee", licenseFee) :
                new ObjectParameter("LicenseFee", typeof(decimal));
    
            var tFRateParameter = tFRate.HasValue ?
                new ObjectParameter("TFRate", tFRate) :
                new ObjectParameter("TFRate", typeof(decimal));
    
            var dIDRateParameter = dIDRate.HasValue ?
                new ObjectParameter("DIDRate", dIDRate) :
                new ObjectParameter("DIDRate", typeof(decimal));
    
            var terminationRateParameter = terminationRate.HasValue ?
                new ObjectParameter("TerminationRate", terminationRate) :
                new ObjectParameter("TerminationRate", typeof(decimal));
    
            var iVRBillingIncrementParameter = iVRBillingIncrement.HasValue ?
                new ObjectParameter("IVRBillingIncrement", iVRBillingIncrement) :
                new ObjectParameter("IVRBillingIncrement", typeof(int));
    
            var sMSMORateParameter = sMSMORate.HasValue ?
                new ObjectParameter("SMSMORate", sMSMORate) :
                new ObjectParameter("SMSMORate", typeof(decimal));
    
            var sMSMTRateParameter = sMSMTRate.HasValue ?
                new ObjectParameter("SMSMTRate", sMSMTRate) :
                new ObjectParameter("SMSMTRate", typeof(decimal));
    
            var pSMSPayoutTypeIDParameter = pSMSPayoutTypeID.HasValue ?
                new ObjectParameter("PSMSPayoutTypeID", pSMSPayoutTypeID) :
                new ObjectParameter("PSMSPayoutTypeID", typeof(int));
    
            var pSMSPayoutValueParameter = pSMSPayoutValue.HasValue ?
                new ObjectParameter("PSMSPayoutValue", pSMSPayoutValue) :
                new ObjectParameter("PSMSPayoutValue", typeof(double));
    
            var softwareLicenseTypeIDParameter = softwareLicenseTypeID.HasValue ?
                new ObjectParameter("SoftwareLicenseTypeID", softwareLicenseTypeID) :
                new ObjectParameter("SoftwareLicenseTypeID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompanyAccountInsert", companyIDParameter, accountTypeIDParameter, maxTransactionsParameter, setupFeeParameter, licenseFeeParameter, tFRateParameter, dIDRateParameter, terminationRateParameter, iVRBillingIncrementParameter, sMSMORateParameter, sMSMTRateParameter, pSMSPayoutTypeIDParameter, pSMSPayoutValueParameter, softwareLicenseTypeIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<CompanyAccountView_Result> CompanyAccountView(string company, string campaign, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var campaignParameter = campaign != null ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CompanyAccountView_Result>("CompanyAccountView", companyParameter, campaignParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CompanyDelete(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompanyDelete", companyIDParameter);
        }
    
        public virtual int CompanyInsert(ObjectParameter companyID, string companyName, string address, string address2, string city, string state, string country, string zip, Nullable<long> phone, Nullable<long> fax, string audioURL, Nullable<bool> aCH, Nullable<bool> cC, Nullable<bool> balance, string email, string billingContact, string billingAddress, string billingAddress2, string billingCity, string billingState, string billingZip, Nullable<long> billingPhone, string billingCountry, Nullable<System.DateTime> dateCreated, Nullable<bool> active)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(long));
    
            var audioURLParameter = audioURL != null ?
                new ObjectParameter("AudioURL", audioURL) :
                new ObjectParameter("AudioURL", typeof(string));
    
            var aCHParameter = aCH.HasValue ?
                new ObjectParameter("ACH", aCH) :
                new ObjectParameter("ACH", typeof(bool));
    
            var cCParameter = cC.HasValue ?
                new ObjectParameter("CC", cC) :
                new ObjectParameter("CC", typeof(bool));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var billingContactParameter = billingContact != null ?
                new ObjectParameter("BillingContact", billingContact) :
                new ObjectParameter("BillingContact", typeof(string));
    
            var billingAddressParameter = billingAddress != null ?
                new ObjectParameter("BillingAddress", billingAddress) :
                new ObjectParameter("BillingAddress", typeof(string));
    
            var billingAddress2Parameter = billingAddress2 != null ?
                new ObjectParameter("BillingAddress2", billingAddress2) :
                new ObjectParameter("BillingAddress2", typeof(string));
    
            var billingCityParameter = billingCity != null ?
                new ObjectParameter("BillingCity", billingCity) :
                new ObjectParameter("BillingCity", typeof(string));
    
            var billingStateParameter = billingState != null ?
                new ObjectParameter("BillingState", billingState) :
                new ObjectParameter("BillingState", typeof(string));
    
            var billingZipParameter = billingZip != null ?
                new ObjectParameter("BillingZip", billingZip) :
                new ObjectParameter("BillingZip", typeof(string));
    
            var billingPhoneParameter = billingPhone.HasValue ?
                new ObjectParameter("BillingPhone", billingPhone) :
                new ObjectParameter("BillingPhone", typeof(long));
    
            var billingCountryParameter = billingCountry != null ?
                new ObjectParameter("BillingCountry", billingCountry) :
                new ObjectParameter("BillingCountry", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompanyInsert", companyID, companyNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, countryParameter, zipParameter, phoneParameter, faxParameter, audioURLParameter, aCHParameter, cCParameter, balanceParameter, emailParameter, billingContactParameter, billingAddressParameter, billingAddress2Parameter, billingCityParameter, billingStateParameter, billingZipParameter, billingPhoneParameter, billingCountryParameter, dateCreatedParameter, activeParameter);
        }
    
        public virtual ObjectResult<CompanyList_Result> CompanyList(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CompanyList_Result>("CompanyList", startDateParameter, endDateParameter);
        }
    
        public virtual int CompanyPasswordUpdate(Nullable<long> userID, string password)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompanyPasswordUpdate", userIDParameter, passwordParameter);
        }
    
        public virtual int CompanyUpdate(Nullable<long> companyID, Nullable<long> userID, string companyName, string fName, string lName, string address, string address2, string city, string state, string country, string zip, Nullable<long> phone, Nullable<long> fax, string audioURL, string email, Nullable<int> userTypeID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(long));
    
            var audioURLParameter = audioURL != null ?
                new ObjectParameter("AudioURL", audioURL) :
                new ObjectParameter("AudioURL", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompanyUpdate", companyIDParameter, userIDParameter, companyNameParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, countryParameter, zipParameter, phoneParameter, faxParameter, audioURLParameter, emailParameter, userTypeIDParameter);
        }
    
        public virtual ObjectResult<CompanyView_Result> CompanyView(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CompanyView_Result>("CompanyView", userIDParameter);
        }
    
        public virtual int ContactDetailsWithPaging(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, string carrierID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, ObjectParameter totalSubscribes, ObjectParameter totalUnSubscribes, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ContactDetailsWithPaging", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, pageSizeParameter, pageNumberParameter, totalRows, totalSubscribes, totalUnSubscribes, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual ObjectResult<ContentTypeView_Result> ContentTypeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContentTypeView_Result>("ContentTypeView");
        }
    
        public virtual ObjectResult<Nullable<int>> Count_MessageTransactionMPTTcodeID_with_TransactionID(Nullable<long> transactionID, Nullable<int> mPTTCodeID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var mPTTCodeIDParameter = mPTTCodeID.HasValue ?
                new ObjectParameter("mPTTCodeID", mPTTCodeID) :
                new ObjectParameter("mPTTCodeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Count_MessageTransactionMPTTcodeID_with_TransactionID", transactionIDParameter, mPTTCodeIDParameter);
        }
    
        public virtual int CreateBasicAccount(string parentC4Account, Nullable<long> shortCode, string keyword, string companyName, string initialReplyMessage, string fName, string lName, string state, string email, Nullable<long> phone, string login, string password, Nullable<long> infusionSoftID, string accessLevel)
        {
            var parentC4AccountParameter = parentC4Account != null ?
                new ObjectParameter("ParentC4Account", parentC4Account) :
                new ObjectParameter("ParentC4Account", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var initialReplyMessageParameter = initialReplyMessage != null ?
                new ObjectParameter("InitialReplyMessage", initialReplyMessage) :
                new ObjectParameter("InitialReplyMessage", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var infusionSoftIDParameter = infusionSoftID.HasValue ?
                new ObjectParameter("InfusionSoftID", infusionSoftID) :
                new ObjectParameter("InfusionSoftID", typeof(long));
    
            var accessLevelParameter = accessLevel != null ?
                new ObjectParameter("AccessLevel", accessLevel) :
                new ObjectParameter("AccessLevel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateBasicAccount", parentC4AccountParameter, shortCodeParameter, keywordParameter, companyNameParameter, initialReplyMessageParameter, fNameParameter, lNameParameter, stateParameter, emailParameter, phoneParameter, loginParameter, passwordParameter, infusionSoftIDParameter, accessLevelParameter);
        }
    
        public virtual int CreateBasicAccountWithProducts(string parentC4Account, Nullable<long> c4ParentUserID, Nullable<long> shortCode, string keyword, string companyName, string initialReplyMessage, string fName, string lName, string state, string email, Nullable<long> phone, string login, string password, Nullable<long> infusionSoftID, string accessLevel, string streetAddress1, string streetAddress2, string physicalCity, string physicalState, string physicalZip, string physicalCountry, string billingName, string invoiceEmail, string address, string city, string zip, string country, Nullable<int> productId, Nullable<int> termsId, Nullable<int> locationRangeId, Nullable<decimal> oneTimeFee, Nullable<decimal> monthlyRecurFee, string accountingCoachesNote)
        {
            var parentC4AccountParameter = parentC4Account != null ?
                new ObjectParameter("ParentC4Account", parentC4Account) :
                new ObjectParameter("ParentC4Account", typeof(string));
    
            var c4ParentUserIDParameter = c4ParentUserID.HasValue ?
                new ObjectParameter("C4ParentUserID", c4ParentUserID) :
                new ObjectParameter("C4ParentUserID", typeof(long));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var initialReplyMessageParameter = initialReplyMessage != null ?
                new ObjectParameter("InitialReplyMessage", initialReplyMessage) :
                new ObjectParameter("InitialReplyMessage", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var infusionSoftIDParameter = infusionSoftID.HasValue ?
                new ObjectParameter("InfusionSoftID", infusionSoftID) :
                new ObjectParameter("InfusionSoftID", typeof(long));
    
            var accessLevelParameter = accessLevel != null ?
                new ObjectParameter("AccessLevel", accessLevel) :
                new ObjectParameter("AccessLevel", typeof(string));
    
            var streetAddress1Parameter = streetAddress1 != null ?
                new ObjectParameter("StreetAddress1", streetAddress1) :
                new ObjectParameter("StreetAddress1", typeof(string));
    
            var streetAddress2Parameter = streetAddress2 != null ?
                new ObjectParameter("StreetAddress2", streetAddress2) :
                new ObjectParameter("StreetAddress2", typeof(string));
    
            var physicalCityParameter = physicalCity != null ?
                new ObjectParameter("PhysicalCity", physicalCity) :
                new ObjectParameter("PhysicalCity", typeof(string));
    
            var physicalStateParameter = physicalState != null ?
                new ObjectParameter("PhysicalState", physicalState) :
                new ObjectParameter("PhysicalState", typeof(string));
    
            var physicalZipParameter = physicalZip != null ?
                new ObjectParameter("PhysicalZip", physicalZip) :
                new ObjectParameter("PhysicalZip", typeof(string));
    
            var physicalCountryParameter = physicalCountry != null ?
                new ObjectParameter("PhysicalCountry", physicalCountry) :
                new ObjectParameter("PhysicalCountry", typeof(string));
    
            var billingNameParameter = billingName != null ?
                new ObjectParameter("BillingName", billingName) :
                new ObjectParameter("BillingName", typeof(string));
    
            var invoiceEmailParameter = invoiceEmail != null ?
                new ObjectParameter("InvoiceEmail", invoiceEmail) :
                new ObjectParameter("InvoiceEmail", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var termsIdParameter = termsId.HasValue ?
                new ObjectParameter("TermsId", termsId) :
                new ObjectParameter("TermsId", typeof(int));
    
            var locationRangeIdParameter = locationRangeId.HasValue ?
                new ObjectParameter("LocationRangeId", locationRangeId) :
                new ObjectParameter("LocationRangeId", typeof(int));
    
            var oneTimeFeeParameter = oneTimeFee.HasValue ?
                new ObjectParameter("OneTimeFee", oneTimeFee) :
                new ObjectParameter("OneTimeFee", typeof(decimal));
    
            var monthlyRecurFeeParameter = monthlyRecurFee.HasValue ?
                new ObjectParameter("MonthlyRecurFee", monthlyRecurFee) :
                new ObjectParameter("MonthlyRecurFee", typeof(decimal));
    
            var accountingCoachesNoteParameter = accountingCoachesNote != null ?
                new ObjectParameter("AccountingCoachesNote", accountingCoachesNote) :
                new ObjectParameter("AccountingCoachesNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateBasicAccountWithProducts", parentC4AccountParameter, c4ParentUserIDParameter, shortCodeParameter, keywordParameter, companyNameParameter, initialReplyMessageParameter, fNameParameter, lNameParameter, stateParameter, emailParameter, phoneParameter, loginParameter, passwordParameter, infusionSoftIDParameter, accessLevelParameter, streetAddress1Parameter, streetAddress2Parameter, physicalCityParameter, physicalStateParameter, physicalZipParameter, physicalCountryParameter, billingNameParameter, invoiceEmailParameter, addressParameter, cityParameter, zipParameter, countryParameter, productIdParameter, termsIdParameter, locationRangeIdParameter, oneTimeFeeParameter, monthlyRecurFeeParameter, accountingCoachesNoteParameter);
        }
    
        public virtual ObjectResult<CreateCampaignForKeyword_Result> CreateCampaignForKeyword(Nullable<long> shortCodeKeywordID, Nullable<long> userID, string apiURL)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("shortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("shortCodeKeywordID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var apiURLParameter = apiURL != null ?
                new ObjectParameter("apiURL", apiURL) :
                new ObjectParameter("apiURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreateCampaignForKeyword_Result>("CreateCampaignForKeyword", shortCodeKeywordIDParameter, userIDParameter, apiURLParameter);
        }
    
        public virtual ObjectResult<CreateCampaignForKeywordOLD_Result> CreateCampaignForKeywordOLD(Nullable<long> shortCodeKeywordID, Nullable<long> userID, string apiURL)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("shortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("shortCodeKeywordID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var apiURLParameter = apiURL != null ?
                new ObjectParameter("apiURL", apiURL) :
                new ObjectParameter("apiURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreateCampaignForKeywordOLD_Result>("CreateCampaignForKeywordOLD", shortCodeKeywordIDParameter, userIDParameter, apiURLParameter);
        }
    
        public virtual ObjectResult<CreateCampaignForSMSKeyword_Result> CreateCampaignForSMSKeyword(Nullable<long> shortCodeKeywordID, Nullable<long> userID, string apiURL)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("shortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("shortCodeKeywordID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var apiURLParameter = apiURL != null ?
                new ObjectParameter("apiURL", apiURL) :
                new ObjectParameter("apiURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreateCampaignForSMSKeyword_Result>("CreateCampaignForSMSKeyword", shortCodeKeywordIDParameter, userIDParameter, apiURLParameter);
        }
    
        public virtual int CreateContactGroup(Nullable<long> campaignId, string name, ObjectParameter intSuccess, ObjectParameter aMessageFlowID)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateContactGroup", campaignIdParameter, nameParameter, intSuccess, aMessageFlowID);
        }
    
        public virtual int CreateMessageFlowSchedule(Nullable<long> messageFlowID, Nullable<System.DateTime> nextScheduled, string schedule)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var nextScheduledParameter = nextScheduled.HasValue ?
                new ObjectParameter("NextScheduled", nextScheduled) :
                new ObjectParameter("NextScheduled", typeof(System.DateTime));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("Schedule", schedule) :
                new ObjectParameter("Schedule", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateMessageFlowSchedule", messageFlowIDParameter, nextScheduledParameter, scheduleParameter);
        }
    
        public virtual int CreateOutboundCallSchedule(Nullable<long> iVRTreeID, Nullable<System.DateTime> nextScheduled, string schedule, Nullable<long> dID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var nextScheduledParameter = nextScheduled.HasValue ?
                new ObjectParameter("NextScheduled", nextScheduled) :
                new ObjectParameter("NextScheduled", typeof(System.DateTime));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("Schedule", schedule) :
                new ObjectParameter("Schedule", typeof(string));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOutboundCallSchedule", iVRTreeIDParameter, nextScheduledParameter, scheduleParameter, dIDParameter);
        }
    
        public virtual int CreateOutboundCallSubscriptionList(Nullable<long> iVRTreeID, Nullable<long> dID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOutboundCallSubscriptionList", iVRTreeIDParameter, dIDParameter);
        }
    
        public virtual int CreateReferral(Nullable<long> userID, Nullable<int> companyID, Nullable<long> referralPhone, ObjectParameter subscriptionID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var referralPhoneParameter = referralPhone.HasValue ?
                new ObjectParameter("ReferralPhone", referralPhone) :
                new ObjectParameter("ReferralPhone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateReferral", userIDParameter, companyIDParameter, referralPhoneParameter, subscriptionID);
        }
    
        public virtual int CreateScheduleReport(string reportName, Nullable<int> reportTypeID, Nullable<int> timePeriodID, string campaignIDs, Nullable<System.DateTime> startDate, Nullable<int> repeatTypeID, Nullable<int> repeatInterval, Nullable<bool> isMon, Nullable<bool> isTue, Nullable<bool> isWed, Nullable<bool> isThu, Nullable<bool> isFri, Nullable<bool> isSat, Nullable<bool> isSun, Nullable<bool> neverEnds, Nullable<int> endsAfterOccurrences, Nullable<System.DateTime> endsOn, Nullable<long> userID, string recipients, Nullable<bool> isActive)
        {
            var reportNameParameter = reportName != null ?
                new ObjectParameter("ReportName", reportName) :
                new ObjectParameter("ReportName", typeof(string));
    
            var reportTypeIDParameter = reportTypeID.HasValue ?
                new ObjectParameter("ReportTypeID", reportTypeID) :
                new ObjectParameter("ReportTypeID", typeof(int));
    
            var timePeriodIDParameter = timePeriodID.HasValue ?
                new ObjectParameter("TimePeriodID", timePeriodID) :
                new ObjectParameter("TimePeriodID", typeof(int));
    
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var repeatTypeIDParameter = repeatTypeID.HasValue ?
                new ObjectParameter("RepeatTypeID", repeatTypeID) :
                new ObjectParameter("RepeatTypeID", typeof(int));
    
            var repeatIntervalParameter = repeatInterval.HasValue ?
                new ObjectParameter("RepeatInterval", repeatInterval) :
                new ObjectParameter("RepeatInterval", typeof(int));
    
            var isMonParameter = isMon.HasValue ?
                new ObjectParameter("IsMon", isMon) :
                new ObjectParameter("IsMon", typeof(bool));
    
            var isTueParameter = isTue.HasValue ?
                new ObjectParameter("IsTue", isTue) :
                new ObjectParameter("IsTue", typeof(bool));
    
            var isWedParameter = isWed.HasValue ?
                new ObjectParameter("IsWed", isWed) :
                new ObjectParameter("IsWed", typeof(bool));
    
            var isThuParameter = isThu.HasValue ?
                new ObjectParameter("IsThu", isThu) :
                new ObjectParameter("IsThu", typeof(bool));
    
            var isFriParameter = isFri.HasValue ?
                new ObjectParameter("IsFri", isFri) :
                new ObjectParameter("IsFri", typeof(bool));
    
            var isSatParameter = isSat.HasValue ?
                new ObjectParameter("IsSat", isSat) :
                new ObjectParameter("IsSat", typeof(bool));
    
            var isSunParameter = isSun.HasValue ?
                new ObjectParameter("IsSun", isSun) :
                new ObjectParameter("IsSun", typeof(bool));
    
            var neverEndsParameter = neverEnds.HasValue ?
                new ObjectParameter("NeverEnds", neverEnds) :
                new ObjectParameter("NeverEnds", typeof(bool));
    
            var endsAfterOccurrencesParameter = endsAfterOccurrences.HasValue ?
                new ObjectParameter("EndsAfterOccurrences", endsAfterOccurrences) :
                new ObjectParameter("EndsAfterOccurrences", typeof(int));
    
            var endsOnParameter = endsOn.HasValue ?
                new ObjectParameter("EndsOn", endsOn) :
                new ObjectParameter("EndsOn", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateScheduleReport", reportNameParameter, reportTypeIDParameter, timePeriodIDParameter, campaignIDsParameter, startDateParameter, repeatTypeIDParameter, repeatIntervalParameter, isMonParameter, isTueParameter, isWedParameter, isThuParameter, isFriParameter, isSatParameter, isSunParameter, neverEndsParameter, endsAfterOccurrencesParameter, endsOnParameter, userIDParameter, recipientsParameter, isActiveParameter);
        }
    
        public virtual int CreateScheduleReportEmailLog(Nullable<long> scheduledReportID, Nullable<System.DateTime> sendDate)
        {
            var scheduledReportIDParameter = scheduledReportID.HasValue ?
                new ObjectParameter("scheduledReportID", scheduledReportID) :
                new ObjectParameter("scheduledReportID", typeof(long));
    
            var sendDateParameter = sendDate.HasValue ?
                new ObjectParameter("sendDate", sendDate) :
                new ObjectParameter("sendDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateScheduleReportEmailLog", scheduledReportIDParameter, sendDateParameter);
        }
    
        public virtual int CRMInsert(Nullable<long> userID, Nullable<long> cRMID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var cRMIDParameter = cRMID.HasValue ?
                new ObjectParameter("CRMID", cRMID) :
                new ObjectParameter("CRMID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRMInsert", userIDParameter, cRMIDParameter);
        }
    
        public virtual ObjectResult<CustomerBillingReportView_Result> CustomerBillingReportView(string company, string campaign, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var campaignParameter = campaign != null ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerBillingReportView_Result>("CustomerBillingReportView", companyParameter, campaignParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CustomerCostReportView(string company, string campaign, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var campaignParameter = campaign != null ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerCostReportView", companyParameter, campaignParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CustomTickerMessageInsert(string bucketName, Nullable<long> graphicID, string channel, string id, string messageText, string email)
        {
            var bucketNameParameter = bucketName != null ?
                new ObjectParameter("bucketName", bucketName) :
                new ObjectParameter("bucketName", typeof(string));
    
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("graphicID", graphicID) :
                new ObjectParameter("graphicID", typeof(long));
    
            var channelParameter = channel != null ?
                new ObjectParameter("Channel", channel) :
                new ObjectParameter("Channel", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CustomTickerMessageInsert", bucketNameParameter, graphicIDParameter, channelParameter, idParameter, messageTextParameter, emailParameter);
        }
    
        public virtual int CustomTickerMessageUpdate(string messageText, Nullable<long> tickerID)
        {
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var tickerIDParameter = tickerID.HasValue ?
                new ObjectParameter("TickerID", tickerID) :
                new ObjectParameter("TickerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomTickerMessageUpdate", messageTextParameter, tickerIDParameter);
        }
    
        public virtual int CustomTickerMessageUpdateStatusType(string tickerMessageIDList, Nullable<int> status)
        {
            var tickerMessageIDListParameter = tickerMessageIDList != null ?
                new ObjectParameter("TickerMessageIDList", tickerMessageIDList) :
                new ObjectParameter("TickerMessageIDList", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomTickerMessageUpdateStatusType", tickerMessageIDListParameter, statusParameter);
        }
    
        public virtual ObjectResult<dailyMessageReports_Result> dailyMessageReports(Nullable<long> companyID, Nullable<long> campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dailyMessageReports_Result>("dailyMessageReports", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<DAReportView_Result> DAReportView(Nullable<int> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DAReportView_Result>("DAReportView", userIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<DashboardSMSCountsByDay_Result> DashboardSMSCountsByDay(string campaignID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardSMSCountsByDay_Result>("DashboardSMSCountsByDay", campaignIDParameter);
        }
    
        public virtual ObjectResult<DashboardSubscribersByDay_Result> DashboardSubscribersByDay(string campaignID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardSubscribersByDay_Result>("DashboardSubscribersByDay", campaignIDParameter);
        }
    
        public virtual int DavidTestTableINSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DavidTestTableINSERT");
        }
    
        public virtual int DeactivateCampaign(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeactivateCampaign", campaignIDParameter);
        }
    
        public virtual int DeactivatedPhoneNumbers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeactivatedPhoneNumbers");
        }
    
        public virtual int DeactivateScheduledReport(Nullable<long> reportId)
        {
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("reportId", reportId) :
                new ObjectParameter("reportId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeactivateScheduledReport", reportIdParameter);
        }
    
        public virtual int DeleteBroadcastPlusNumbers(string iDs)
        {
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBroadcastPlusNumbers", iDsParameter);
        }
    
        public virtual int DeleteBroadcastSMSMessagetextArchive(Nullable<long> broadcastSMSMessagetextArchiveID)
        {
            var broadcastSMSMessagetextArchiveIDParameter = broadcastSMSMessagetextArchiveID.HasValue ?
                new ObjectParameter("BroadcastSMSMessagetextArchiveID", broadcastSMSMessagetextArchiveID) :
                new ObjectParameter("BroadcastSMSMessagetextArchiveID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBroadcastSMSMessagetextArchive", broadcastSMSMessagetextArchiveIDParameter);
        }
    
        public virtual int DeleteBroadcastSMSMessagetextUserArchive(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBroadcastSMSMessagetextUserArchive", iDParameter);
        }
    
        public virtual int DeleteCamaignSchedules(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCamaignSchedules", campaignIDParameter);
        }
    
        public virtual int DeleteCampaignDetails(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCampaignDetails", campaignIDParameter);
        }
    
        public virtual int DeleteCampaignsForReporting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCampaignsForReporting");
        }
    
        public virtual int DeleteCanceledBroadcastSMSBatches(string broadcastSMSBatchID)
        {
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCanceledBroadcastSMSBatches", broadcastSMSBatchIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> DeleteKeyword(Nullable<long> shortCode, Nullable<long> companyID, string keyword, Nullable<long> userid)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("shortCode", shortCode) :
                new ObjectParameter("shortCode", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("DeleteKeyword", shortCodeParameter, companyIDParameter, keywordParameter, useridParameter);
        }
    
        public virtual int DeletePromotionalMessage(Nullable<int> promotionalMessageID)
        {
            var promotionalMessageIDParameter = promotionalMessageID.HasValue ?
                new ObjectParameter("promotionalMessageID", promotionalMessageID) :
                new ObjectParameter("promotionalMessageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePromotionalMessage", promotionalMessageIDParameter);
        }
    
        public virtual int DeleteStamtLink(Nullable<long> userID, Nullable<long> merchantID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStamtLink", userIDParameter, merchantIDParameter);
        }
    
        public virtual int DeleteSubscribedExemptPhoneList(Nullable<long> subscribedExemptPhoneListID)
        {
            var subscribedExemptPhoneListIDParameter = subscribedExemptPhoneListID.HasValue ?
                new ObjectParameter("SubscribedExemptPhoneListID", subscribedExemptPhoneListID) :
                new ObjectParameter("SubscribedExemptPhoneListID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSubscribedExemptPhoneList", subscribedExemptPhoneListIDParameter);
        }
    
        public virtual int DeleteTemplate(Nullable<long> campaignID, Nullable<long> shortCodeKeywordID, Nullable<long> maxInteractionsShortCodeKeywordID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var maxInteractionsShortCodeKeywordIDParameter = maxInteractionsShortCodeKeywordID.HasValue ?
                new ObjectParameter("MaxInteractionsShortCodeKeywordID", maxInteractionsShortCodeKeywordID) :
                new ObjectParameter("MaxInteractionsShortCodeKeywordID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTemplate", campaignIDParameter, shortCodeKeywordIDParameter, maxInteractionsShortCodeKeywordIDParameter);
        }
    
        public virtual ObjectResult<detail2InternalReportIVR_Result> detail2InternalReportIVR(Nullable<long> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<detail2InternalReportIVR_Result>("detail2InternalReportIVR", companyIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<detail2InternalReportMessages_Result> detail2InternalReportMessages(Nullable<long> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<detail2InternalReportMessages_Result>("detail2InternalReportMessages", companyIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<detailInternalReportIVR_Result> detailInternalReportIVR(Nullable<long> campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<detailInternalReportIVR_Result>("detailInternalReportIVR", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<detailInternalReportMessages_Result> detailInternalReportMessages(Nullable<long> companyID, Nullable<long> campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<detailInternalReportMessages_Result>("detailInternalReportMessages", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int detailTEST2InternalReportIVR(Nullable<long> campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, ObjectParameter result_output)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("detailTEST2InternalReportIVR", campaignIDParameter, startDateParameter, endDateParameter, result_output);
        }
    
        public virtual ObjectResult<Nullable<int>> DIDCount(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DIDCount", campaignIDParameter);
        }
    
        public virtual int DIDDelete(Nullable<long> dID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DIDDelete", dIDParameter);
        }
    
        public virtual int DIDInsert(ObjectParameter dID, Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DIDInsert", dID, campaignIDParameter);
        }
    
        public virtual ObjectResult<DIDUpdate_Result> DIDUpdate(Nullable<long> dID, Nullable<long> campaignID, Nullable<long> iVRTreeID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIDUpdate_Result>("DIDUpdate", dIDParameter, campaignIDParameter, iVRTreeIDParameter);
        }
    
        public virtual ObjectResult<DIDView_Result> DIDView(string campaignID, Nullable<long> companyID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DIDView_Result>("DIDView", campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> does_AggregatorTransactionID_already_exist(string aggregatorTransactionID)
        {
            var aggregatorTransactionIDParameter = aggregatorTransactionID != null ?
                new ObjectParameter("AggregatorTransactionID", aggregatorTransactionID) :
                new ObjectParameter("AggregatorTransactionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("does_AggregatorTransactionID_already_exist", aggregatorTransactionIDParameter);
        }
    
        public virtual int ExternalImport_UsersSubscription(Nullable<long> companyID, Nullable<long> listBatchID, Nullable<long> subscriptionID, Nullable<int> subscriptionType, Nullable<bool> unSubscribe, Nullable<long> importerUserID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var listBatchIDParameter = listBatchID.HasValue ?
                new ObjectParameter("ListBatchID", listBatchID) :
                new ObjectParameter("ListBatchID", typeof(long));
    
            var subscriptionIDParameter = subscriptionID.HasValue ?
                new ObjectParameter("SubscriptionID", subscriptionID) :
                new ObjectParameter("SubscriptionID", typeof(long));
    
            var subscriptionTypeParameter = subscriptionType.HasValue ?
                new ObjectParameter("SubscriptionType", subscriptionType) :
                new ObjectParameter("SubscriptionType", typeof(int));
    
            var unSubscribeParameter = unSubscribe.HasValue ?
                new ObjectParameter("UnSubscribe", unSubscribe) :
                new ObjectParameter("UnSubscribe", typeof(bool));
    
            var importerUserIDParameter = importerUserID.HasValue ?
                new ObjectParameter("ImporterUserID", importerUserID) :
                new ObjectParameter("ImporterUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExternalImport_UsersSubscription", companyIDParameter, listBatchIDParameter, subscriptionIDParameter, subscriptionTypeParameter, unSubscribeParameter, importerUserIDParameter);
        }
    
        public virtual int ExternalWebservices_CreateBroadcastBatchSMS(Nullable<long> campaignID, string messageText, Nullable<long> shortCode, string messageFlowDescription, Nullable<long> senderUserID, ObjectParameter broadcastSMSBatchID, ObjectParameter shortCodeInfoID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var messageFlowDescriptionParameter = messageFlowDescription != null ?
                new ObjectParameter("MessageFlowDescription", messageFlowDescription) :
                new ObjectParameter("MessageFlowDescription", typeof(string));
    
            var senderUserIDParameter = senderUserID.HasValue ?
                new ObjectParameter("SenderUserID", senderUserID) :
                new ObjectParameter("SenderUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExternalWebservices_CreateBroadcastBatchSMS", campaignIDParameter, messageTextParameter, shortCodeParameter, messageFlowDescriptionParameter, senderUserIDParameter, broadcastSMSBatchID, shortCodeInfoID);
        }
    
        public virtual int fnGetSubscriberCountVerbose(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fnGetSubscriberCountVerbose", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Get_SREntity(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Get_SREntity", idParameter);
        }
    
        public virtual int Get1MinuteCDRBreakdown(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get1MinuteCDRBreakdown", startDateParameter, endDateParameter);
        }
    
        public virtual int Get5MinuteCDRBreakdown(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get5MinuteCDRBreakdown", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetAbsenteePollingInfo_Result> GetAbsenteePollingInfo(string state, string county)
        {
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countyParameter = county != null ?
                new ObjectParameter("County", county) :
                new ObjectParameter("County", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAbsenteePollingInfo_Result>("GetAbsenteePollingInfo", stateParameter, countyParameter);
        }
    
        public virtual ObjectResult<GetAccessReport_Result> GetAccessReport(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccessReport_Result>("GetAccessReport", useridParameter);
        }
    
        public virtual ObjectResult<GetAccountDetails_Result> GetAccountDetails(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountDetails_Result>("GetAccountDetails", companyIDParameter);
        }
    
        public virtual ObjectResult<GetAccountingReport_Result> GetAccountingReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountingReport_Result>("GetAccountingReport", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetActiveUserSubscriptionDetailsByUserAndCompany_Result> GetActiveUserSubscriptionDetailsByUserAndCompany(Nullable<long> userID, Nullable<long> companyId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActiveUserSubscriptionDetailsByUserAndCompany_Result>("GetActiveUserSubscriptionDetailsByUserAndCompany", userIDParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<GetBlacklistPhoneNumbers_Result> GetBlacklistPhoneNumbers(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBlacklistPhoneNumbers_Result>("GetBlacklistPhoneNumbers", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetBoomTextUserInformation_Result> GetBoomTextUserInformation(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBoomTextUserInformation_Result>("GetBoomTextUserInformation", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetBroadcastPhoneNumbers_Result> GetBroadcastPhoneNumbers(ObjectParameter broadcastQueueID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastPhoneNumbers_Result>("GetBroadcastPhoneNumbers", broadcastQueueID);
        }
    
        public virtual ObjectResult<GetBroadcastPhoneNumbersATT_Result> GetBroadcastPhoneNumbersATT(ObjectParameter broadcastQueueID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastPhoneNumbersATT_Result>("GetBroadcastPhoneNumbersATT", broadcastQueueID);
        }
    
        public virtual ObjectResult<GetBroadcastPhoneNumbersByCampaignIDs_Result> GetBroadcastPhoneNumbersByCampaignIDs(ObjectParameter broadcastQueueID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastPhoneNumbersByCampaignIDs_Result>("GetBroadcastPhoneNumbersByCampaignIDs", broadcastQueueID);
        }
    
        public virtual ObjectResult<GetBroadcastPhoneNumbersMMS_Result> GetBroadcastPhoneNumbersMMS(Nullable<long> broadcastQueueID)
        {
            var broadcastQueueIDParameter = broadcastQueueID.HasValue ?
                new ObjectParameter("BroadcastQueueID", broadcastQueueID) :
                new ObjectParameter("BroadcastQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastPhoneNumbersMMS_Result>("GetBroadcastPhoneNumbersMMS", broadcastQueueIDParameter);
        }
    
        public virtual ObjectResult<GetBroadcastPhoneNumbersOtherCarriers_Result> GetBroadcastPhoneNumbersOtherCarriers(ObjectParameter broadcastQueueID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastPhoneNumbersOtherCarriers_Result>("GetBroadcastPhoneNumbersOtherCarriers", broadcastQueueID);
        }
    
        public virtual ObjectResult<GetBroadcastPhoneNumbersTest_Result> GetBroadcastPhoneNumbersTest(ObjectParameter broadcastQueueID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastPhoneNumbersTest_Result>("GetBroadcastPhoneNumbersTest", broadcastQueueID);
        }
    
        public virtual ObjectResult<GetBroadcastPlus_Result> GetBroadcastPlus(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastPlus_Result>("GetBroadcastPlus", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetBroadcastSMSMessagetextArchive_Result> GetBroadcastSMSMessagetextArchive(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastSMSMessagetextArchive_Result>("GetBroadcastSMSMessagetextArchive", companyIDParameter);
        }
    
        public virtual ObjectResult<GetBroadcastSMSMessagetextUserArchive_Result> GetBroadcastSMSMessagetextUserArchive(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastSMSMessagetextUserArchive_Result>("GetBroadcastSMSMessagetextUserArchive", userIDParameter);
        }
    
        public virtual ObjectResult<GetBroadcastSMSOffers_Result> GetBroadcastSMSOffers(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastSMSOffers_Result>("GetBroadcastSMSOffers", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetBroadcastSMSQueue_Result> GetBroadcastSMSQueue(Nullable<long> broadcastQueueID)
        {
            var broadcastQueueIDParameter = broadcastQueueID.HasValue ?
                new ObjectParameter("BroadcastQueueID", broadcastQueueID) :
                new ObjectParameter("BroadcastQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBroadcastSMSQueue_Result>("GetBroadcastSMSQueue", broadcastQueueIDParameter);
        }
    
        public virtual ObjectResult<string> GetC4SendMessageURL(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetC4SendMessageURL", transactionIDParameter);
        }
    
        public virtual ObjectResult<string> GetCallCenterAbbrev(string state, Nullable<int> hourOfDay, Nullable<int> dayOfWeek)
        {
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var hourOfDayParameter = hourOfDay.HasValue ?
                new ObjectParameter("HourOfDay", hourOfDay) :
                new ObjectParameter("HourOfDay", typeof(int));
    
            var dayOfWeekParameter = dayOfWeek.HasValue ?
                new ObjectParameter("DayOfWeek", dayOfWeek) :
                new ObjectParameter("DayOfWeek", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCallCenterAbbrev", stateParameter, hourOfDayParameter, dayOfWeekParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCallHangupCountByCampaignID(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCallHangupCountByCampaignID", campaignIDParameter);
        }
    
        public virtual int GetCallLimit(Nullable<long> calledID, Nullable<long> callerID, Nullable<int> limit, ObjectParameter overLimit)
        {
            var calledIDParameter = calledID.HasValue ?
                new ObjectParameter("CalledID", calledID) :
                new ObjectParameter("CalledID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCallLimit", calledIDParameter, callerIDParameter, limitParameter, overLimit);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCallTransfersByCampaignID(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCallTransfersByCampaignID", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetCampaignIdByShortCode_Result> GetCampaignIdByShortCode(string keyword, Nullable<long> shortCode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCampaignIdByShortCode_Result>("GetCampaignIdByShortCode", keywordParameter, shortCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetCampaignIDfromTargetID(Nullable<long> targetID, Nullable<int> p2)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var p2Parameter = p2.HasValue ?
                new ObjectParameter("p2", p2) :
                new ObjectParameter("p2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetCampaignIDfromTargetID", targetIDParameter, p2Parameter);
        }
    
        public virtual ObjectResult<GetCampaignIDFromUserLogin_Result> GetCampaignIDFromUserLogin(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCampaignIDFromUserLogin_Result>("GetCampaignIDFromUserLogin", userLoginParameter);
        }
    
        public virtual int GetCampaignIdsforDashboard(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, string market, Nullable<int> filter, string search)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var marketParameter = market != null ?
                new ObjectParameter("market", market) :
                new ObjectParameter("market", typeof(string));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCampaignIdsforDashboard", userIDParameter, companyIDParameter, isAdminParameter, marketParameter, filterParameter, searchParameter);
        }
    
        public virtual ObjectResult<GetCampaignListByMessageflowIDs_Result> GetCampaignListByMessageflowIDs(string messageflowIDs)
        {
            var messageflowIDsParameter = messageflowIDs != null ?
                new ObjectParameter("MessageflowIDs", messageflowIDs) :
                new ObjectParameter("MessageflowIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCampaignListByMessageflowIDs_Result>("GetCampaignListByMessageflowIDs", messageflowIDsParameter);
        }
    
        public virtual ObjectResult<GetCampaignLocation_Result> GetCampaignLocation(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCampaignLocation_Result>("GetCampaignLocation", campaignIDParameter);
        }
    
        public virtual ObjectResult<string> GetCampaignLocations(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCampaignLocations", userIDParameter, companyIDParameter, isAdminParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetCampaignsByCompany(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetCampaignsByCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<GetCampaignsByUserID_Result> GetCampaignsByUserID(Nullable<long> userId, ObjectParameter userTypeID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCampaignsByUserID_Result>("GetCampaignsByUserID", userIdParameter, userTypeID);
        }
    
        public virtual ObjectResult<GetCampaignSubscriberCount_Result> GetCampaignSubscriberCount(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCampaignSubscriberCount_Result>("GetCampaignSubscriberCount", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetCampaignsWithPaging(Nullable<long> companyID, Nullable<long> userID, Nullable<bool> isAdmin, string sortClause, Nullable<int> pageSize, Nullable<int> pageNumber, string searchKey, string market, Nullable<int> filterOption, ObjectParameter totalRows, ObjectParameter totalSubscribes)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var sortClauseParameter = sortClause != null ?
                new ObjectParameter("SortClause", sortClause) :
                new ObjectParameter("SortClause", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var searchKeyParameter = searchKey != null ?
                new ObjectParameter("SearchKey", searchKey) :
                new ObjectParameter("SearchKey", typeof(string));
    
            var marketParameter = market != null ?
                new ObjectParameter("Market", market) :
                new ObjectParameter("Market", typeof(string));
    
            var filterOptionParameter = filterOption.HasValue ?
                new ObjectParameter("filterOption", filterOption) :
                new ObjectParameter("filterOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCampaignsWithPaging", companyIDParameter, userIDParameter, isAdminParameter, sortClauseParameter, pageSizeParameter, pageNumberParameter, searchKeyParameter, marketParameter, filterOptionParameter, totalRows, totalSubscribes);
        }
    
        public virtual ObjectResult<string> getCarrierDescription(Nullable<long> carrierID)
        {
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getCarrierDescription", carrierIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> getCarrierID(string description, string provider)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var providerParameter = provider != null ?
                new ObjectParameter("Provider", provider) :
                new ObjectParameter("Provider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("getCarrierID", descriptionParameter, providerParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> getCarrierID_with_TransactionID(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("getCarrierID_with_TransactionID", transactionIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> getCarrierID2(string description, string provider)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var providerParameter = provider != null ?
                new ObjectParameter("Provider", provider) :
                new ObjectParameter("Provider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("getCarrierID2", descriptionParameter, providerParameter);
        }
    
        public virtual int getCarrierIDwithOtherCarrierID(string iD, string providerIndex, string providerSearched)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var providerIndexParameter = providerIndex != null ?
                new ObjectParameter("ProviderIndex", providerIndex) :
                new ObjectParameter("ProviderIndex", typeof(string));
    
            var providerSearchedParameter = providerSearched != null ?
                new ObjectParameter("ProviderSearched", providerSearched) :
                new ObjectParameter("ProviderSearched", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getCarrierIDwithOtherCarrierID", iDParameter, providerIndexParameter, providerSearchedParameter);
        }
    
        public virtual ObjectResult<getCarrierToShowInUi_Result> getCarrierToShowInUi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCarrierToShowInUi_Result>("getCarrierToShowInUi");
        }
    
        public virtual ObjectResult<GetCatchAllInfo_Result> GetCatchAllInfo(Nullable<long> shortCode, string messageFlowInputText)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var messageFlowInputTextParameter = messageFlowInputText != null ?
                new ObjectParameter("MessageFlowInputText", messageFlowInputText) :
                new ObjectParameter("MessageFlowInputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCatchAllInfo_Result>("GetCatchAllInfo", shortCodeParameter, messageFlowInputTextParameter);
        }
    
        public virtual ObjectResult<GetClosestOfficeInfo_Result> GetClosestOfficeInfo(string zip)
        {
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClosestOfficeInfo_Result>("GetClosestOfficeInfo", zipParameter);
        }
    
        public virtual ObjectResult<GetClosestZip_Result> GetClosestZip(Nullable<int> zip)
        {
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClosestZip_Result>("GetClosestZip", zipParameter);
        }
    
        public virtual ObjectResult<GetCompany_Result> GetCompany(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompany_Result>("GetCompany", companyIdParameter);
        }
    
        public virtual ObjectResult<GetCompanyAndUserDetails_Result> GetCompanyAndUserDetails(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyAndUserDetails_Result>("GetCompanyAndUserDetails", userIDParameter);
        }
    
        public virtual ObjectResult<getCompanyIDfromDID_Result> getCompanyIDfromDID(Nullable<long> dID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCompanyIDfromDID_Result>("getCompanyIDfromDID", dIDParameter);
        }
    
        public virtual ObjectResult<GetCompanyIDFromUserLogin_Result> GetCompanyIDFromUserLogin(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyIDFromUserLogin_Result>("GetCompanyIDFromUserLogin", userLoginParameter);
        }
    
        public virtual ObjectResult<GetCompanyMarket_Result> GetCompanyMarket(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyMarket_Result>("GetCompanyMarket", companyIDParameter);
        }
    
        public virtual ObjectResult<GetContactGroups_Result> GetContactGroups(string campaignID, Nullable<long> companyID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactGroups_Result>("GetContactGroups", campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<GetContactInfoByName_Result> GetContactInfoByName(string name, Nullable<long> companyId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactInfoByName_Result>("GetContactInfoByName", nameParameter, companyIdParameter);
        }
    
        public virtual ObjectResult<GetContactInfoByPhoneNumber_Result> GetContactInfoByPhoneNumber(Nullable<long> phoneNumber, Nullable<long> companyId)
        {
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactInfoByPhoneNumber_Result>("GetContactInfoByPhoneNumber", phoneNumberParameter, companyIdParameter);
        }
    
        public virtual int GetContactsByGroups(string userIdList, Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var userIdListParameter = userIdList != null ?
                new ObjectParameter("userIdList", userIdList) :
                new ObjectParameter("userIdList", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetContactsByGroups", userIdListParameter, companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, pageSizeParameter, pageNumberParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual int GetContactsForExport(Nullable<bool> exportEnabled)
        {
            var exportEnabledParameter = exportEnabled.HasValue ?
                new ObjectParameter("ExportEnabled", exportEnabled) :
                new ObjectParameter("ExportEnabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetContactsForExport", exportEnabledParameter);
        }
    
        public virtual ObjectResult<GetContentTypeByTargetID_Result> GetContentTypeByTargetID(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContentTypeByTargetID_Result>("GetContentTypeByTargetID", targetIDParameter);
        }
    
        public virtual ObjectResult<getCountryCode_with_CarrierID_Result> getCountryCode_with_CarrierID(Nullable<long> mBloxID, Nullable<long> sybaseID, Nullable<long> motricityID, Nullable<long> fourInfoID)
        {
            var mBloxIDParameter = mBloxID.HasValue ?
                new ObjectParameter("mBloxID", mBloxID) :
                new ObjectParameter("mBloxID", typeof(long));
    
            var sybaseIDParameter = sybaseID.HasValue ?
                new ObjectParameter("SybaseID", sybaseID) :
                new ObjectParameter("SybaseID", typeof(long));
    
            var motricityIDParameter = motricityID.HasValue ?
                new ObjectParameter("MotricityID", motricityID) :
                new ObjectParameter("MotricityID", typeof(long));
    
            var fourInfoIDParameter = fourInfoID.HasValue ?
                new ObjectParameter("FourInfoID", fourInfoID) :
                new ObjectParameter("FourInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCountryCode_with_CarrierID_Result>("getCountryCode_with_CarrierID", mBloxIDParameter, sybaseIDParameter, motricityIDParameter, fourInfoIDParameter);
        }
    
        public virtual ObjectResult<string> GetCouponCode(Nullable<long> companyid)
        {
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCouponCode", companyidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetCRMID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetCRMID", userIDParameter);
        }
    
        public virtual ObjectResult<GetCRMLogins_Result> GetCRMLogins()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCRMLogins_Result>("GetCRMLogins");
        }
    
        public virtual ObjectResult<GetCRMLoginsTest_Result> GetCRMLoginsTest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCRMLoginsTest_Result>("GetCRMLoginsTest");
        }
    
        public virtual ObjectResult<string> getDA_Businesses(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getDA_Businesses", campaignIDParameter);
        }
    
        public virtual ObjectResult<string> getDA_Businesses_All(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getDA_Businesses_All", campaignIDParameter);
        }
    
        public virtual ObjectResult<getDA_BusinessForCategories_Result> getDA_BusinessForCategories(Nullable<long> campaignID, Nullable<long> cDRID, string description, Nullable<int> pageNumber, Nullable<int> pageSize, ObjectParameter totalPages)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDA_BusinessForCategories_Result>("getDA_BusinessForCategories", campaignIDParameter, cDRIDParameter, descriptionParameter, pageNumberParameter, pageSizeParameter, totalPages);
        }
    
        public virtual ObjectResult<getDA_BusinessMultipleAddress_Result> getDA_BusinessMultipleAddress(Nullable<long> campaignID, string description, Nullable<int> pageNumber, Nullable<int> pageSize, ObjectParameter totalPages)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDA_BusinessMultipleAddress_Result>("getDA_BusinessMultipleAddress", campaignIDParameter, descriptionParameter, pageNumberParameter, pageSizeParameter, totalPages);
        }
    
        public virtual ObjectResult<getDA_CallQueue_Result> getDA_CallQueue(Nullable<long> phone)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDA_CallQueue_Result>("getDA_CallQueue", phoneParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> getDA_CallTransfer(Nullable<long> cDRID)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("getDA_CallTransfer", cDRIDParameter);
        }
    
        public virtual ObjectResult<string> getDA_Categories(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getDA_Categories", campaignIDParameter);
        }
    
        public virtual ObjectResult<getDA_CityState_Result> getDA_CityState(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDA_CityState_Result>("getDA_CityState", campaignIDParameter);
        }
    
        public virtual ObjectResult<getDA_SMSText_Result> getDA_SMSText(Nullable<long> cDRID)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDA_SMSText_Result>("getDA_SMSText", cDRIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetDIDFromCompanyID(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetDIDFromCompanyID", companyIDParameter);
        }
    
        public virtual ObjectResult<GetDOIPhoneNumberByCampaign_Result> GetDOIPhoneNumberByCampaign(Nullable<long> campaignid)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("Campaignid", campaignid) :
                new ObjectParameter("Campaignid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDOIPhoneNumberByCampaign_Result>("GetDOIPhoneNumberByCampaign", campaignidParameter);
        }
    
        public virtual ObjectResult<GetEarlyVotingInfo_Result> GetEarlyVotingInfo(string state, string county)
        {
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countyParameter = county != null ?
                new ObjectParameter("County", county) :
                new ObjectParameter("County", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEarlyVotingInfo_Result>("GetEarlyVotingInfo", stateParameter, countyParameter);
        }
    
        public virtual ObjectResult<GetEarlyVotingInfoWI_Result> GetEarlyVotingInfoWI(string zip)
        {
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEarlyVotingInfoWI_Result>("GetEarlyVotingInfoWI", zipParameter);
        }
    
        public virtual ObjectResult<string> GetElectionDayHomeAddress(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetElectionDayHomeAddress", phoneParameter);
        }
    
        public virtual ObjectResult<string> GetElectionDayPollingLocation(string phone, Nullable<long> userID)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetElectionDayPollingLocation", phoneParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetGraphic_Result> GetGraphic(Nullable<int> graphicID)
        {
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("graphicID", graphicID) :
                new ObjectParameter("graphicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphic_Result>("GetGraphic", graphicIDParameter);
        }
    
        public virtual ObjectResult<GetGraphicExtraElements_Result> GetGraphicExtraElements(Nullable<int> graphicID)
        {
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("GraphicID", graphicID) :
                new ObjectParameter("GraphicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphicExtraElements_Result>("GetGraphicExtraElements", graphicIDParameter);
        }
    
        public virtual ObjectResult<GetGraphicFormatList_Result> GetGraphicFormatList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphicFormatList_Result>("GetGraphicFormatList");
        }
    
        public virtual ObjectResult<GetGraphicList_Result> GetGraphicList(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphicList_Result>("GetGraphicList", useridParameter);
        }
    
        public virtual ObjectResult<GetGraphicListByIDs_Result> GetGraphicListByIDs(Nullable<long> userid, string graphicIDs)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var graphicIDsParameter = graphicIDs != null ?
                new ObjectParameter("graphicIDs", graphicIDs) :
                new ObjectParameter("graphicIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphicListByIDs_Result>("GetGraphicListByIDs", useridParameter, graphicIDsParameter);
        }
    
        public virtual ObjectResult<GetGraphicPromotionalMessages_Result> GetGraphicPromotionalMessages(Nullable<int> graphicID)
        {
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("GraphicID", graphicID) :
                new ObjectParameter("GraphicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphicPromotionalMessages_Result>("GetGraphicPromotionalMessages", graphicIDParameter);
        }
    
        public virtual ObjectResult<GetGraphicTemplate_Result> GetGraphicTemplate(Nullable<int> templateid)
        {
            var templateidParameter = templateid.HasValue ?
                new ObjectParameter("templateid", templateid) :
                new ObjectParameter("templateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphicTemplate_Result>("GetGraphicTemplate", templateidParameter);
        }
    
        public virtual ObjectResult<GetGraphicVotingOptions_Result> GetGraphicVotingOptions(Nullable<int> graphicID)
        {
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("GraphicID", graphicID) :
                new ObjectParameter("GraphicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGraphicVotingOptions_Result>("GetGraphicVotingOptions", graphicIDParameter);
        }
    
        public virtual int GetHourDataForCampaign(Nullable<long> campaignID, ObjectParameter dTMFPress)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetHourDataForCampaign", campaignIDParameter, dTMFPress);
        }
    
        public virtual int GetHourDataForCampaign2(Nullable<int> campaignID, ObjectParameter dTMFPress)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetHourDataForCampaign2", campaignIDParameter, dTMFPress);
        }
    
        public virtual ObjectResult<GetInactiveCampaignMessageText_Result> GetInactiveCampaignMessageText(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInactiveCampaignMessageText_Result>("GetInactiveCampaignMessageText", campaignIDParameter);
        }
    
        public virtual ObjectResult<getInfowithGUID_Result> getInfowithGUID(string gUID)
        {
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInfowithGUID_Result>("getInfowithGUID", gUIDParameter);
        }
    
        public virtual ObjectResult<GetInternalInformation_Result> GetInternalInformation(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInternalInformation_Result>("GetInternalInformation", companyIDParameter);
        }
    
        public virtual ObjectResult<GetIVRCampaignMenus_Result> GetIVRCampaignMenus(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetIVRCampaignMenus_Result>("GetIVRCampaignMenus", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetIVRMenuDetails_Result> GetIVRMenuDetails(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetIVRMenuDetails_Result>("GetIVRMenuDetails", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetIVRSchedule_Result> GetIVRSchedule(Nullable<long> iVRTreeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetIVRSchedule_Result>("GetIVRSchedule", iVRTreeIDParameter);
        }
    
        public virtual ObjectResult<getIVRTreeID_with_CampaignID_DID_Result> getIVRTreeID_with_CampaignID_DID(Nullable<long> campaignID, Nullable<long> dID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getIVRTreeID_with_CampaignID_DID_Result>("getIVRTreeID_with_CampaignID_DID", campaignIDParameter, dIDParameter);
        }
    
        public virtual ObjectResult<GetKeywordDetailsByCampaign_Result> GetKeywordDetailsByCampaign(Nullable<long> campaignID, string campaignType)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var campaignTypeParameter = campaignType != null ?
                new ObjectParameter("CampaignType", campaignType) :
                new ObjectParameter("CampaignType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKeywordDetailsByCampaign_Result>("GetKeywordDetailsByCampaign", campaignIDParameter, campaignTypeParameter);
        }
    
        public virtual ObjectResult<GetKeywordsByCampaigns_Result> GetKeywordsByCampaigns(string campaignIDs)
        {
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetKeywordsByCampaigns_Result>("GetKeywordsByCampaigns", campaignIDsParameter);
        }
    
        public virtual ObjectResult<getLastTransactionIDForMO_Result> getLastTransactionIDForMO(Nullable<long> userID, Nullable<long> companyID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastTransactionIDForMO_Result>("getLastTransactionIDForMO", userIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<string> GetLatestKeywordForRAF(string keywordPrefix, Nullable<long> shortCode)
        {
            var keywordPrefixParameter = keywordPrefix != null ?
                new ObjectParameter("KeywordPrefix", keywordPrefix) :
                new ObjectParameter("KeywordPrefix", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLatestKeywordForRAF", keywordPrefixParameter, shortCodeParameter);
        }
    
        public virtual ObjectResult<GetLocalOfficeInfo_Result> GetLocalOfficeInfo(string zip, Nullable<int> source)
        {
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocalOfficeInfo_Result>("GetLocalOfficeInfo", zipParameter, sourceParameter);
        }
    
        public virtual ObjectResult<GetLoginFromCompany_Result> GetLoginFromCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoginFromCompany_Result>("GetLoginFromCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<GetLogins_Result> GetLogins()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLogins_Result>("GetLogins");
        }
    
        public virtual ObjectResult<GetLoginsForCompanyID_Result> GetLoginsForCompanyID(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoginsForCompanyID_Result>("GetLoginsForCompanyID", companyIDParameter);
        }
    
        public virtual ObjectResult<GetMainMenu_Result> GetMainMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMainMenu_Result>("GetMainMenu");
        }
    
        public virtual ObjectResult<GetMaxInteractionResponse_Result> GetMaxInteractionResponse(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMaxInteractionResponse_Result>("GetMaxInteractionResponse", campaignIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> getMbloxIDwithCarrierID(Nullable<long> carrierID)
        {
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("getMbloxIDwithCarrierID", carrierIDParameter);
        }
    
        public virtual ObjectResult<string> GetMerchantIDs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMerchantIDs");
        }
    
        public virtual ObjectResult<GetMerchantList_Result> GetMerchantList(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMerchantList_Result>("GetMerchantList", useridParameter);
        }
    
        public virtual ObjectResult<GetMessageFlowDetails_Result> GetMessageFlowDetails(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessageFlowDetails_Result>("GetMessageFlowDetails", messageFlowIDParameter);
        }
    
        public virtual ObjectResult<GetMessageFlowSchedule_Result> GetMessageFlowSchedule(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessageFlowSchedule_Result>("GetMessageFlowSchedule", messageFlowIDParameter);
        }
    
        public virtual ObjectResult<GetMessageFlowScheduleByScheduleID_Result> GetMessageFlowScheduleByScheduleID(Nullable<long> messageFlowScheduleID)
        {
            var messageFlowScheduleIDParameter = messageFlowScheduleID.HasValue ?
                new ObjectParameter("MessageFlowScheduleID", messageFlowScheduleID) :
                new ObjectParameter("MessageFlowScheduleID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessageFlowScheduleByScheduleID_Result>("GetMessageFlowScheduleByScheduleID", messageFlowScheduleIDParameter);
        }
    
        public virtual ObjectResult<GetMessagePhoneNumbers_Result> GetMessagePhoneNumbers(Nullable<long> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("messageId", messageId) :
                new ObjectParameter("messageId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessagePhoneNumbers_Result>("GetMessagePhoneNumbers", messageIdParameter);
        }
    
        public virtual ObjectResult<string> GetMessageText(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("targetID", targetID) :
                new ObjectParameter("targetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMessageText", targetIDParameter);
        }
    
        public virtual ObjectResult<string> getMessageTypeDescription(Nullable<long> messageTypeID)
        {
            var messageTypeIDParameter = messageTypeID.HasValue ?
                new ObjectParameter("MessageTypeID", messageTypeID) :
                new ObjectParameter("MessageTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getMessageTypeDescription", messageTypeIDParameter);
        }
    
        public virtual ObjectResult<string> getMIMEType(string extension)
        {
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getMIMEType", extensionParameter);
        }
    
        public virtual ObjectResult<GetNofCallsPerState_Result> GetNofCallsPerState(string campaignID, string startDate, string endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNofCallsPerState_Result>("GetNofCallsPerState", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetNofRingtonesPerState_Result> GetNofRingtonesPerState(string campaignID, string startDate, string endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNofRingtonesPerState_Result>("GetNofRingtonesPerState", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> GetNoneDblOptInPhoneNumbers(string phoneNumbers, string messageFlowIds)
        {
            var phoneNumbersParameter = phoneNumbers != null ?
                new ObjectParameter("phoneNumbers", phoneNumbers) :
                new ObjectParameter("phoneNumbers", typeof(string));
    
            var messageFlowIdsParameter = messageFlowIds != null ?
                new ObjectParameter("messageFlowIds", messageFlowIds) :
                new ObjectParameter("messageFlowIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetNoneDblOptInPhoneNumbers", phoneNumbersParameter, messageFlowIdsParameter);
        }
    
        public virtual int GetObamaReport(Nullable<long> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetObamaReport", userIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetObamaVoterLine_Result> GetObamaVoterLine(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetObamaVoterLine_Result>("GetObamaVoterLine", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetOutboundCallScheduleByScheduleID_Result> GetOutboundCallScheduleByScheduleID(Nullable<long> outboundCallScheduleID)
        {
            var outboundCallScheduleIDParameter = outboundCallScheduleID.HasValue ?
                new ObjectParameter("OutboundCallScheduleID", outboundCallScheduleID) :
                new ObjectParameter("OutboundCallScheduleID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOutboundCallScheduleByScheduleID_Result>("GetOutboundCallScheduleByScheduleID", outboundCallScheduleIDParameter);
        }
    
        public virtual ObjectResult<GetOutboundCallSubscriptionList_Result> GetOutboundCallSubscriptionList(Nullable<long> iVRTreeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOutboundCallSubscriptionList_Result>("GetOutboundCallSubscriptionList", iVRTreeIDParameter);
        }
    
        public virtual ObjectResult<GetPDCampaigns_Result> GetPDCampaigns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPDCampaigns_Result>("GetPDCampaigns");
        }
    
        public virtual ObjectResult<GetPhoneNumberFromUserID_Result> GetPhoneNumberFromUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPhoneNumberFromUserID_Result>("GetPhoneNumberFromUserID", userIDParameter);
        }
    
        public virtual ObjectResult<GetPollAnswerAudience_Result> GetPollAnswerAudience(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPollAnswerAudience_Result>("GetPollAnswerAudience", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetPollingResults_Result> GetPollingResults(Nullable<int> pollScheduleID)
        {
            var pollScheduleIDParameter = pollScheduleID.HasValue ?
                new ObjectParameter("PollScheduleID", pollScheduleID) :
                new ObjectParameter("PollScheduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPollingResults_Result>("GetPollingResults", pollScheduleIDParameter);
        }
    
        public virtual ObjectResult<GetPollingUserShortCodeByCampaign_Result> GetPollingUserShortCodeByCampaign(string campaignIds, Nullable<long> userid)
        {
            var campaignIdsParameter = campaignIds != null ?
                new ObjectParameter("CampaignIds", campaignIds) :
                new ObjectParameter("CampaignIds", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPollingUserShortCodeByCampaign_Result>("GetPollingUserShortCodeByCampaign", campaignIdsParameter, useridParameter);
        }
    
        public virtual ObjectResult<GetPollSchedule_Result> GetPollSchedule(Nullable<long> campaignID, Nullable<System.DateTime> startDate, ObjectParameter scheduleID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPollSchedule_Result>("GetPollSchedule", campaignIDParameter, startDateParameter, scheduleID);
        }
    
        public virtual int GetPollStats(Nullable<long> campaignid)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPollStats", campaignidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetPredictiveDialerDNCReport(Nullable<long> campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetPredictiveDialerDNCReport", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetPredictiveDialerHourlyIPBreakdown(Nullable<long> dID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPredictiveDialerHourlyIPBreakdown", dIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetPredictiveDialerLeadsReport(Nullable<long> companyID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPredictiveDialerLeadsReport", companyIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetPredictiveDialerReport(Nullable<long> campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPredictiveDialerReport", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetPredictiveDialerReport5Minute(Nullable<long> campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPredictiveDialerReport5Minute", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetPredictiveDialerUsers(Nullable<long> predictiveDialerScheduleID, string maxCount)
        {
            var predictiveDialerScheduleIDParameter = predictiveDialerScheduleID.HasValue ?
                new ObjectParameter("PredictiveDialerScheduleID", predictiveDialerScheduleID) :
                new ObjectParameter("PredictiveDialerScheduleID", typeof(long));
    
            var maxCountParameter = maxCount != null ?
                new ObjectParameter("MaxCount", maxCount) :
                new ObjectParameter("MaxCount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPredictiveDialerUsers", predictiveDialerScheduleIDParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetPriceFromTransactionID(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetPriceFromTransactionID", transactionIDParameter);
        }
    
        public virtual ObjectResult<GetRandomlySendMessages_Result> GetRandomlySendMessages(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRandomlySendMessages_Result>("GetRandomlySendMessages", dateParameter);
        }
    
        public virtual int GetReachByCampaign()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetReachByCampaign");
        }
    
        public virtual ObjectResult<GetReferAFriendOffer_Result> GetReferAFriendOffer(Nullable<long> companyID, Nullable<long> referredByPhone, Nullable<long> senderPhoneNumber)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var referredByPhoneParameter = referredByPhone.HasValue ?
                new ObjectParameter("ReferredByPhone", referredByPhone) :
                new ObjectParameter("ReferredByPhone", typeof(long));
    
            var senderPhoneNumberParameter = senderPhoneNumber.HasValue ?
                new ObjectParameter("SenderPhoneNumber", senderPhoneNumber) :
                new ObjectParameter("SenderPhoneNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReferAFriendOffer_Result>("GetReferAFriendOffer", companyIDParameter, referredByPhoneParameter, senderPhoneNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetReferAFriendOffer_JT(Nullable<long> companyID, Nullable<long> referredByPhone, Nullable<long> senderPhoneNumber)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var referredByPhoneParameter = referredByPhone.HasValue ?
                new ObjectParameter("ReferredByPhone", referredByPhone) :
                new ObjectParameter("ReferredByPhone", typeof(long));
    
            var senderPhoneNumberParameter = senderPhoneNumber.HasValue ?
                new ObjectParameter("SenderPhoneNumber", senderPhoneNumber) :
                new ObjectParameter("SenderPhoneNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetReferAFriendOffer_JT", companyIDParameter, referredByPhoneParameter, senderPhoneNumberParameter);
        }
    
        public virtual ObjectResult<GetReminders_Result> GetReminders(Nullable<long> campaignid)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReminders_Result>("GetReminders", campaignidParameter);
        }
    
        public virtual ObjectResult<GetRepeatTypes_Result> GetRepeatTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRepeatTypes_Result>("GetRepeatTypes");
        }
    
        public virtual ObjectResult<GetReportAccessByCompanyID_Result> GetReportAccessByCompanyID(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportAccessByCompanyID_Result>("GetReportAccessByCompanyID", companyIDParameter);
        }
    
        public virtual ObjectResult<GetReportingServicesLoginByCompanyID_Result> GetReportingServicesLoginByCompanyID(Nullable<int> companyID, Nullable<int> userID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportingServicesLoginByCompanyID_Result>("GetReportingServicesLoginByCompanyID", companyIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetReportTypes_Result> GetReportTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportTypes_Result>("GetReportTypes");
        }
    
        public virtual ObjectResult<string> GetRideToPollTransferNumber(string zip)
        {
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRideToPollTransferNumber", zipParameter);
        }
    
        public virtual ObjectResult<GetSalesFormEntries_Result> GetSalesFormEntries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesFormEntries_Result>("GetSalesFormEntries");
        }
    
        public virtual ObjectResult<GetSalesPackagesByAccountType_Result> GetSalesPackagesByAccountType(string accountType, Nullable<bool> isNationalSalesRep)
        {
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var isNationalSalesRepParameter = isNationalSalesRep.HasValue ?
                new ObjectParameter("IsNationalSalesRep", isNationalSalesRep) :
                new ObjectParameter("IsNationalSalesRep", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesPackagesByAccountType_Result>("GetSalesPackagesByAccountType", accountTypeParameter, isNationalSalesRepParameter);
        }
    
        public virtual int GetScheduledBroadcastUsers(Nullable<int> batchSize)
        {
            var batchSizeParameter = batchSize.HasValue ?
                new ObjectParameter("BatchSize", batchSize) :
                new ObjectParameter("BatchSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetScheduledBroadcastUsers", batchSizeParameter);
        }
    
        public virtual ObjectResult<GetScheduledIVRUsers_Result> GetScheduledIVRUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduledIVRUsers_Result>("GetScheduledIVRUsers");
        }
    
        public virtual ObjectResult<GetScheduledReportById_Result> GetScheduledReportById(Nullable<long> reportId)
        {
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("reportId", reportId) :
                new ObjectParameter("reportId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduledReportById_Result>("GetScheduledReportById", reportIdParameter);
        }
    
        public virtual ObjectResult<GetScheduledReportsForProcess_Result> GetScheduledReportsForProcess(Nullable<System.DateTime> processdate)
        {
            var processdateParameter = processdate.HasValue ?
                new ObjectParameter("processdate", processdate) :
                new ObjectParameter("processdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduledReportsForProcess_Result>("GetScheduledReportsForProcess", processdateParameter);
        }
    
        public virtual ObjectResult<GetScheduledUsers_Result> GetScheduledUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduledUsers_Result>("GetScheduledUsers");
        }
    
        public virtual ObjectResult<GetScheduledUsers2_Result> GetScheduledUsers2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduledUsers2_Result>("GetScheduledUsers2");
        }
    
        public virtual ObjectResult<GetScheduleReport_Result> GetScheduleReport(string reportName, Nullable<long> userId)
        {
            var reportNameParameter = reportName != null ?
                new ObjectParameter("reportName", reportName) :
                new ObjectParameter("reportName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleReport_Result>("GetScheduleReport", reportNameParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> getServiceBaseURLfromContentType(string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getServiceBaseURLfromContentType", descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetServiceID(Nullable<long> targetID, Nullable<long> carrierID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetServiceID", targetIDParameter, carrierIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetServiceID_TransactionID(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetServiceID_TransactionID", transactionIDParameter);
        }
    
        public virtual ObjectResult<GetShortCodeData_Result> GetShortCodeData(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("transactionID", transactionID) :
                new ObjectParameter("transactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShortCodeData_Result>("GetShortCodeData", transactionIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetShortCodeFromShortCodeInfoID(Nullable<long> shortCodeInfoID)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetShortCodeFromShortCodeInfoID", shortCodeInfoIDParameter);
        }
    
        public virtual ObjectResult<GetShortCodeFromTargetID_Result> GetShortCodeFromTargetID(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("targetID", targetID) :
                new ObjectParameter("targetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShortCodeFromTargetID_Result>("GetShortCodeFromTargetID", targetIDParameter);
        }
    
        public virtual ObjectResult<GetShortCodeFromTransactionID_Result> GetShortCodeFromTransactionID(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShortCodeFromTransactionID_Result>("GetShortCodeFromTransactionID", transactionIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetShortCodeInfo(Nullable<long> shortCode, Nullable<long> companyID)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("shortCode", shortCode) :
                new ObjectParameter("shortCode", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetShortCodeInfo", shortCodeParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetShortCodesByMessageFlowDescription(string messageDescriptionList)
        {
            var messageDescriptionListParameter = messageDescriptionList != null ?
                new ObjectParameter("MessageDescriptionList", messageDescriptionList) :
                new ObjectParameter("MessageDescriptionList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetShortCodesByMessageFlowDescription", messageDescriptionListParameter);
        }
    
        public virtual ObjectResult<GetShortCodesByMessageFlowIds_Result> GetShortCodesByMessageFlowIds(string messageFlowIdList)
        {
            var messageFlowIdListParameter = messageFlowIdList != null ?
                new ObjectParameter("MessageFlowIdList", messageFlowIdList) :
                new ObjectParameter("MessageFlowIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShortCodesByMessageFlowIds_Result>("GetShortCodesByMessageFlowIds", messageFlowIdListParameter);
        }
    
        public virtual ObjectResult<getShortestDistance_CountyLatLong_Result> getShortestDistance_CountyLatLong(string county, Nullable<decimal> lat, Nullable<decimal> @long)
        {
            var countyParameter = county != null ?
                new ObjectParameter("County", county) :
                new ObjectParameter("County", typeof(string));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(decimal));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getShortestDistance_CountyLatLong_Result>("getShortestDistance_CountyLatLong", countyParameter, latParameter, longParameter);
        }
    
        public virtual ObjectResult<GetSmartSMSOffer_Result> GetSmartSMSOffer(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSmartSMSOffer_Result>("GetSmartSMSOffer", companyIDParameter);
        }
    
        public virtual ObjectResult<GetSmartSMSTemplate_Result> GetSmartSMSTemplate(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSmartSMSTemplate_Result>("GetSmartSMSTemplate", companyIDParameter);
        }
    
        public virtual int GetSMSCountsByDayForDashboardChart(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, string market, Nullable<int> filter, string search)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var marketParameter = market != null ?
                new ObjectParameter("market", market) :
                new ObjectParameter("market", typeof(string));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSMSCountsByDayForDashboardChart", userIDParameter, companyIDParameter, isAdminParameter, marketParameter, filterParameter, searchParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetStamptLink()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetStamptLink");
        }
    
        public virtual int GetStamptLinkUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetStamptLinkUsers");
        }
    
        public virtual ObjectResult<GetStamptLinkUsersByLogin_Result> GetStamptLinkUsersByLogin(string c4Login)
        {
            var c4LoginParameter = c4Login != null ?
                new ObjectParameter("C4Login", c4Login) :
                new ObjectParameter("C4Login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStamptLinkUsersByLogin_Result>("GetStamptLinkUsersByLogin", c4LoginParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetStartedCallCountByCampaignID(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetStartedCallCountByCampaignID", campaignIDParameter);
        }
    
        public virtual ObjectResult<string> GetStateAbbrev(string zip)
        {
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetStateAbbrev", zipParameter);
        }
    
        public virtual ObjectResult<GetStatesByCountryID_Result> GetStatesByCountryID(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStatesByCountryID_Result>("GetStatesByCountryID", countryIDParameter);
        }
    
        public virtual ObjectResult<GetSubscribedExemptPhoneList_Result> GetSubscribedExemptPhoneList(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubscribedExemptPhoneList_Result>("GetSubscribedExemptPhoneList", companyIDParameter);
        }
    
        public virtual int GetSubscribersByDayForDashboardChart(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, string market, Nullable<int> filter, string search)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var marketParameter = market != null ?
                new ObjectParameter("market", market) :
                new ObjectParameter("market", typeof(string));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSubscribersByDayForDashboardChart", userIDParameter, companyIDParameter, isAdminParameter, marketParameter, filterParameter, searchParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetSubscribeTargetIdByCamapignID(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetSubscribeTargetIdByCamapignID", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetTargetByTransaction_Result> GetTargetByTransaction(Nullable<long> shortCode)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTargetByTransaction_Result>("GetTargetByTransaction", shortCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetTargetCost(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetTargetCost", targetIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetTargetForMessageFlowScheduleByMessageFlowID(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetTargetForMessageFlowScheduleByMessageFlowID", messageFlowIDParameter);
        }
    
        public virtual int getTargetResults(string begin, string end, string campaignID)
        {
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getTargetResults", beginParameter, endParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<GetTemplateBackgroundList_Result> GetTemplateBackgroundList(Nullable<int> templateid)
        {
            var templateidParameter = templateid.HasValue ?
                new ObjectParameter("templateid", templateid) :
                new ObjectParameter("templateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTemplateBackgroundList_Result>("GetTemplateBackgroundList", templateidParameter);
        }
    
        public virtual ObjectResult<GetTemplateList_Result> GetTemplateList(string companyID)
        {
            var companyIDParameter = companyID != null ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTemplateList_Result>("GetTemplateList", companyIDParameter);
        }
    
        public virtual ObjectResult<GetTickerMessages_Result> GetTickerMessages(string bucketname, Nullable<long> graphicID)
        {
            var bucketnameParameter = bucketname != null ?
                new ObjectParameter("bucketname", bucketname) :
                new ObjectParameter("bucketname", typeof(string));
    
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("graphicID", graphicID) :
                new ObjectParameter("graphicID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTickerMessages_Result>("GetTickerMessages", bucketnameParameter, graphicIDParameter);
        }
    
        public virtual ObjectResult<GetTimePeriods_Result> GetTimePeriods()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimePeriods_Result>("GetTimePeriods");
        }
    
        public virtual ObjectResult<GetTrainingGuides_Result> GetTrainingGuides()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrainingGuides_Result>("GetTrainingGuides");
        }
    
        public virtual ObjectResult<GetTrainingGuidesByID_Result> GetTrainingGuidesByID(string trIDs)
        {
            var trIDsParameter = trIDs != null ?
                new ObjectParameter("trIDs", trIDs) :
                new ObjectParameter("trIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrainingGuidesByID_Result>("GetTrainingGuidesByID", trIDsParameter);
        }
    
        public virtual ObjectResult<GetTrainingGuidesByUser_Result> GetTrainingGuidesByUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrainingGuidesByUser_Result>("GetTrainingGuidesByUser", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetTransfersForPastHour(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTransfersForPastHour", campaignIDParameter);
        }
    
        public virtual ObjectResult<GetTransferTarget_Result> GetTransferTarget(string zip)
        {
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransferTarget_Result>("GetTransferTarget", zipParameter);
        }
    
        public virtual ObjectResult<GetUser_Result> GetUser(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_Result>("GetUser", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetUserIDFromUserLogin(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetUserIDFromUserLogin", userLoginParameter);
        }
    
        public virtual ObjectResult<GetUserInfo_Result> GetUserInfo(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserInfo_Result>("GetUserInfo", userIdParameter);
        }
    
        public virtual int GetUserIVRDetailsInfoWithPaging(Nullable<long> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> displayStart, Nullable<int> displayLength, string sortOrder, Nullable<int> sortCol)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("displayStart", displayStart) :
                new ObjectParameter("displayStart", typeof(int));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("displayLength", displayLength) :
                new ObjectParameter("displayLength", typeof(int));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("sortCol", sortCol) :
                new ObjectParameter("sortCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserIVRDetailsInfoWithPaging", userIDParameter, startDateParameter, endDateParameter, displayStartParameter, displayLengthParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual ObjectResult<GetUserLoginInfo_Result> GetUserLoginInfo(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserLoginInfo_Result>("GetUserLoginInfo", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserPhoneByTransID_Result> GetUserPhoneByTransID(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserPhoneByTransID_Result>("GetUserPhoneByTransID", transactionIDParameter);
        }
    
        public virtual ObjectResult<GetUserPhoneNumberAndCarrierIDByUserID_Result> GetUserPhoneNumberAndCarrierIDByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserPhoneNumberAndCarrierIDByUserID_Result>("GetUserPhoneNumberAndCarrierIDByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<string> GetUserPhoneNumberTypeByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserPhoneNumberTypeByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<GetUserReportsHistory_Result> GetUserReportsHistory(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserReportsHistory_Result>("GetUserReportsHistory", userIDParameter);
        }
    
        public virtual ObjectResult<GetUsersCarriers_Result> GetUsersCarriers(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersCarriers_Result>("GetUsersCarriers", companyIDParameter);
        }
    
        public virtual ObjectResult<getUserSecurityLoginPassword_with_UserID_Result> getUserSecurityLoginPassword_with_UserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserSecurityLoginPassword_with_UserID_Result>("getUserSecurityLoginPassword_with_UserID", userIDParameter);
        }
    
        public virtual int GetUsersForBroadcastAPI(Nullable<long> campaignID, Nullable<long> messageFlowID, string shortCodeProvider, Nullable<bool> forCarrierLookupOnly)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var forCarrierLookupOnlyParameter = forCarrierLookupOnly.HasValue ?
                new ObjectParameter("ForCarrierLookupOnly", forCarrierLookupOnly) :
                new ObjectParameter("ForCarrierLookupOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersForBroadcastAPI", campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, forCarrierLookupOnlyParameter);
        }
    
        public virtual int GetUsersForRegularBroadcast(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, string shortCodeProvider, Nullable<int> timeZoneID, Nullable<bool> isTotalOnly)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var isTotalOnlyParameter = isTotalOnly.HasValue ?
                new ObjectParameter("IsTotalOnly", isTotalOnly) :
                new ObjectParameter("IsTotalOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersForRegularBroadcast", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, shortCodeProviderParameter, timeZoneIDParameter, isTotalOnlyParameter);
        }
    
        public virtual int GetUsersForUniversalBroadcast(string messageFlowID, Nullable<bool> isTotalOnly, string shortCodeProvider, Nullable<int> timeZoneID, ObjectParameter totalRows)
        {
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var isTotalOnlyParameter = isTotalOnly.HasValue ?
                new ObjectParameter("IsTotalOnly", isTotalOnly) :
                new ObjectParameter("IsTotalOnly", typeof(bool));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersForUniversalBroadcast", messageFlowIDParameter, isTotalOnlyParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRows);
        }
    
        public virtual int GetUserSMSDetailsInfoWithPaging(Nullable<long> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> displayStart, Nullable<int> displayLength, string sortOrder, Nullable<int> sortCol)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("displayStart", displayStart) :
                new ObjectParameter("displayStart", typeof(int));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("displayLength", displayLength) :
                new ObjectParameter("displayLength", typeof(int));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("sortCol", sortCol) :
                new ObjectParameter("sortCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserSMSDetailsInfoWithPaging", userIDParameter, startDateParameter, endDateParameter, displayStartParameter, displayLengthParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual ObjectResult<GetUserSubscriptionDetails_Result> GetUserSubscriptionDetails(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserSubscriptionDetails_Result>("GetUserSubscriptionDetails", userIDParameter);
        }
    
        public virtual ObjectResult<GetUserSubscriptionDetailsByUserAndCompany_Result> GetUserSubscriptionDetailsByUserAndCompany(Nullable<long> userID, Nullable<long> companyId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserSubscriptionDetailsByUserAndCompany_Result>("GetUserSubscriptionDetailsByUserAndCompany", userIDParameter, companyIdParameter);
        }
    
        public virtual int GetUserSubscriptionInfo(Nullable<long> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserSubscriptionInfo", userIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GetUserSubscriptionInfoWithPaging(Nullable<long> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> displayStart, Nullable<int> displayLength, string sortOrder, Nullable<int> sortCol)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("displayStart", displayStart) :
                new ObjectParameter("displayStart", typeof(int));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("displayLength", displayLength) :
                new ObjectParameter("displayLength", typeof(int));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("sortCol", sortCol) :
                new ObjectParameter("sortCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserSubscriptionInfoWithPaging", userIDParameter, startDateParameter, endDateParameter, displayStartParameter, displayLengthParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual ObjectResult<GetUserSubscriptions_Result> GetUserSubscriptions(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserSubscriptions_Result>("GetUserSubscriptions", userIDParameter);
        }
    
        public virtual int GetUserTransactionDetailsInfoWithPaging(Nullable<long> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> displayStart, Nullable<int> displayLength, string sortOrder, Nullable<int> sortCol)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("displayStart", displayStart) :
                new ObjectParameter("displayStart", typeof(int));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("displayLength", displayLength) :
                new ObjectParameter("displayLength", typeof(int));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("sortCol", sortCol) :
                new ObjectParameter("sortCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserTransactionDetailsInfoWithPaging", userIDParameter, startDateParameter, endDateParameter, displayStartParameter, displayLengthParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual ObjectResult<GetViewableCampaignsForConfiguration_Result> GetViewableCampaignsForConfiguration(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, string search, string filter)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetViewableCampaignsForConfiguration_Result>("GetViewableCampaignsForConfiguration", userIDParameter, companyIDParameter, isAdminParameter, searchParameter, filterParameter);
        }
    
        public virtual ObjectResult<GetViewableCampaignsForConfigurationWithFilter_Result> GetViewableCampaignsForConfigurationWithFilter(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, Nullable<short> filter, string search, Nullable<short> displayLength, Nullable<short> displayStart, string sortOrder, Nullable<short> sortCol)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(short));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(short));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(short));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetViewableCampaignsForConfigurationWithFilter_Result>("GetViewableCampaignsForConfigurationWithFilter", userIDParameter, companyIDParameter, isAdminParameter, filterParameter, searchParameter, displayLengthParameter, displayStartParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetViewableCampaignsForConfigurationWithFilterCount(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, string filter, string search)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetViewableCampaignsForConfigurationWithFilterCount", userIDParameter, companyIDParameter, isAdminParameter, filterParameter, searchParameter);
        }
    
        public virtual ObjectResult<GetViewableCampaignsForConfigurationWithFilterSearch_Result> GetViewableCampaignsForConfigurationWithFilterSearch(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, Nullable<short> filter, string search, Nullable<short> displayLength, Nullable<short> displayStart, string sortOrder, Nullable<short> sortCol)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(short));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(short));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(short));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetViewableCampaignsForConfigurationWithFilterSearch_Result>("GetViewableCampaignsForConfigurationWithFilterSearch", userIDParameter, companyIDParameter, isAdminParameter, filterParameter, searchParameter, displayLengthParameter, displayStartParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual int GetViewableCampaignsForDashboard(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, Nullable<int> displayStart, Nullable<int> displayLength, string sortOrder, Nullable<int> sortCol, string market, Nullable<int> filter, string search)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("displayStart", displayStart) :
                new ObjectParameter("displayStart", typeof(int));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("displayLength", displayLength) :
                new ObjectParameter("displayLength", typeof(int));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("sortCol", sortCol) :
                new ObjectParameter("sortCol", typeof(int));
    
            var marketParameter = market != null ?
                new ObjectParameter("market", market) :
                new ObjectParameter("market", typeof(string));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetViewableCampaignsForDashboard", userIDParameter, companyIDParameter, isAdminParameter, displayStartParameter, displayLengthParameter, sortOrderParameter, sortColParameter, marketParameter, filterParameter, searchParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetViewableCampaignsIds(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, string search, string filter)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetViewableCampaignsIds", userIDParameter, companyIDParameter, isAdminParameter, searchParameter, filterParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetViewableCampaignsIdsPaging(Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, Nullable<int> displayLength, Nullable<int> displayStart, string sortOrder, Nullable<int> sortCol)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetViewableCampaignsIdsPaging", userIDParameter, companyIDParameter, isAdminParameter, displayLengthParameter, displayStartParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual ObjectResult<GetZipInfo_Result> GetZipInfo(string zip)
        {
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetZipInfo_Result>("GetZipInfo", zipParameter);
        }
    
        public virtual ObjectResult<GlobalIsUserSubscribed_Result> GlobalIsUserSubscribed(Nullable<long> phone)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GlobalIsUserSubscribed_Result>("GlobalIsUserSubscribed", phoneParameter);
        }
    
        public virtual int GlobalUserIVRUnsubscribe(Nullable<long> phone)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlobalUserIVRUnsubscribe", phoneParameter);
        }
    
        public virtual int GlobalUserUnsubscribe(Nullable<long> phone)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlobalUserUnsubscribe", phoneParameter);
        }
    
        public virtual int GraphicDelete(string idList)
        {
            var idListParameter = idList != null ?
                new ObjectParameter("idList", idList) :
                new ObjectParameter("idList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GraphicDelete", idListParameter);
        }
    
        public virtual int GraphicUpdate(Nullable<int> graphicid, string title, Nullable<int> graphicType, string email, string tickerURL, Nullable<int> statusType, Nullable<int> graphicTemplateId, Nullable<int> graphicBackgoundId, string backgroundColor, Nullable<bool> ispublic, Nullable<long> campaignid)
        {
            var graphicidParameter = graphicid.HasValue ?
                new ObjectParameter("graphicid", graphicid) :
                new ObjectParameter("graphicid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var graphicTypeParameter = graphicType.HasValue ?
                new ObjectParameter("GraphicType", graphicType) :
                new ObjectParameter("GraphicType", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var tickerURLParameter = tickerURL != null ?
                new ObjectParameter("TickerURL", tickerURL) :
                new ObjectParameter("TickerURL", typeof(string));
    
            var statusTypeParameter = statusType.HasValue ?
                new ObjectParameter("StatusType", statusType) :
                new ObjectParameter("StatusType", typeof(int));
    
            var graphicTemplateIdParameter = graphicTemplateId.HasValue ?
                new ObjectParameter("GraphicTemplateId", graphicTemplateId) :
                new ObjectParameter("GraphicTemplateId", typeof(int));
    
            var graphicBackgoundIdParameter = graphicBackgoundId.HasValue ?
                new ObjectParameter("GraphicBackgoundId", graphicBackgoundId) :
                new ObjectParameter("GraphicBackgoundId", typeof(int));
    
            var backgroundColorParameter = backgroundColor != null ?
                new ObjectParameter("BackgroundColor", backgroundColor) :
                new ObjectParameter("BackgroundColor", typeof(string));
    
            var ispublicParameter = ispublic.HasValue ?
                new ObjectParameter("ispublic", ispublic) :
                new ObjectParameter("ispublic", typeof(bool));
    
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GraphicUpdate", graphicidParameter, titleParameter, graphicTypeParameter, emailParameter, tickerURLParameter, statusTypeParameter, graphicTemplateIdParameter, graphicBackgoundIdParameter, backgroundColorParameter, ispublicParameter, campaignidParameter);
        }
    
        public virtual ObjectResult<HasContactsAccess_Result> HasContactsAccess(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HasContactsAccess_Result>("HasContactsAccess", userIdParameter);
        }
    
        public virtual int HasExceededMaxInteractionsIVR(Nullable<long> campaignID, Nullable<long> userID, ObjectParameter hasExceeded, ObjectParameter iVRTreeDestinationID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HasExceededMaxInteractionsIVR", campaignIDParameter, userIDParameter, hasExceeded, iVRTreeDestinationID);
        }
    
        public virtual int HasExceededMaxInteractionsMessaging(Nullable<long> campaignID, Nullable<long> userID, ObjectParameter hasExceeded, ObjectParameter messagingTargetID, ObjectParameter hasExceededReplies)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HasExceededMaxInteractionsMessaging", campaignIDParameter, userIDParameter, hasExceeded, messagingTargetID, hasExceededReplies);
        }
    
        public virtual int HasExceededMaxReplies(Nullable<long> campaignID, Nullable<long> userID, ObjectParameter hasExceededReplies)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HasExceededMaxReplies", campaignIDParameter, userIDParameter, hasExceededReplies);
        }
    
        public virtual ObjectResult<HCANReportView_Result> HCANReportView(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> tollFree, Nullable<long> campaignID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var tollFreeParameter = tollFree.HasValue ?
                new ObjectParameter("TollFree", tollFree) :
                new ObjectParameter("TollFree", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HCANReportView_Result>("HCANReportView", startDateParameter, endDateParameter, tollFreeParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<HCANReportViewTemp_Result> HCANReportViewTemp(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> tollFree, Nullable<long> campaignID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var tollFreeParameter = tollFree.HasValue ?
                new ObjectParameter("TollFree", tollFree) :
                new ObjectParameter("TollFree", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HCANReportViewTemp_Result>("HCANReportViewTemp", startDateParameter, endDateParameter, tollFreeParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<string> ImportNBCphoneNumbers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ImportNBCphoneNumbers");
        }
    
        public virtual int InsertAutoPlayMessageTransaction(Nullable<long> phone, Nullable<long> campaignID, string message)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAutoPlayMessageTransaction", phoneParameter, campaignIDParameter, messageParameter);
        }
    
        public virtual int InsertBroadcastSMS(Nullable<long> broadcastQueueID, Nullable<long> broadcastBatchID, Nullable<long> phoneNumber, Nullable<int> broadcastSMSBatchID)
        {
            var broadcastQueueIDParameter = broadcastQueueID.HasValue ?
                new ObjectParameter("BroadcastQueueID", broadcastQueueID) :
                new ObjectParameter("BroadcastQueueID", typeof(long));
    
            var broadcastBatchIDParameter = broadcastBatchID.HasValue ?
                new ObjectParameter("BroadcastBatchID", broadcastBatchID) :
                new ObjectParameter("BroadcastBatchID", typeof(long));
    
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(long));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID.HasValue ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBroadcastSMS", broadcastQueueIDParameter, broadcastBatchIDParameter, phoneNumberParameter, broadcastSMSBatchIDParameter);
        }
    
        public virtual int InsertBroadcastSMSMessagetextArchive(Nullable<long> companyID, string messageText)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBroadcastSMSMessagetextArchive", companyIDParameter, messageTextParameter);
        }
    
        public virtual int InsertBroadcastSMSMessagetextUserArchive(Nullable<long> companyID, Nullable<long> userID, string messageText, string tag)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBroadcastSMSMessagetextUserArchive", companyIDParameter, userIDParameter, messageTextParameter, tagParameter);
        }
    
        public virtual int InsertCampaignLocation(Nullable<long> campaignID, string region, string sREntityID, string address, string address2, string city, string state, string zipcode, string email)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var sREntityIDParameter = sREntityID != null ?
                new ObjectParameter("SREntityID", sREntityID) :
                new ObjectParameter("SREntityID", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCampaignLocation", campaignIDParameter, regionParameter, sREntityIDParameter, addressParameter, address2Parameter, cityParameter, stateParameter, zipcodeParameter, emailParameter);
        }
    
        public virtual int InsertCampaignSchedules(Nullable<int> campaignID, Nullable<int> campaignTypeID, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<bool> active, Nullable<int> timeZoneID, Nullable<int> pollID, string timeZoneAbbr)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var campaignTypeIDParameter = campaignTypeID.HasValue ?
                new ObjectParameter("CampaignTypeID", campaignTypeID) :
                new ObjectParameter("CampaignTypeID", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var pollIDParameter = pollID.HasValue ?
                new ObjectParameter("PollID", pollID) :
                new ObjectParameter("PollID", typeof(int));
    
            var timeZoneAbbrParameter = timeZoneAbbr != null ?
                new ObjectParameter("TimeZoneAbbr", timeZoneAbbr) :
                new ObjectParameter("TimeZoneAbbr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCampaignSchedules", campaignIDParameter, campaignTypeIDParameter, startTimeParameter, endTimeParameter, activeParameter, timeZoneIDParameter, pollIDParameter, timeZoneAbbrParameter);
        }
    
        public virtual int InsertDA_CallQueue(Nullable<long> callerID, Nullable<long> cDRID, Nullable<long> campaignID)
        {
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDA_CallQueue", callerIDParameter, cDRIDParameter, campaignIDParameter);
        }
    
        public virtual int insertDA_CategoryRelationship(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertDA_CategoryRelationship", campaignIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> insertDA_Transfer(Nullable<long> cDRID, Nullable<long> campaignID, Nullable<long> dA_DirectoryEntryID)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var dA_DirectoryEntryIDParameter = dA_DirectoryEntryID.HasValue ?
                new ObjectParameter("DA_DirectoryEntryID", dA_DirectoryEntryID) :
                new ObjectParameter("DA_DirectoryEntryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("insertDA_Transfer", cDRIDParameter, campaignIDParameter, dA_DirectoryEntryIDParameter);
        }
    
        public virtual int InsertMessageTransaction(Nullable<long> phone, Nullable<long> campaignID, string message, Nullable<int> messageTypeID)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var messageTypeIDParameter = messageTypeID.HasValue ?
                new ObjectParameter("MessageTypeID", messageTypeID) :
                new ObjectParameter("MessageTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMessageTransaction", phoneParameter, campaignIDParameter, messageParameter, messageTypeIDParameter);
        }
    
        public virtual int InsertMessageTransactionInBulk()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMessageTransactionInBulk");
        }
    
        public virtual int InsertOptInSourceByCampaign(Nullable<long> phoneNumber, string keyWord, string optInSource, Nullable<long> shortcode, string zipCode, string favoriteStore, ObjectParameter rowsUpdated)
        {
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(long));
    
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var optInSourceParameter = optInSource != null ?
                new ObjectParameter("OptInSource", optInSource) :
                new ObjectParameter("OptInSource", typeof(string));
    
            var shortcodeParameter = shortcode.HasValue ?
                new ObjectParameter("Shortcode", shortcode) :
                new ObjectParameter("Shortcode", typeof(long));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var favoriteStoreParameter = favoriteStore != null ?
                new ObjectParameter("FavoriteStore", favoriteStore) :
                new ObjectParameter("FavoriteStore", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOptInSourceByCampaign", phoneNumberParameter, keyWordParameter, optInSourceParameter, shortcodeParameter, zipCodeParameter, favoriteStoreParameter, rowsUpdated);
        }
    
        public virtual int InsertPollAnswerAudience(Nullable<int> pollAnswerID, Nullable<int> audienceSize, Nullable<System.DateTime> fromActiveDate, Nullable<System.DateTime> toActiveDate, string title)
        {
            var pollAnswerIDParameter = pollAnswerID.HasValue ?
                new ObjectParameter("PollAnswerID", pollAnswerID) :
                new ObjectParameter("PollAnswerID", typeof(int));
    
            var audienceSizeParameter = audienceSize.HasValue ?
                new ObjectParameter("AudienceSize", audienceSize) :
                new ObjectParameter("AudienceSize", typeof(int));
    
            var fromActiveDateParameter = fromActiveDate.HasValue ?
                new ObjectParameter("FromActiveDate", fromActiveDate) :
                new ObjectParameter("FromActiveDate", typeof(System.DateTime));
    
            var toActiveDateParameter = toActiveDate.HasValue ?
                new ObjectParameter("ToActiveDate", toActiveDate) :
                new ObjectParameter("ToActiveDate", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPollAnswerAudience", pollAnswerIDParameter, audienceSizeParameter, fromActiveDateParameter, toActiveDateParameter, titleParameter);
        }
    
        public virtual int InsertReport_BroadcastSummaryCompleteGroupView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertReport_BroadcastSummaryCompleteGroupView");
        }
    
        public virtual int InsertSonicStoreID(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSonicStoreID", keywordParameter);
        }
    
        public virtual int InsertStamtLink(Nullable<long> userID, Nullable<long> merchantID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertStamtLink", userIDParameter, merchantIDParameter);
        }
    
        public virtual int InsertSubscribedExemptPhoneList(Nullable<long> companyId, Nullable<long> phone)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSubscribedExemptPhoneList", companyIdParameter, phoneParameter);
        }
    
        public virtual int InsertSubwayUniqueSubscriberCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSubwayUniqueSubscriberCount");
        }
    
        public virtual int InsertWebServiceLog(string functionName, string projectName, string parameterList, string queryString, Nullable<bool> isError, string errorMessage, string iPAddress)
        {
            var functionNameParameter = functionName != null ?
                new ObjectParameter("FunctionName", functionName) :
                new ObjectParameter("FunctionName", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var parameterListParameter = parameterList != null ?
                new ObjectParameter("ParameterList", parameterList) :
                new ObjectParameter("ParameterList", typeof(string));
    
            var queryStringParameter = queryString != null ?
                new ObjectParameter("QueryString", queryString) :
                new ObjectParameter("QueryString", typeof(string));
    
            var isErrorParameter = isError.HasValue ?
                new ObjectParameter("IsError", isError) :
                new ObjectParameter("IsError", typeof(bool));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWebServiceLog", functionNameParameter, projectNameParameter, parameterListParameter, queryStringParameter, isErrorParameter, errorMessageParameter, iPAddressParameter);
        }
    
        public virtual int InternalInformationInsert(Nullable<long> companyID, string accountManagerName, string accountManagerEmail, string smartSMSOfferCalendarImagePath, string smartSMSOfferCalendarImageFileName, string smartSMSOfferCalendarTitle, string smartSMSOfferCalendarCaption, Nullable<bool> smartSMSOfferCallendarIsCollapsed, string smartReceiptOfferCalendarImagePath, string smartReceiptOfferCalendarImageFileName, string smartReceiptOfferCalendarTitle, string smartReceiptOfferCalendarCaption, Nullable<bool> smartReceiptOfferCallendarIsCollapsed, string marketingMaterialsImagePath, string marketingMaterialsImageFileName, string marketingMaterialsTitle, string marketingMaterialsCaption, Nullable<bool> marketingMaterialsIsCollapsed)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var accountManagerNameParameter = accountManagerName != null ?
                new ObjectParameter("AccountManagerName", accountManagerName) :
                new ObjectParameter("AccountManagerName", typeof(string));
    
            var accountManagerEmailParameter = accountManagerEmail != null ?
                new ObjectParameter("AccountManagerEmail", accountManagerEmail) :
                new ObjectParameter("AccountManagerEmail", typeof(string));
    
            var smartSMSOfferCalendarImagePathParameter = smartSMSOfferCalendarImagePath != null ?
                new ObjectParameter("SmartSMSOfferCalendarImagePath", smartSMSOfferCalendarImagePath) :
                new ObjectParameter("SmartSMSOfferCalendarImagePath", typeof(string));
    
            var smartSMSOfferCalendarImageFileNameParameter = smartSMSOfferCalendarImageFileName != null ?
                new ObjectParameter("SmartSMSOfferCalendarImageFileName", smartSMSOfferCalendarImageFileName) :
                new ObjectParameter("SmartSMSOfferCalendarImageFileName", typeof(string));
    
            var smartSMSOfferCalendarTitleParameter = smartSMSOfferCalendarTitle != null ?
                new ObjectParameter("SmartSMSOfferCalendarTitle", smartSMSOfferCalendarTitle) :
                new ObjectParameter("SmartSMSOfferCalendarTitle", typeof(string));
    
            var smartSMSOfferCalendarCaptionParameter = smartSMSOfferCalendarCaption != null ?
                new ObjectParameter("SmartSMSOfferCalendarCaption", smartSMSOfferCalendarCaption) :
                new ObjectParameter("SmartSMSOfferCalendarCaption", typeof(string));
    
            var smartSMSOfferCallendarIsCollapsedParameter = smartSMSOfferCallendarIsCollapsed.HasValue ?
                new ObjectParameter("SmartSMSOfferCallendarIsCollapsed", smartSMSOfferCallendarIsCollapsed) :
                new ObjectParameter("SmartSMSOfferCallendarIsCollapsed", typeof(bool));
    
            var smartReceiptOfferCalendarImagePathParameter = smartReceiptOfferCalendarImagePath != null ?
                new ObjectParameter("SmartReceiptOfferCalendarImagePath", smartReceiptOfferCalendarImagePath) :
                new ObjectParameter("SmartReceiptOfferCalendarImagePath", typeof(string));
    
            var smartReceiptOfferCalendarImageFileNameParameter = smartReceiptOfferCalendarImageFileName != null ?
                new ObjectParameter("SmartReceiptOfferCalendarImageFileName", smartReceiptOfferCalendarImageFileName) :
                new ObjectParameter("SmartReceiptOfferCalendarImageFileName", typeof(string));
    
            var smartReceiptOfferCalendarTitleParameter = smartReceiptOfferCalendarTitle != null ?
                new ObjectParameter("SmartReceiptOfferCalendarTitle", smartReceiptOfferCalendarTitle) :
                new ObjectParameter("SmartReceiptOfferCalendarTitle", typeof(string));
    
            var smartReceiptOfferCalendarCaptionParameter = smartReceiptOfferCalendarCaption != null ?
                new ObjectParameter("SmartReceiptOfferCalendarCaption", smartReceiptOfferCalendarCaption) :
                new ObjectParameter("SmartReceiptOfferCalendarCaption", typeof(string));
    
            var smartReceiptOfferCallendarIsCollapsedParameter = smartReceiptOfferCallendarIsCollapsed.HasValue ?
                new ObjectParameter("SmartReceiptOfferCallendarIsCollapsed", smartReceiptOfferCallendarIsCollapsed) :
                new ObjectParameter("SmartReceiptOfferCallendarIsCollapsed", typeof(bool));
    
            var marketingMaterialsImagePathParameter = marketingMaterialsImagePath != null ?
                new ObjectParameter("MarketingMaterialsImagePath", marketingMaterialsImagePath) :
                new ObjectParameter("MarketingMaterialsImagePath", typeof(string));
    
            var marketingMaterialsImageFileNameParameter = marketingMaterialsImageFileName != null ?
                new ObjectParameter("MarketingMaterialsImageFileName", marketingMaterialsImageFileName) :
                new ObjectParameter("MarketingMaterialsImageFileName", typeof(string));
    
            var marketingMaterialsTitleParameter = marketingMaterialsTitle != null ?
                new ObjectParameter("MarketingMaterialsTitle", marketingMaterialsTitle) :
                new ObjectParameter("MarketingMaterialsTitle", typeof(string));
    
            var marketingMaterialsCaptionParameter = marketingMaterialsCaption != null ?
                new ObjectParameter("MarketingMaterialsCaption", marketingMaterialsCaption) :
                new ObjectParameter("MarketingMaterialsCaption", typeof(string));
    
            var marketingMaterialsIsCollapsedParameter = marketingMaterialsIsCollapsed.HasValue ?
                new ObjectParameter("MarketingMaterialsIsCollapsed", marketingMaterialsIsCollapsed) :
                new ObjectParameter("MarketingMaterialsIsCollapsed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InternalInformationInsert", companyIDParameter, accountManagerNameParameter, accountManagerEmailParameter, smartSMSOfferCalendarImagePathParameter, smartSMSOfferCalendarImageFileNameParameter, smartSMSOfferCalendarTitleParameter, smartSMSOfferCalendarCaptionParameter, smartSMSOfferCallendarIsCollapsedParameter, smartReceiptOfferCalendarImagePathParameter, smartReceiptOfferCalendarImageFileNameParameter, smartReceiptOfferCalendarTitleParameter, smartReceiptOfferCalendarCaptionParameter, smartReceiptOfferCallendarIsCollapsedParameter, marketingMaterialsImagePathParameter, marketingMaterialsImageFileNameParameter, marketingMaterialsTitleParameter, marketingMaterialsCaptionParameter, marketingMaterialsIsCollapsedParameter);
        }
    
        public virtual ObjectResult<InternalReportView_Result> InternalReportView(string company, string campaign, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var campaignParameter = campaign != null ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InternalReportView_Result>("InternalReportView", companyParameter, campaignParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> isCCTransactionNumFree(string cCTransactionNumber)
        {
            var cCTransactionNumberParameter = cCTransactionNumber != null ?
                new ObjectParameter("CCTransactionNumber", cCTransactionNumber) :
                new ObjectParameter("CCTransactionNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("isCCTransactionNumFree", cCTransactionNumberParameter);
        }
    
        public virtual ObjectResult<isDIDfree_Result> isDIDfree(Nullable<long> dID, Nullable<long> campaignID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isDIDfree_Result>("isDIDfree", dIDParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> isFirstOptIn(Nullable<long> transactionID, string messageText)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("isFirstOptIn", transactionIDParameter, messageTextParameter);
        }
    
        public virtual int IsGroupNameAvailable(Nullable<long> campaignId, string groupName, ObjectParameter groupAvailable)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(long));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IsGroupNameAvailable", campaignIdParameter, groupNameParameter, groupAvailable);
        }
    
        public virtual ObjectResult<isKeywordActive_Result> isKeywordActive(string keyword, Nullable<long> shortCode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isKeywordActive_Result>("isKeywordActive", keywordParameter, shortCodeParameter);
        }
    
        public virtual ObjectResult<isKeywordAParam_Result> isKeywordAParam(Nullable<long> shortCode, string keyword)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isKeywordAParam_Result>("isKeywordAParam", shortCodeParameter, keywordParameter);
        }
    
        public virtual ObjectResult<isKeywordAssociatedWithShortCode_Result> isKeywordAssociatedWithShortCode(string keyword, Nullable<long> shortCode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isKeywordAssociatedWithShortCode_Result>("isKeywordAssociatedWithShortCode", keywordParameter, shortCodeParameter);
        }
    
        public virtual int isLoginUnique(string login, ObjectParameter countLogin)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("isLoginUnique", loginParameter, countLogin);
        }
    
        public virtual ObjectResult<isPSMSalreadySent_Result> isPSMSalreadySent(string gUID, string description)
        {
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isPSMSalreadySent_Result>("isPSMSalreadySent", gUIDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> isTargetIDinIVRTree(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("isTargetIDinIVRTree", targetIDParameter);
        }
    
        public virtual ObjectResult<IsUserSubscribed_Result> IsUserSubscribed(Nullable<long> campaignid, Nullable<long> phone, Nullable<long> targetid)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("Campaignid", campaignid) :
                new ObjectParameter("Campaignid", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var targetidParameter = targetid.HasValue ?
                new ObjectParameter("Targetid", targetid) :
                new ObjectParameter("Targetid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IsUserSubscribed_Result>("IsUserSubscribed", campaignidParameter, phoneParameter, targetidParameter);
        }
    
        public virtual ObjectResult<IVRDeactivationCount_Result> IVRDeactivationCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IVRDeactivationCount_Result>("IVRDeactivationCount");
        }
    
        public virtual int IVRTreeDelete(Nullable<long> iVRTreeID, ObjectParameter intSuccess)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeDelete", iVRTreeIDParameter, intSuccess);
        }
    
        public virtual int IVRTreeFile(string audioURL, Nullable<long> companyID)
        {
            var audioURLParameter = audioURL != null ?
                new ObjectParameter("AudioURL", audioURL) :
                new ObjectParameter("AudioURL", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeFile", audioURLParameter, companyIDParameter);
        }
    
        public virtual int IVRTreeInputDelete(Nullable<long> iVRTreeInputID)
        {
            var iVRTreeInputIDParameter = iVRTreeInputID.HasValue ?
                new ObjectParameter("IVRTreeInputID", iVRTreeInputID) :
                new ObjectParameter("IVRTreeInputID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInputDelete", iVRTreeInputIDParameter);
        }
    
        public virtual int IVRTreeInputDeleteEvents(Nullable<long> iVRTreeID, Nullable<int> iVRInputValueTypeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var iVRInputValueTypeIDParameter = iVRInputValueTypeID.HasValue ?
                new ObjectParameter("IVRInputValueTypeID", iVRInputValueTypeID) :
                new ObjectParameter("IVRInputValueTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInputDeleteEvents", iVRTreeIDParameter, iVRInputValueTypeIDParameter);
        }
    
        public virtual int IVRTreeInputInsert(Nullable<long> iVRTreeInputID, Nullable<long> campaignID, Nullable<long> iVRTreeDestinationID, Nullable<long> targetID, string iVRInputValue, Nullable<bool> poundTerminated, Nullable<long> parentIVRTreeID, Nullable<int> iVRInputValueTypeID, string variableName)
        {
            var iVRTreeInputIDParameter = iVRTreeInputID.HasValue ?
                new ObjectParameter("IVRTreeInputID", iVRTreeInputID) :
                new ObjectParameter("IVRTreeInputID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var iVRTreeDestinationIDParameter = iVRTreeDestinationID.HasValue ?
                new ObjectParameter("IVRTreeDestinationID", iVRTreeDestinationID) :
                new ObjectParameter("IVRTreeDestinationID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var iVRInputValueParameter = iVRInputValue != null ?
                new ObjectParameter("IVRInputValue", iVRInputValue) :
                new ObjectParameter("IVRInputValue", typeof(string));
    
            var poundTerminatedParameter = poundTerminated.HasValue ?
                new ObjectParameter("PoundTerminated", poundTerminated) :
                new ObjectParameter("PoundTerminated", typeof(bool));
    
            var parentIVRTreeIDParameter = parentIVRTreeID.HasValue ?
                new ObjectParameter("ParentIVRTreeID", parentIVRTreeID) :
                new ObjectParameter("ParentIVRTreeID", typeof(long));
    
            var iVRInputValueTypeIDParameter = iVRInputValueTypeID.HasValue ?
                new ObjectParameter("IVRInputValueTypeID", iVRInputValueTypeID) :
                new ObjectParameter("IVRInputValueTypeID", typeof(int));
    
            var variableNameParameter = variableName != null ?
                new ObjectParameter("VariableName", variableName) :
                new ObjectParameter("VariableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInputInsert", iVRTreeInputIDParameter, campaignIDParameter, iVRTreeDestinationIDParameter, targetIDParameter, iVRInputValueParameter, poundTerminatedParameter, parentIVRTreeIDParameter, iVRInputValueTypeIDParameter, variableNameParameter);
        }
    
        public virtual int IVRTreeInputInsertEvents(Nullable<long> iVRTreeID, Nullable<long> iVRTreeInputID, Nullable<long> campaignID, Nullable<long> iVRTreeDestinationID, Nullable<long> targetID, string iVRInputValue, Nullable<bool> poundTerminated, Nullable<long> parentIVRTreeID, Nullable<int> iVRInputValueTypeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var iVRTreeInputIDParameter = iVRTreeInputID.HasValue ?
                new ObjectParameter("IVRTreeInputID", iVRTreeInputID) :
                new ObjectParameter("IVRTreeInputID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var iVRTreeDestinationIDParameter = iVRTreeDestinationID.HasValue ?
                new ObjectParameter("IVRTreeDestinationID", iVRTreeDestinationID) :
                new ObjectParameter("IVRTreeDestinationID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var iVRInputValueParameter = iVRInputValue != null ?
                new ObjectParameter("IVRInputValue", iVRInputValue) :
                new ObjectParameter("IVRInputValue", typeof(string));
    
            var poundTerminatedParameter = poundTerminated.HasValue ?
                new ObjectParameter("PoundTerminated", poundTerminated) :
                new ObjectParameter("PoundTerminated", typeof(bool));
    
            var parentIVRTreeIDParameter = parentIVRTreeID.HasValue ?
                new ObjectParameter("ParentIVRTreeID", parentIVRTreeID) :
                new ObjectParameter("ParentIVRTreeID", typeof(long));
    
            var iVRInputValueTypeIDParameter = iVRInputValueTypeID.HasValue ?
                new ObjectParameter("IVRInputValueTypeID", iVRInputValueTypeID) :
                new ObjectParameter("IVRInputValueTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInputInsertEvents", iVRTreeIDParameter, iVRTreeInputIDParameter, campaignIDParameter, iVRTreeDestinationIDParameter, targetIDParameter, iVRInputValueParameter, poundTerminatedParameter, parentIVRTreeIDParameter, iVRInputValueTypeIDParameter);
        }
    
        public virtual int IVRTreeInputsPoundUpdate(Nullable<long> iVRTreeID, Nullable<bool> poundTerminated)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var poundTerminatedParameter = poundTerminated.HasValue ?
                new ObjectParameter("PoundTerminated", poundTerminated) :
                new ObjectParameter("PoundTerminated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInputsPoundUpdate", iVRTreeIDParameter, poundTerminatedParameter);
        }
    
        public virtual int IVRTreeInputUpdate(Nullable<long> iVRTreeInputID, Nullable<long> iVRTreeID, string iVRInputValue, Nullable<int> iVRInputValueTypeID, Nullable<bool> poundTerminated, Nullable<long> iVRTreeDestinationID)
        {
            var iVRTreeInputIDParameter = iVRTreeInputID.HasValue ?
                new ObjectParameter("IVRTreeInputID", iVRTreeInputID) :
                new ObjectParameter("IVRTreeInputID", typeof(long));
    
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var iVRInputValueParameter = iVRInputValue != null ?
                new ObjectParameter("IVRInputValue", iVRInputValue) :
                new ObjectParameter("IVRInputValue", typeof(string));
    
            var iVRInputValueTypeIDParameter = iVRInputValueTypeID.HasValue ?
                new ObjectParameter("IVRInputValueTypeID", iVRInputValueTypeID) :
                new ObjectParameter("IVRInputValueTypeID", typeof(int));
    
            var poundTerminatedParameter = poundTerminated.HasValue ?
                new ObjectParameter("PoundTerminated", poundTerminated) :
                new ObjectParameter("PoundTerminated", typeof(bool));
    
            var iVRTreeDestinationIDParameter = iVRTreeDestinationID.HasValue ?
                new ObjectParameter("IVRTreeDestinationID", iVRTreeDestinationID) :
                new ObjectParameter("IVRTreeDestinationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInputUpdate", iVRTreeInputIDParameter, iVRTreeIDParameter, iVRInputValueParameter, iVRInputValueTypeIDParameter, poundTerminatedParameter, iVRTreeDestinationIDParameter);
        }
    
        public virtual int IVRTreeInputView(Nullable<long> campaignID, Nullable<long> iVRTreeID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInputView", campaignIDParameter, iVRTreeIDParameter);
        }
    
        public virtual int IVRTreeInsert(Nullable<long> iVRTreeID, Nullable<long> campaignID, string description, ObjectParameter intSuccess, ObjectParameter aIVRTreeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInsert", iVRTreeIDParameter, campaignIDParameter, descriptionParameter, intSuccess, aIVRTreeID);
        }
    
        public virtual int IVRTreeInsert2(Nullable<long> parentIVRTreeID, Nullable<long> targetID, Nullable<long> campaignID, string description, string audioURL, ObjectParameter iVRTreeID)
        {
            var parentIVRTreeIDParameter = parentIVRTreeID.HasValue ?
                new ObjectParameter("ParentIVRTreeID", parentIVRTreeID) :
                new ObjectParameter("ParentIVRTreeID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var audioURLParameter = audioURL != null ?
                new ObjectParameter("AudioURL", audioURL) :
                new ObjectParameter("AudioURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeInsert2", parentIVRTreeIDParameter, targetIDParameter, campaignIDParameter, descriptionParameter, audioURLParameter, iVRTreeID);
        }
    
        public virtual int IVRTreeUpdate(Nullable<long> iVRTreeID, string description, Nullable<int> iVRTreeTypeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var iVRTreeTypeIDParameter = iVRTreeTypeID.HasValue ?
                new ObjectParameter("IVRTreeTypeID", iVRTreeTypeID) :
                new ObjectParameter("IVRTreeTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeUpdate", iVRTreeIDParameter, descriptionParameter, iVRTreeTypeIDParameter);
        }
    
        public virtual int IVRTreeUpdate_Description(Nullable<long> campaignID, string description, string audioURL)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var audioURLParameter = audioURL != null ?
                new ObjectParameter("AudioURL", audioURL) :
                new ObjectParameter("AudioURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IVRTreeUpdate_Description", campaignIDParameter, descriptionParameter, audioURLParameter);
        }
    
        public virtual ObjectResult<IVRTREEView_Result> IVRTREEView(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IVRTREEView_Result>("IVRTREEView", campaignIDParameter);
        }
    
        public virtual ObjectResult<IVRTREEView_Description_Result> IVRTREEView_Description(Nullable<long> campaignID, string description)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IVRTREEView_Description_Result>("IVRTREEView_Description", campaignIDParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<IVRTreeView_DID_Result> IVRTreeView_DID(Nullable<long> dID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IVRTreeView_DID_Result>("IVRTreeView_DID", dIDParameter);
        }
    
        public virtual ObjectResult<IVRTreeView_IVRTreeID_Result> IVRTreeView_IVRTreeID(Nullable<long> iVRTreeID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IVRTreeView_IVRTreeID_Result>("IVRTreeView_IVRTreeID", iVRTreeIDParameter);
        }
    
        public virtual ObjectResult<IVRTREEView_IVRTreeID_CampaignID_Result> IVRTREEView_IVRTreeID_CampaignID(Nullable<long> campaignID, Nullable<long> iVRTreeID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IVRTREEView_IVRTreeID_CampaignID_Result>("IVRTREEView_IVRTreeID_CampaignID", campaignIDParameter, iVRTreeIDParameter);
        }
    
        public virtual ObjectResult<IVRTREEViewALL_Result> IVRTREEViewALL(string campaignID, Nullable<long> companyID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IVRTREEViewALL_Result>("IVRTREEViewALL", campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> johntest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("johntest");
        }
    
        public virtual ObjectResult<KeywordsView_with_CompanyID_CampaignID_Result> KeywordsView_with_CompanyID_CampaignID(Nullable<long> companyID, Nullable<long> campaignID, string orderBy)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KeywordsView_with_CompanyID_CampaignID_Result>("KeywordsView_with_CompanyID_CampaignID", companyIDParameter, campaignIDParameter, orderByParameter);
        }
    
        public virtual int listTableRowCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("listTableRowCounts");
        }
    
        public virtual ObjectResult<LoginPassword_forTargetID_Result> LoginPassword_forTargetID(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginPassword_forTargetID_Result>("LoginPassword_forTargetID", targetIDParameter);
        }
    
        public virtual int LogPDTransaction(Nullable<long> campaignID, Nullable<int> nMaxTransfers, Nullable<int> nEstCallsPerTransfer, Nullable<double> iGain, Nullable<double> pGain, Nullable<double> iMax, Nullable<int> nTransfers, Nullable<double> nError, Nullable<double> nError_Scaled, Nullable<double> nRate, Nullable<int> nCallsInPDRIVRQueue)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var nMaxTransfersParameter = nMaxTransfers.HasValue ?
                new ObjectParameter("nMaxTransfers", nMaxTransfers) :
                new ObjectParameter("nMaxTransfers", typeof(int));
    
            var nEstCallsPerTransferParameter = nEstCallsPerTransfer.HasValue ?
                new ObjectParameter("nEstCallsPerTransfer", nEstCallsPerTransfer) :
                new ObjectParameter("nEstCallsPerTransfer", typeof(int));
    
            var iGainParameter = iGain.HasValue ?
                new ObjectParameter("IGain", iGain) :
                new ObjectParameter("IGain", typeof(double));
    
            var pGainParameter = pGain.HasValue ?
                new ObjectParameter("PGain", pGain) :
                new ObjectParameter("PGain", typeof(double));
    
            var iMaxParameter = iMax.HasValue ?
                new ObjectParameter("IMax", iMax) :
                new ObjectParameter("IMax", typeof(double));
    
            var nTransfersParameter = nTransfers.HasValue ?
                new ObjectParameter("nTransfers", nTransfers) :
                new ObjectParameter("nTransfers", typeof(int));
    
            var nErrorParameter = nError.HasValue ?
                new ObjectParameter("nError", nError) :
                new ObjectParameter("nError", typeof(double));
    
            var nError_ScaledParameter = nError_Scaled.HasValue ?
                new ObjectParameter("nError_Scaled", nError_Scaled) :
                new ObjectParameter("nError_Scaled", typeof(double));
    
            var nRateParameter = nRate.HasValue ?
                new ObjectParameter("nRate", nRate) :
                new ObjectParameter("nRate", typeof(double));
    
            var nCallsInPDRIVRQueueParameter = nCallsInPDRIVRQueue.HasValue ?
                new ObjectParameter("nCallsInPDRIVRQueue", nCallsInPDRIVRQueue) :
                new ObjectParameter("nCallsInPDRIVRQueue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogPDTransaction", campaignIDParameter, nMaxTransfersParameter, nEstCallsPerTransferParameter, iGainParameter, pGainParameter, iMaxParameter, nTransfersParameter, nErrorParameter, nError_ScaledParameter, nRateParameter, nCallsInPDRIVRQueueParameter);
        }
    
        public virtual int m_process_upload()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("m_process_upload");
        }
    
        public virtual int MailBoxDelete(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MailBoxDelete", targetIDParameter);
        }
    
        public virtual int MailBoxInsert(Nullable<long> campaignID, Nullable<long> userID, Nullable<long> targetID, string description, Nullable<int> pIN, string audioPath)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pINParameter = pIN.HasValue ?
                new ObjectParameter("PIN", pIN) :
                new ObjectParameter("PIN", typeof(int));
    
            var audioPathParameter = audioPath != null ?
                new ObjectParameter("AudioPath", audioPath) :
                new ObjectParameter("AudioPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MailBoxInsert", campaignIDParameter, userIDParameter, targetIDParameter, descriptionParameter, pINParameter, audioPathParameter);
        }
    
        public virtual int ManufacturerInsert(ObjectParameter manufacturerID, string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ManufacturerInsert", manufacturerID, descriptionParameter);
        }
    
        public virtual int MaxInteractionsDelete(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxInteractionsDelete", campaignIDParameter);
        }
    
        public virtual int MaxInteractionsInsert(Nullable<long> campaignID, Nullable<int> numberOfInteractions, Nullable<int> timePeriodID, Nullable<long> iVRTreeDestinationID, Nullable<long> messagingTargetID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var numberOfInteractionsParameter = numberOfInteractions.HasValue ?
                new ObjectParameter("NumberOfInteractions", numberOfInteractions) :
                new ObjectParameter("NumberOfInteractions", typeof(int));
    
            var timePeriodIDParameter = timePeriodID.HasValue ?
                new ObjectParameter("TimePeriodID", timePeriodID) :
                new ObjectParameter("TimePeriodID", typeof(int));
    
            var iVRTreeDestinationIDParameter = iVRTreeDestinationID.HasValue ?
                new ObjectParameter("IVRTreeDestinationID", iVRTreeDestinationID) :
                new ObjectParameter("IVRTreeDestinationID", typeof(long));
    
            var messagingTargetIDParameter = messagingTargetID.HasValue ?
                new ObjectParameter("MessagingTargetID", messagingTargetID) :
                new ObjectParameter("MessagingTargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxInteractionsInsert", campaignIDParameter, numberOfInteractionsParameter, timePeriodIDParameter, iVRTreeDestinationIDParameter, messagingTargetIDParameter);
        }
    
        public virtual int MaxInteractionsInsert_NumberOfInteractions_IVRTreeDestinationID(ObjectParameter maxInteractionsID, Nullable<long> campaignID, Nullable<int> numberOfInteractions, string iVRTreeDescription)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var numberOfInteractionsParameter = numberOfInteractions.HasValue ?
                new ObjectParameter("NumberOfInteractions", numberOfInteractions) :
                new ObjectParameter("NumberOfInteractions", typeof(int));
    
            var iVRTreeDescriptionParameter = iVRTreeDescription != null ?
                new ObjectParameter("IVRTreeDescription", iVRTreeDescription) :
                new ObjectParameter("IVRTreeDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxInteractionsInsert_NumberOfInteractions_IVRTreeDestinationID", maxInteractionsID, campaignIDParameter, numberOfInteractionsParameter, iVRTreeDescriptionParameter);
        }
    
        public virtual int MaxInteractionsUpdate(Nullable<long> campaignID, Nullable<int> numberOfInteractions, Nullable<int> timePeriodID, Nullable<long> iVRTreeDestinationID, Nullable<long> messagingTargetID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var numberOfInteractionsParameter = numberOfInteractions.HasValue ?
                new ObjectParameter("NumberOfInteractions", numberOfInteractions) :
                new ObjectParameter("NumberOfInteractions", typeof(int));
    
            var timePeriodIDParameter = timePeriodID.HasValue ?
                new ObjectParameter("TimePeriodID", timePeriodID) :
                new ObjectParameter("TimePeriodID", typeof(int));
    
            var iVRTreeDestinationIDParameter = iVRTreeDestinationID.HasValue ?
                new ObjectParameter("IVRTreeDestinationID", iVRTreeDestinationID) :
                new ObjectParameter("IVRTreeDestinationID", typeof(long));
    
            var messagingTargetIDParameter = messagingTargetID.HasValue ?
                new ObjectParameter("MessagingTargetID", messagingTargetID) :
                new ObjectParameter("MessagingTargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxInteractionsUpdate", campaignIDParameter, numberOfInteractionsParameter, timePeriodIDParameter, iVRTreeDestinationIDParameter, messagingTargetIDParameter);
        }
    
        public virtual int MaxInteractionsUpdate_NumberOfInteractions(Nullable<long> campaignID, Nullable<int> numberOfInteractions)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var numberOfInteractionsParameter = numberOfInteractions.HasValue ?
                new ObjectParameter("NumberOfInteractions", numberOfInteractions) :
                new ObjectParameter("NumberOfInteractions", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxInteractionsUpdate_NumberOfInteractions", campaignIDParameter, numberOfInteractionsParameter);
        }
    
        public virtual ObjectResult<MaxInteractionsView_Result> MaxInteractionsView(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MaxInteractionsView_Result>("MaxInteractionsView", campaignIDParameter);
        }
    
        public virtual int MaxRepliesDelete(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxRepliesDelete", campaignIDParameter);
        }
    
        public virtual int MaxRepliesInsert(Nullable<long> campaignID, Nullable<int> numberOfReplies, Nullable<int> timePeriodID, Nullable<long> iVRTreeDestinationID, Nullable<long> messagingTargetID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var numberOfRepliesParameter = numberOfReplies.HasValue ?
                new ObjectParameter("NumberOfReplies", numberOfReplies) :
                new ObjectParameter("NumberOfReplies", typeof(int));
    
            var timePeriodIDParameter = timePeriodID.HasValue ?
                new ObjectParameter("TimePeriodID", timePeriodID) :
                new ObjectParameter("TimePeriodID", typeof(int));
    
            var iVRTreeDestinationIDParameter = iVRTreeDestinationID.HasValue ?
                new ObjectParameter("IVRTreeDestinationID", iVRTreeDestinationID) :
                new ObjectParameter("IVRTreeDestinationID", typeof(long));
    
            var messagingTargetIDParameter = messagingTargetID.HasValue ?
                new ObjectParameter("MessagingTargetID", messagingTargetID) :
                new ObjectParameter("MessagingTargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxRepliesInsert", campaignIDParameter, numberOfRepliesParameter, timePeriodIDParameter, iVRTreeDestinationIDParameter, messagingTargetIDParameter);
        }
    
        public virtual int MaxRepliesUpdate(Nullable<long> campaignID, Nullable<int> numberOfReplies, Nullable<int> timePeriodID, Nullable<long> iVRTreeDestinationID, Nullable<long> messagingTargetID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var numberOfRepliesParameter = numberOfReplies.HasValue ?
                new ObjectParameter("NumberOfReplies", numberOfReplies) :
                new ObjectParameter("NumberOfReplies", typeof(int));
    
            var timePeriodIDParameter = timePeriodID.HasValue ?
                new ObjectParameter("TimePeriodID", timePeriodID) :
                new ObjectParameter("TimePeriodID", typeof(int));
    
            var iVRTreeDestinationIDParameter = iVRTreeDestinationID.HasValue ?
                new ObjectParameter("IVRTreeDestinationID", iVRTreeDestinationID) :
                new ObjectParameter("IVRTreeDestinationID", typeof(long));
    
            var messagingTargetIDParameter = messagingTargetID.HasValue ?
                new ObjectParameter("MessagingTargetID", messagingTargetID) :
                new ObjectParameter("MessagingTargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaxRepliesUpdate", campaignIDParameter, numberOfRepliesParameter, timePeriodIDParameter, iVRTreeDestinationIDParameter, messagingTargetIDParameter);
        }
    
        public virtual ObjectResult<MaxRepliesView_Result> MaxRepliesView(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MaxRepliesView_Result>("MaxRepliesView", campaignIDParameter);
        }
    
        public virtual int MDN_Deactivation(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MDN_Deactivation", phoneParameter);
        }
    
        public virtual int MDN_Resume(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MDN_Resume", phoneParameter);
        }
    
        public virtual int MDN_Suspend(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MDN_Suspend", phoneParameter);
        }
    
        public virtual ObjectResult<MENUTARGETView_Result> MENUTARGETView(Nullable<long> campaignID, Nullable<int> targetIVRorMessaging)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var targetIVRorMessagingParameter = targetIVRorMessaging.HasValue ?
                new ObjectParameter("TargetIVRorMessaging", targetIVRorMessaging) :
                new ObjectParameter("TargetIVRorMessaging", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MENUTARGETView_Result>("MENUTARGETView", campaignIDParameter, targetIVRorMessagingParameter);
        }
    
        public virtual int MessageDelayedInsert(Nullable<long> messageFlowID, Nullable<int> delayMinutes, Nullable<System.DateTime> delayTime, string messageText)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var delayMinutesParameter = delayMinutes.HasValue ?
                new ObjectParameter("DelayMinutes", delayMinutes) :
                new ObjectParameter("DelayMinutes", typeof(int));
    
            var delayTimeParameter = delayTime.HasValue ?
                new ObjectParameter("DelayTime", delayTime) :
                new ObjectParameter("DelayTime", typeof(System.DateTime));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageDelayedInsert", messageFlowIDParameter, delayMinutesParameter, delayTimeParameter, messageTextParameter);
        }
    
        public virtual ObjectResult<MessageDelayedView_Result> MessageDelayedView(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageDelayedView_Result>("MessageDelayedView", messageFlowIDParameter);
        }
    
        public virtual int MessageDetailsInsert(Nullable<long> messageId, Nullable<long> userId, string phone)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("messageId", messageId) :
                new ObjectParameter("messageId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageDetailsInsert", messageIdParameter, userIdParameter, phoneParameter);
        }
    
        public virtual int MessageFlowCarrierDelete(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowCarrierDelete", messageFlowIDParameter);
        }
    
        public virtual int MessageFlowCarrierInsert(Nullable<long> messageFlowID, Nullable<long> carrierID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowCarrierInsert", messageFlowIDParameter, carrierIDParameter);
        }
    
        public virtual int MessageFlowDelete(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowDelete", messageFlowIDParameter);
        }
    
        public virtual int MessageFlowDescriptionCheck(Nullable<long> campaignID, string description, ObjectParameter total)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowDescriptionCheck", campaignIDParameter, descriptionParameter, total);
        }
    
        public virtual int MessageFlowDescriptionCheckUpdate(Nullable<long> campaignID, string description, Nullable<long> messageFlowID, ObjectParameter total)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowDescriptionCheckUpdate", campaignIDParameter, descriptionParameter, messageFlowIDParameter, total);
        }
    
        public virtual int MessageFlowInputDelete(Nullable<long> messageFlowInputID)
        {
            var messageFlowInputIDParameter = messageFlowInputID.HasValue ?
                new ObjectParameter("MessageFlowInputID", messageFlowInputID) :
                new ObjectParameter("MessageFlowInputID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputDelete", messageFlowInputIDParameter);
        }
    
        public virtual int MessageFlowInputInsert(Nullable<long> messageFlowTreeID, string inputText, Nullable<long> messageFlowDestinationID, Nullable<long> targetID, Nullable<int> messageFlowInputTypeID)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID.HasValue ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(long));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowDestinationIDParameter = messageFlowDestinationID.HasValue ?
                new ObjectParameter("MessageFlowDestinationID", messageFlowDestinationID) :
                new ObjectParameter("MessageFlowDestinationID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID.HasValue ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputInsert", messageFlowTreeIDParameter, inputTextParameter, messageFlowDestinationIDParameter, targetIDParameter, messageFlowInputTypeIDParameter);
        }
    
        public virtual int MessageFlowInputUpdate(Nullable<long> messageFlowInputID, string inputText, Nullable<long> messageFlowDestinationID, Nullable<long> targetID)
        {
            var messageFlowInputIDParameter = messageFlowInputID.HasValue ?
                new ObjectParameter("MessageFlowInputID", messageFlowInputID) :
                new ObjectParameter("MessageFlowInputID", typeof(long));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowDestinationIDParameter = messageFlowDestinationID.HasValue ?
                new ObjectParameter("MessageFlowDestinationID", messageFlowDestinationID) :
                new ObjectParameter("MessageFlowDestinationID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputUpdate", messageFlowInputIDParameter, inputTextParameter, messageFlowDestinationIDParameter, targetIDParameter);
        }
    
        public virtual int MessageFlowInputView(string messageFlowTreeID, Nullable<bool> isParam)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            var isParamParameter = isParam.HasValue ?
                new ObjectParameter("IsParam", isParam) :
                new ObjectParameter("IsParam", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputView", messageFlowTreeIDParameter, isParamParameter);
        }
    
        public virtual ObjectResult<MessageFlowInputView_MessageFlowTreeID_Result> MessageFlowInputView_MessageFlowTreeID(Nullable<long> messageFlowTreeID, string inputText)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID.HasValue ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(long));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowInputView_MessageFlowTreeID_Result>("MessageFlowInputView_MessageFlowTreeID", messageFlowTreeIDParameter, inputTextParameter);
        }
    
        public virtual ObjectResult<MessageFlowInputView_MessageFlowTreeID_MessageFlowInputTypeID_Result> MessageFlowInputView_MessageFlowTreeID_MessageFlowInputTypeID(string messageFlowInputTypeID, string messageFlowTreeID)
        {
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowInputView_MessageFlowTreeID_MessageFlowInputTypeID_Result>("MessageFlowInputView_MessageFlowTreeID_MessageFlowInputTypeID", messageFlowInputTypeIDParameter, messageFlowTreeIDParameter);
        }
    
        public virtual int MessageFlowInputView_MessageFlowTreeID_TargetID_InputType(string messageFlowTreeID, string targetID, string messageFlowInputTypeID)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            var targetIDParameter = targetID != null ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(string));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputView_MessageFlowTreeID_TargetID_InputType", messageFlowTreeIDParameter, targetIDParameter, messageFlowInputTypeIDParameter);
        }
    
        public virtual int MessageFlowInputView_Param(string messageFlowTreeID, string inputText, string messageFlowInputTypeID, Nullable<long> messageFlowID)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputView_Param", messageFlowTreeIDParameter, inputTextParameter, messageFlowInputTypeIDParameter, messageFlowIDParameter);
        }
    
        public virtual ObjectResult<MessageFlowInputView_Param_Timeout_Result> MessageFlowInputView_Param_Timeout(string shortCodeKeywordID, string inputText, string messageFlowInputTypeID, string carrierID, string messageFlowTreeID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID != null ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(string));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowInputView_Param_Timeout_Result>("MessageFlowInputView_Param_Timeout", shortCodeKeywordIDParameter, inputTextParameter, messageFlowInputTypeIDParameter, carrierIDParameter, messageFlowTreeIDParameter);
        }
    
        public virtual int MessageFlowInputView_Param_Timeout_old(string shortCodeKeywordID, string inputText, string messageFlowInputTypeID, string carrierID, string messageFlowTreeID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID != null ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(string));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputView_Param_Timeout_old", shortCodeKeywordIDParameter, inputTextParameter, messageFlowInputTypeIDParameter, carrierIDParameter, messageFlowTreeIDParameter);
        }
    
        public virtual int MessageFlowInputView_Param640(string messageFlowTreeID, string inputText, string messageFlowInputTypeID, Nullable<long> messageFlowID)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInputView_Param640", messageFlowTreeIDParameter, inputTextParameter, messageFlowInputTypeIDParameter, messageFlowIDParameter);
        }
    
        public virtual int MessageFlowInsert(Nullable<long> campaignID, string description, Nullable<int> messageFlowTypeID, ObjectParameter messageFlowID, Nullable<long> shortCodeKeywordID, Nullable<long> monthlyRebillTargetID, Nullable<bool> isDefaultSubscriptionList)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var messageFlowTypeIDParameter = messageFlowTypeID.HasValue ?
                new ObjectParameter("MessageFlowTypeID", messageFlowTypeID) :
                new ObjectParameter("MessageFlowTypeID", typeof(int));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var monthlyRebillTargetIDParameter = monthlyRebillTargetID.HasValue ?
                new ObjectParameter("MonthlyRebillTargetID", monthlyRebillTargetID) :
                new ObjectParameter("MonthlyRebillTargetID", typeof(long));
    
            var isDefaultSubscriptionListParameter = isDefaultSubscriptionList.HasValue ?
                new ObjectParameter("IsDefaultSubscriptionList", isDefaultSubscriptionList) :
                new ObjectParameter("IsDefaultSubscriptionList", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowInsert", campaignIDParameter, descriptionParameter, messageFlowTypeIDParameter, messageFlowID, shortCodeKeywordIDParameter, monthlyRebillTargetIDParameter, isDefaultSubscriptionListParameter);
        }
    
        public virtual int MessageFlowKeywordCarrierCheck(Nullable<long> campaignID, string carrierID, Nullable<long> keywordID, Nullable<long> messageFlowID, ObjectParameter total)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var keywordIDParameter = keywordID.HasValue ?
                new ObjectParameter("KeywordID", keywordID) :
                new ObjectParameter("KeywordID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowKeywordCarrierCheck", campaignIDParameter, carrierIDParameter, keywordIDParameter, messageFlowIDParameter, total);
        }
    
        public virtual int MessageFlowKeywordCarrierCheckUpdate(Nullable<long> campaignID, string carrierID, Nullable<long> keywordID, Nullable<int> messageFlowID, ObjectParameter total)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var keywordIDParameter = keywordID.HasValue ?
                new ObjectParameter("KeywordID", keywordID) :
                new ObjectParameter("KeywordID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowKeywordCarrierCheckUpdate", campaignIDParameter, carrierIDParameter, keywordIDParameter, messageFlowIDParameter, total);
        }
    
        public virtual int MessageFlowManualAddCarrierToAllKeywordsInAccount(Nullable<long> companyID, Nullable<long> carrierID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowManualAddCarrierToAllKeywordsInAccount", companyIDParameter, carrierIDParameter);
        }
    
        public virtual int MessageFlowNoDOICreate(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowNoDOICreate", campaignIDParameter);
        }
    
        public virtual int MessageFlowScheduleUpdate(Nullable<long> messageFlowScheduleID, Nullable<System.DateTime> nextScheduledTime, Nullable<System.DateTime> lastRunTime)
        {
            var messageFlowScheduleIDParameter = messageFlowScheduleID.HasValue ?
                new ObjectParameter("MessageFlowScheduleID", messageFlowScheduleID) :
                new ObjectParameter("MessageFlowScheduleID", typeof(long));
    
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            var lastRunTimeParameter = lastRunTime.HasValue ?
                new ObjectParameter("LastRunTime", lastRunTime) :
                new ObjectParameter("LastRunTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowScheduleUpdate", messageFlowScheduleIDParameter, nextScheduledTimeParameter, lastRunTimeParameter);
        }
    
        public virtual int MessageFlowTreeDelete(Nullable<long> messageFlowTreeID)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID.HasValue ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowTreeDelete", messageFlowTreeIDParameter);
        }
    
        public virtual int MessageFlowTreeDeleteParentRebalance(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowTreeDeleteParentRebalance", messageFlowIDParameter);
        }
    
        public virtual int MessageFlowTreeInsert(Nullable<long> sequenceNumber, string description, Nullable<bool> active, Nullable<long> parentMessageFlowTreeID, Nullable<long> messageFlowID)
        {
            var sequenceNumberParameter = sequenceNumber.HasValue ?
                new ObjectParameter("SequenceNumber", sequenceNumber) :
                new ObjectParameter("SequenceNumber", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var parentMessageFlowTreeIDParameter = parentMessageFlowTreeID.HasValue ?
                new ObjectParameter("ParentMessageFlowTreeID", parentMessageFlowTreeID) :
                new ObjectParameter("ParentMessageFlowTreeID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowTreeInsert", sequenceNumberParameter, descriptionParameter, activeParameter, parentMessageFlowTreeIDParameter, messageFlowIDParameter);
        }
    
        public virtual int MessageFlowTreeInsertOut(Nullable<long> sequenceNumber, string description, Nullable<bool> active, Nullable<long> parentMessageFlowTreeID, Nullable<long> messageFlowID, ObjectParameter messageFlowTreeIDout)
        {
            var sequenceNumberParameter = sequenceNumber.HasValue ?
                new ObjectParameter("SequenceNumber", sequenceNumber) :
                new ObjectParameter("SequenceNumber", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var parentMessageFlowTreeIDParameter = parentMessageFlowTreeID.HasValue ?
                new ObjectParameter("ParentMessageFlowTreeID", parentMessageFlowTreeID) :
                new ObjectParameter("ParentMessageFlowTreeID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowTreeInsertOut", sequenceNumberParameter, descriptionParameter, activeParameter, parentMessageFlowTreeIDParameter, messageFlowIDParameter, messageFlowTreeIDout);
        }
    
        public virtual int MessageFlowTreeSequenceNumberUpdate(Nullable<int> newSequenceNumber, Nullable<long> messageFlowTreeID)
        {
            var newSequenceNumberParameter = newSequenceNumber.HasValue ?
                new ObjectParameter("NewSequenceNumber", newSequenceNumber) :
                new ObjectParameter("NewSequenceNumber", typeof(int));
    
            var messageFlowTreeIDParameter = messageFlowTreeID.HasValue ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowTreeSequenceNumberUpdate", newSequenceNumberParameter, messageFlowTreeIDParameter);
        }
    
        public virtual ObjectResult<MessageFlowTreeTargetsView_Result> MessageFlowTreeTargetsView(Nullable<long> campaignID, Nullable<int> iVRorMessaging)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var iVRorMessagingParameter = iVRorMessaging.HasValue ?
                new ObjectParameter("IVRorMessaging", iVRorMessaging) :
                new ObjectParameter("IVRorMessaging", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowTreeTargetsView_Result>("MessageFlowTreeTargetsView", campaignIDParameter, iVRorMessagingParameter);
        }
    
        public virtual int MessageFlowTreeUpdate(Nullable<int> sequenceNumber, string description, Nullable<int> timeoutHours, Nullable<long> messageFlowTreeID)
        {
            var sequenceNumberParameter = sequenceNumber.HasValue ?
                new ObjectParameter("SequenceNumber", sequenceNumber) :
                new ObjectParameter("SequenceNumber", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var timeoutHoursParameter = timeoutHours.HasValue ?
                new ObjectParameter("TimeoutHours", timeoutHours) :
                new ObjectParameter("TimeoutHours", typeof(int));
    
            var messageFlowTreeIDParameter = messageFlowTreeID.HasValue ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowTreeUpdate", sequenceNumberParameter, descriptionParameter, timeoutHoursParameter, messageFlowTreeIDParameter);
        }
    
        public virtual ObjectResult<MessageFlowTreeView_Result> MessageFlowTreeView(Nullable<long> campaignID, Nullable<long> messageFlowID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowTreeView_Result>("MessageFlowTreeView", campaignIDParameter, messageFlowIDParameter);
        }
    
        public virtual ObjectResult<MessageFlowTreeView_MessageFlowTreeID_Result> MessageFlowTreeView_MessageFlowTreeID(Nullable<long> messageFlowTreeID)
        {
            var messageFlowTreeIDParameter = messageFlowTreeID.HasValue ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowTreeView_MessageFlowTreeID_Result>("MessageFlowTreeView_MessageFlowTreeID", messageFlowTreeIDParameter);
        }
    
        public virtual int MessageFlowUpdate(Nullable<long> messageFlowID, string description, Nullable<int> messageFlowTypeID, Nullable<long> shortCodeKeywordID, Nullable<long> monthlyRebillTargetID, Nullable<bool> disableMessageDelayed)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var messageFlowTypeIDParameter = messageFlowTypeID.HasValue ?
                new ObjectParameter("MessageFlowTypeID", messageFlowTypeID) :
                new ObjectParameter("MessageFlowTypeID", typeof(int));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var monthlyRebillTargetIDParameter = monthlyRebillTargetID.HasValue ?
                new ObjectParameter("MonthlyRebillTargetID", monthlyRebillTargetID) :
                new ObjectParameter("MonthlyRebillTargetID", typeof(long));
    
            var disableMessageDelayedParameter = disableMessageDelayed.HasValue ?
                new ObjectParameter("DisableMessageDelayed", disableMessageDelayed) :
                new ObjectParameter("DisableMessageDelayed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageFlowUpdate", messageFlowIDParameter, descriptionParameter, messageFlowTypeIDParameter, shortCodeKeywordIDParameter, monthlyRebillTargetIDParameter, disableMessageDelayedParameter);
        }
    
        public virtual ObjectResult<MessageFlowView_Result> MessageFlowView(string campaignID, Nullable<long> companyID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowView_Result>("MessageFlowView", campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<MessageFlowView_Carrier_ShortCode_Result> MessageFlowView_Carrier_ShortCode(Nullable<long> campaignID, Nullable<long> carrierID, Nullable<long> shortCodeKeywordID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowView_Carrier_ShortCode_Result>("MessageFlowView_Carrier_ShortCode", campaignIDParameter, carrierIDParameter, shortCodeKeywordIDParameter);
        }
    
        public virtual ObjectResult<MessageFlowView_ShortCodeKeywordID_CarrierID_Result> MessageFlowView_ShortCodeKeywordID_CarrierID(Nullable<long> shortCodeKeywordID, Nullable<long> carrierID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowView_ShortCodeKeywordID_CarrierID_Result>("MessageFlowView_ShortCodeKeywordID_CarrierID", shortCodeKeywordIDParameter, carrierIDParameter);
        }
    
        public virtual ObjectResult<MessageFlowViewShortCodeKeywords_Result> MessageFlowViewShortCodeKeywords(Nullable<long> companyID, Nullable<long> messageFlowID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageFlowViewShortCodeKeywords_Result>("MessageFlowViewShortCodeKeywords", companyIDParameter, messageFlowIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> MessageFlowViewSupportedCarriers(Nullable<long> messageFlowID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("MessageFlowViewSupportedCarriers", messageFlowIDParameter);
        }
    
        public virtual int MessageInsert(string message, Nullable<long> userId, Nullable<System.DateTime> sendDate, Nullable<bool> isRandom, string shortCode, Nullable<long> shortCodeInfoID, ObjectParameter messageId)
        {
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            var sendDateParameter = sendDate.HasValue ?
                new ObjectParameter("sendDate", sendDate) :
                new ObjectParameter("sendDate", typeof(System.DateTime));
    
            var isRandomParameter = isRandom.HasValue ?
                new ObjectParameter("isRandom", isRandom) :
                new ObjectParameter("isRandom", typeof(bool));
    
            var shortCodeParameter = shortCode != null ?
                new ObjectParameter("shortCode", shortCode) :
                new ObjectParameter("shortCode", typeof(string));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("shortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("shortCodeInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageInsert", messageParameter, userIdParameter, sendDateParameter, isRandomParameter, shortCodeParameter, shortCodeInfoIDParameter, messageId);
        }
    
        public virtual int MessageStatusInsert(ObjectParameter messageStatusID, string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageStatusInsert", messageStatusID, descriptionParameter);
        }
    
        public virtual int MessageTransactionAmountSum(string transactionID, string begin, string end)
        {
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageTransactionAmountSum", transactionIDParameter, beginParameter, endParameter);
        }
    
        public virtual int MessageTransactionInitiate(ObjectParameter messageTransactionID, Nullable<long> transactionID, Nullable<long> targetID, Nullable<int> messageStatusID, string subject, string messageText, Nullable<long> messageTypeID, Nullable<long> contentTypeID, Nullable<decimal> price)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var messageStatusIDParameter = messageStatusID.HasValue ?
                new ObjectParameter("MessageStatusID", messageStatusID) :
                new ObjectParameter("MessageStatusID", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var messageTypeIDParameter = messageTypeID.HasValue ?
                new ObjectParameter("MessageTypeID", messageTypeID) :
                new ObjectParameter("MessageTypeID", typeof(long));
    
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(long));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageTransactionInitiate", messageTransactionID, transactionIDParameter, targetIDParameter, messageStatusIDParameter, subjectParameter, messageTextParameter, messageTypeIDParameter, contentTypeIDParameter, priceParameter);
        }
    
        public virtual int MessageTransactionInsert(ObjectParameter messageTransactionID, Nullable<long> transactionID, Nullable<decimal> aggregatorTransactionID, Nullable<long> messageStatusID, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated, Nullable<long> numberOfAttempts, string subject, string messageText, Nullable<long> messageTypeID, Nullable<long> contentTypeID, Nullable<decimal> price, string customTransactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var aggregatorTransactionIDParameter = aggregatorTransactionID.HasValue ?
                new ObjectParameter("AggregatorTransactionID", aggregatorTransactionID) :
                new ObjectParameter("AggregatorTransactionID", typeof(decimal));
    
            var messageStatusIDParameter = messageStatusID.HasValue ?
                new ObjectParameter("MessageStatusID", messageStatusID) :
                new ObjectParameter("MessageStatusID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            var numberOfAttemptsParameter = numberOfAttempts.HasValue ?
                new ObjectParameter("NumberOfAttempts", numberOfAttempts) :
                new ObjectParameter("NumberOfAttempts", typeof(long));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var messageTypeIDParameter = messageTypeID.HasValue ?
                new ObjectParameter("MessageTypeID", messageTypeID) :
                new ObjectParameter("MessageTypeID", typeof(long));
    
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(long));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var customTransactionIDParameter = customTransactionID != null ?
                new ObjectParameter("CustomTransactionID", customTransactionID) :
                new ObjectParameter("CustomTransactionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageTransactionInsert", messageTransactionID, transactionIDParameter, aggregatorTransactionIDParameter, messageStatusIDParameter, dateCreatedParameter, dateUpdatedParameter, numberOfAttemptsParameter, subjectParameter, messageTextParameter, messageTypeIDParameter, contentTypeIDParameter, priceParameter, customTransactionIDParameter);
        }
    
        public virtual ObjectResult<MessageTransactionLogView_Result> MessageTransactionLogView(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageTransactionLogView_Result>("MessageTransactionLogView", transactionIDParameter);
        }
    
        public virtual int MessageTransactionResponseInsert(ObjectParameter messageTransactionResponseID, Nullable<long> messageTransactionID, Nullable<System.DateTime> dateTime, string hTTPResponse, Nullable<long> returnCode, string returnText)
        {
            var messageTransactionIDParameter = messageTransactionID.HasValue ?
                new ObjectParameter("MessageTransactionID", messageTransactionID) :
                new ObjectParameter("MessageTransactionID", typeof(long));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var hTTPResponseParameter = hTTPResponse != null ?
                new ObjectParameter("HTTPResponse", hTTPResponse) :
                new ObjectParameter("HTTPResponse", typeof(string));
    
            var returnCodeParameter = returnCode.HasValue ?
                new ObjectParameter("ReturnCode", returnCode) :
                new ObjectParameter("ReturnCode", typeof(long));
    
            var returnTextParameter = returnText != null ?
                new ObjectParameter("ReturnText", returnText) :
                new ObjectParameter("ReturnText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageTransactionResponseInsert", messageTransactionResponseID, messageTransactionIDParameter, dateTimeParameter, hTTPResponseParameter, returnCodeParameter, returnTextParameter);
        }
    
        public virtual int MessageTransactionUpdate(Nullable<long> messageTransactionID, Nullable<decimal> aggregatorTransactionID, Nullable<long> messageStatusID, Nullable<System.DateTime> dateUpdated, Nullable<int> mPTTCodeID)
        {
            var messageTransactionIDParameter = messageTransactionID.HasValue ?
                new ObjectParameter("MessageTransactionID", messageTransactionID) :
                new ObjectParameter("MessageTransactionID", typeof(long));
    
            var aggregatorTransactionIDParameter = aggregatorTransactionID.HasValue ?
                new ObjectParameter("AggregatorTransactionID", aggregatorTransactionID) :
                new ObjectParameter("AggregatorTransactionID", typeof(decimal));
    
            var messageStatusIDParameter = messageStatusID.HasValue ?
                new ObjectParameter("MessageStatusID", messageStatusID) :
                new ObjectParameter("MessageStatusID", typeof(long));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            var mPTTCodeIDParameter = mPTTCodeID.HasValue ?
                new ObjectParameter("mPTTCodeID", mPTTCodeID) :
                new ObjectParameter("mPTTCodeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessageTransactionUpdate", messageTransactionIDParameter, aggregatorTransactionIDParameter, messageStatusIDParameter, dateUpdatedParameter, mPTTCodeIDParameter);
        }
    
        public virtual ObjectResult<MessageTransactionView_Result> MessageTransactionView(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageTransactionView_Result>("MessageTransactionView", transactionIDParameter);
        }
    
        public virtual ObjectResult<MessageTransactionView_MessageTransactionID_Result> MessageTransactionView_MessageTransactionID(Nullable<long> messageTransactionID)
        {
            var messageTransactionIDParameter = messageTransactionID.HasValue ?
                new ObjectParameter("MessageTransactionID", messageTransactionID) :
                new ObjectParameter("MessageTransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageTransactionView_MessageTransactionID_Result>("MessageTransactionView_MessageTransactionID", messageTransactionIDParameter);
        }
    
        public virtual ObjectResult<MessageTransactionView_TargetID_Result> MessageTransactionView_TargetID(Nullable<long> transactionID, Nullable<long> targetID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageTransactionView_TargetID_Result>("MessageTransactionView_TargetID", transactionIDParameter, targetIDParameter);
        }
    
        public virtual ObjectResult<MessageTransactionView_TransactionID_Result> MessageTransactionView_TransactionID(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageTransactionView_TransactionID_Result>("MessageTransactionView_TransactionID", transactionIDParameter);
        }
    
        public virtual ObjectResult<MessageTransactionView_TransactionID_Price_Result> MessageTransactionView_TransactionID_Price(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageTransactionView_TransactionID_Price_Result>("MessageTransactionView_TransactionID_Price", transactionIDParameter);
        }
    
        public virtual int MessagingCampaignCreateFromTemplate(Nullable<long> campaignID, string messageFlowDescription, string shortCodeKeywords, Nullable<long> shortCodeInfoID, Nullable<long> subscriptionKeywordID, string alreadySubscribedMessage, string newSubscriberMessage, string stopMessageParams, string stopMessage, string helpMessageParams, string helpMessage, Nullable<bool> doubleOptInEnabled, string doubleOptInMessageParams, string doubleOptInMessage, ObjectParameter firstMessageFlowID, string hasSubscribedMTMessage)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageFlowDescriptionParameter = messageFlowDescription != null ?
                new ObjectParameter("MessageFlowDescription", messageFlowDescription) :
                new ObjectParameter("MessageFlowDescription", typeof(string));
    
            var shortCodeKeywordsParameter = shortCodeKeywords != null ?
                new ObjectParameter("ShortCodeKeywords", shortCodeKeywords) :
                new ObjectParameter("ShortCodeKeywords", typeof(string));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var subscriptionKeywordIDParameter = subscriptionKeywordID.HasValue ?
                new ObjectParameter("SubscriptionKeywordID", subscriptionKeywordID) :
                new ObjectParameter("SubscriptionKeywordID", typeof(long));
    
            var alreadySubscribedMessageParameter = alreadySubscribedMessage != null ?
                new ObjectParameter("AlreadySubscribedMessage", alreadySubscribedMessage) :
                new ObjectParameter("AlreadySubscribedMessage", typeof(string));
    
            var newSubscriberMessageParameter = newSubscriberMessage != null ?
                new ObjectParameter("NewSubscriberMessage", newSubscriberMessage) :
                new ObjectParameter("NewSubscriberMessage", typeof(string));
    
            var stopMessageParamsParameter = stopMessageParams != null ?
                new ObjectParameter("StopMessageParams", stopMessageParams) :
                new ObjectParameter("StopMessageParams", typeof(string));
    
            var stopMessageParameter = stopMessage != null ?
                new ObjectParameter("StopMessage", stopMessage) :
                new ObjectParameter("StopMessage", typeof(string));
    
            var helpMessageParamsParameter = helpMessageParams != null ?
                new ObjectParameter("HelpMessageParams", helpMessageParams) :
                new ObjectParameter("HelpMessageParams", typeof(string));
    
            var helpMessageParameter = helpMessage != null ?
                new ObjectParameter("HelpMessage", helpMessage) :
                new ObjectParameter("HelpMessage", typeof(string));
    
            var doubleOptInEnabledParameter = doubleOptInEnabled.HasValue ?
                new ObjectParameter("DoubleOptInEnabled", doubleOptInEnabled) :
                new ObjectParameter("DoubleOptInEnabled", typeof(bool));
    
            var doubleOptInMessageParamsParameter = doubleOptInMessageParams != null ?
                new ObjectParameter("DoubleOptInMessageParams", doubleOptInMessageParams) :
                new ObjectParameter("DoubleOptInMessageParams", typeof(string));
    
            var doubleOptInMessageParameter = doubleOptInMessage != null ?
                new ObjectParameter("DoubleOptInMessage", doubleOptInMessage) :
                new ObjectParameter("DoubleOptInMessage", typeof(string));
    
            var hasSubscribedMTMessageParameter = hasSubscribedMTMessage != null ?
                new ObjectParameter("HasSubscribedMTMessage", hasSubscribedMTMessage) :
                new ObjectParameter("HasSubscribedMTMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessagingCampaignCreateFromTemplate", campaignIDParameter, messageFlowDescriptionParameter, shortCodeKeywordsParameter, shortCodeInfoIDParameter, subscriptionKeywordIDParameter, alreadySubscribedMessageParameter, newSubscriberMessageParameter, stopMessageParamsParameter, stopMessageParameter, helpMessageParamsParameter, helpMessageParameter, doubleOptInEnabledParameter, doubleOptInMessageParamsParameter, doubleOptInMessageParameter, firstMessageFlowID, hasSubscribedMTMessageParameter);
        }
    
        public virtual int MobileInfoDelete(Nullable<long> mobileInfoID)
        {
            var mobileInfoIDParameter = mobileInfoID.HasValue ?
                new ObjectParameter("MobileInfoID", mobileInfoID) :
                new ObjectParameter("MobileInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MobileInfoDelete", mobileInfoIDParameter);
        }
    
        public virtual int MobileInfoInsert(ObjectParameter mobileInfoID, Nullable<long> mobileModelID, string userAgent, Nullable<int> preferredMarkupTypeID, Nullable<int> resolutionWidth, Nullable<int> resolutionHeight, Nullable<int> maxImageWidth, Nullable<int> maxImageHeight, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated)
        {
            var mobileModelIDParameter = mobileModelID.HasValue ?
                new ObjectParameter("MobileModelID", mobileModelID) :
                new ObjectParameter("MobileModelID", typeof(long));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            var preferredMarkupTypeIDParameter = preferredMarkupTypeID.HasValue ?
                new ObjectParameter("PreferredMarkupTypeID", preferredMarkupTypeID) :
                new ObjectParameter("PreferredMarkupTypeID", typeof(int));
    
            var resolutionWidthParameter = resolutionWidth.HasValue ?
                new ObjectParameter("ResolutionWidth", resolutionWidth) :
                new ObjectParameter("ResolutionWidth", typeof(int));
    
            var resolutionHeightParameter = resolutionHeight.HasValue ?
                new ObjectParameter("ResolutionHeight", resolutionHeight) :
                new ObjectParameter("ResolutionHeight", typeof(int));
    
            var maxImageWidthParameter = maxImageWidth.HasValue ?
                new ObjectParameter("MaxImageWidth", maxImageWidth) :
                new ObjectParameter("MaxImageWidth", typeof(int));
    
            var maxImageHeightParameter = maxImageHeight.HasValue ?
                new ObjectParameter("MaxImageHeight", maxImageHeight) :
                new ObjectParameter("MaxImageHeight", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MobileInfoInsert", mobileInfoID, mobileModelIDParameter, userAgentParameter, preferredMarkupTypeIDParameter, resolutionWidthParameter, resolutionHeightParameter, maxImageWidthParameter, maxImageHeightParameter, dateCreatedParameter, dateUpdatedParameter);
        }
    
        public virtual int MobileInfoUpdate(Nullable<long> mobileInfoID, Nullable<long> mobileModelID, string userAgent, Nullable<int> preferredMarkupTypeID, Nullable<int> resolutionWidth, Nullable<int> resolutionHeight, Nullable<int> maxImageWidth, Nullable<int> maxImageHeight, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated)
        {
            var mobileInfoIDParameter = mobileInfoID.HasValue ?
                new ObjectParameter("MobileInfoID", mobileInfoID) :
                new ObjectParameter("MobileInfoID", typeof(long));
    
            var mobileModelIDParameter = mobileModelID.HasValue ?
                new ObjectParameter("MobileModelID", mobileModelID) :
                new ObjectParameter("MobileModelID", typeof(long));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            var preferredMarkupTypeIDParameter = preferredMarkupTypeID.HasValue ?
                new ObjectParameter("PreferredMarkupTypeID", preferredMarkupTypeID) :
                new ObjectParameter("PreferredMarkupTypeID", typeof(int));
    
            var resolutionWidthParameter = resolutionWidth.HasValue ?
                new ObjectParameter("ResolutionWidth", resolutionWidth) :
                new ObjectParameter("ResolutionWidth", typeof(int));
    
            var resolutionHeightParameter = resolutionHeight.HasValue ?
                new ObjectParameter("ResolutionHeight", resolutionHeight) :
                new ObjectParameter("ResolutionHeight", typeof(int));
    
            var maxImageWidthParameter = maxImageWidth.HasValue ?
                new ObjectParameter("MaxImageWidth", maxImageWidth) :
                new ObjectParameter("MaxImageWidth", typeof(int));
    
            var maxImageHeightParameter = maxImageHeight.HasValue ?
                new ObjectParameter("MaxImageHeight", maxImageHeight) :
                new ObjectParameter("MaxImageHeight", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MobileInfoUpdate", mobileInfoIDParameter, mobileModelIDParameter, userAgentParameter, preferredMarkupTypeIDParameter, resolutionWidthParameter, resolutionHeightParameter, maxImageWidthParameter, maxImageHeightParameter, dateCreatedParameter, dateUpdatedParameter);
        }
    
        public virtual int MobileModelInsert(ObjectParameter mobileModelID, Nullable<long> manufacturerID, string description, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated, Nullable<bool> active)
        {
            var manufacturerIDParameter = manufacturerID.HasValue ?
                new ObjectParameter("ManufacturerID", manufacturerID) :
                new ObjectParameter("ManufacturerID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MobileModelInsert", mobileModelID, manufacturerIDParameter, descriptionParameter, dateCreatedParameter, dateUpdatedParameter, activeParameter);
        }
    
        public virtual int ModifyUserPermissionsReports(Nullable<long> companyID, Nullable<bool> view)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyUserPermissionsReports", companyIDParameter, viewParameter);
        }
    
        public virtual int MoveCampaignToNewCompany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MoveCampaignToNewCompany");
        }
    
        public virtual ObjectResult<MResortReportView_Result> MResortReportView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MResortReportView_Result>("MResortReportView");
        }
    
        public virtual ObjectResult<ObamaPolling_ActionCountyPage_Result> ObamaPolling_ActionCountyPage(string action, string county, Nullable<int> page, string state)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var countyParameter = county != null ?
                new ObjectParameter("County", county) :
                new ObjectParameter("County", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObamaPolling_ActionCountyPage_Result>("ObamaPolling_ActionCountyPage", actionParameter, countyParameter, pageParameter, stateParameter);
        }
    
        public virtual int OTTBroadcastSendPage(Nullable<long> broadCastSMSQueueID, ObjectParameter totalRows)
        {
            var broadCastSMSQueueIDParameter = broadCastSMSQueueID.HasValue ?
                new ObjectParameter("BroadCastSMSQueueID", broadCastSMSQueueID) :
                new ObjectParameter("BroadCastSMSQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTBroadcastSendPage", broadCastSMSQueueIDParameter, totalRows);
        }
    
        public virtual ObjectResult<OTTGetBroadcastUsers_Result> OTTGetBroadcastUsers(Nullable<long> broadcastQueueID, string optInSource)
        {
            var broadcastQueueIDParameter = broadcastQueueID.HasValue ?
                new ObjectParameter("BroadcastQueueID", broadcastQueueID) :
                new ObjectParameter("BroadcastQueueID", typeof(long));
    
            var optInSourceParameter = optInSource != null ?
                new ObjectParameter("OptInSource", optInSource) :
                new ObjectParameter("OptInSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OTTGetBroadcastUsers_Result>("OTTGetBroadcastUsers", broadcastQueueIDParameter, optInSourceParameter);
        }
    
        public virtual int OTTInsertMessageTransaction(Nullable<long> userID, Nullable<long> campaignID, Nullable<long> messageFlowID, string message, Nullable<int> messageTypeID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var messageTypeIDParameter = messageTypeID.HasValue ?
                new ObjectParameter("MessageTypeID", messageTypeID) :
                new ObjectParameter("MessageTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTInsertMessageTransaction", userIDParameter, campaignIDParameter, messageFlowIDParameter, messageParameter, messageTypeIDParameter);
        }
    
        public virtual int OTTInsertMessageTransactionByOttUserID(string oTTUserID, Nullable<long> campaignID, string keyword, string message, Nullable<int> messageTypeID)
        {
            var oTTUserIDParameter = oTTUserID != null ?
                new ObjectParameter("OTTUserID", oTTUserID) :
                new ObjectParameter("OTTUserID", typeof(string));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var messageTypeIDParameter = messageTypeID.HasValue ?
                new ObjectParameter("MessageTypeID", messageTypeID) :
                new ObjectParameter("MessageTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTInsertMessageTransactionByOttUserID", oTTUserIDParameter, campaignIDParameter, keywordParameter, messageParameter, messageTypeIDParameter);
        }
    
        public virtual int OTTInsertOptInSourceByCampaign(Nullable<long> userID, Nullable<long> campaignID, string optInSource, ObjectParameter rowsUpdated)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var optInSourceParameter = optInSource != null ?
                new ObjectParameter("OptInSource", optInSource) :
                new ObjectParameter("OptInSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTInsertOptInSourceByCampaign", userIDParameter, campaignIDParameter, optInSourceParameter, rowsUpdated);
        }
    
        public virtual int OTTUnsubscribeUser(string oTTUserID, Nullable<long> companyID, string ottSource, string mOMessageText, string mTMessageText)
        {
            var oTTUserIDParameter = oTTUserID != null ?
                new ObjectParameter("OTTUserID", oTTUserID) :
                new ObjectParameter("OTTUserID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var ottSourceParameter = ottSource != null ?
                new ObjectParameter("OttSource", ottSource) :
                new ObjectParameter("OttSource", typeof(string));
    
            var mOMessageTextParameter = mOMessageText != null ?
                new ObjectParameter("MOMessageText", mOMessageText) :
                new ObjectParameter("MOMessageText", typeof(string));
    
            var mTMessageTextParameter = mTMessageText != null ?
                new ObjectParameter("MTMessageText", mTMessageText) :
                new ObjectParameter("MTMessageText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTUnsubscribeUser", oTTUserIDParameter, companyIDParameter, ottSourceParameter, mOMessageTextParameter, mTMessageTextParameter);
        }
    
        public virtual int OTTUserInfoInsertUpdate(ObjectParameter userInfoID, Nullable<long> userID, string fName, string lName, string gender, string locale, Nullable<int> timeZoneID, string profilePicUrl)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var profilePicUrlParameter = profilePicUrl != null ?
                new ObjectParameter("ProfilePicUrl", profilePicUrl) :
                new ObjectParameter("ProfilePicUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTUserInfoInsertUpdate", userInfoID, userIDParameter, fNameParameter, lNameParameter, genderParameter, localeParameter, timeZoneIDParameter, profilePicUrlParameter);
        }
    
        public virtual int OTTUserInsert(ObjectParameter userID, string oTTUserID, Nullable<int> userTypeID, Nullable<long> companyID)
        {
            var oTTUserIDParameter = oTTUserID != null ?
                new ObjectParameter("OTTUserID", oTTUserID) :
                new ObjectParameter("OTTUserID", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTUserInsert", userID, oTTUserIDParameter, userTypeIDParameter, companyIDParameter);
        }
    
        public virtual int OTTUserProcessMO(string oTTUserID, Nullable<long> companyID, string ottSource, string mOMessageText, Nullable<long> changedByUserID, ObjectParameter returnMessage, ObjectParameter returnMessageType, ObjectParameter userID)
        {
            var oTTUserIDParameter = oTTUserID != null ?
                new ObjectParameter("OTTUserID", oTTUserID) :
                new ObjectParameter("OTTUserID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var ottSourceParameter = ottSource != null ?
                new ObjectParameter("OttSource", ottSource) :
                new ObjectParameter("OttSource", typeof(string));
    
            var mOMessageTextParameter = mOMessageText != null ?
                new ObjectParameter("MOMessageText", mOMessageText) :
                new ObjectParameter("MOMessageText", typeof(string));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTUserProcessMO", oTTUserIDParameter, companyIDParameter, ottSourceParameter, mOMessageTextParameter, changedByUserIDParameter, returnMessage, returnMessageType, userID);
        }
    
        public virtual int OTTUserSubscriptionInsert(Nullable<long> userID, Nullable<long> messageFlowID, Nullable<long> changedByUserID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OTTUserSubscriptionInsert", userIDParameter, messageFlowIDParameter, changedByUserIDParameter);
        }
    
        public virtual int OutboundCallScheduleInsert(Nullable<System.DateTime> nextScheduledTime, string schedule, Nullable<long> dID, ObjectParameter outboundCallScheduleID, Nullable<int> callScheduleType, Nullable<long> phoneNumber, Nullable<long> spoofID)
        {
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("Schedule", schedule) :
                new ObjectParameter("Schedule", typeof(string));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callScheduleTypeParameter = callScheduleType.HasValue ?
                new ObjectParameter("CallScheduleType", callScheduleType) :
                new ObjectParameter("CallScheduleType", typeof(int));
    
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(long));
    
            var spoofIDParameter = spoofID.HasValue ?
                new ObjectParameter("SpoofID", spoofID) :
                new ObjectParameter("SpoofID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutboundCallScheduleInsert", nextScheduledTimeParameter, scheduleParameter, dIDParameter, outboundCallScheduleID, callScheduleTypeParameter, phoneNumberParameter, spoofIDParameter);
        }
    
        public virtual int OutboundCallScheduleInsertTEST(Nullable<System.DateTime> nextScheduledTime, string schedule, Nullable<long> dID, ObjectParameter outboundCallScheduleID, Nullable<int> callScheduleType, Nullable<long> phoneNumber, Nullable<long> spoofID)
        {
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("Schedule", schedule) :
                new ObjectParameter("Schedule", typeof(string));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callScheduleTypeParameter = callScheduleType.HasValue ?
                new ObjectParameter("CallScheduleType", callScheduleType) :
                new ObjectParameter("CallScheduleType", typeof(int));
    
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(long));
    
            var spoofIDParameter = spoofID.HasValue ?
                new ObjectParameter("SpoofID", spoofID) :
                new ObjectParameter("SpoofID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutboundCallScheduleInsertTEST", nextScheduledTimeParameter, scheduleParameter, dIDParameter, outboundCallScheduleID, callScheduleTypeParameter, phoneNumberParameter, spoofIDParameter);
        }
    
        public virtual int OutboundCallScheduleUpdate(Nullable<long> outboundCallScheduleID, Nullable<System.DateTime> nextScheduled, Nullable<System.DateTime> lastRunTime)
        {
            var outboundCallScheduleIDParameter = outboundCallScheduleID.HasValue ?
                new ObjectParameter("OutboundCallScheduleID", outboundCallScheduleID) :
                new ObjectParameter("OutboundCallScheduleID", typeof(long));
    
            var nextScheduledParameter = nextScheduled.HasValue ?
                new ObjectParameter("NextScheduled", nextScheduled) :
                new ObjectParameter("NextScheduled", typeof(System.DateTime));
    
            var lastRunTimeParameter = lastRunTime.HasValue ?
                new ObjectParameter("LastRunTime", lastRunTime) :
                new ObjectParameter("LastRunTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutboundCallScheduleUpdate", outboundCallScheduleIDParameter, nextScheduledParameter, lastRunTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> OutboundCallScheduleViewByTargetID(Nullable<long> targetID, Nullable<bool> isGlobalOnly)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var isGlobalOnlyParameter = isGlobalOnly.HasValue ?
                new ObjectParameter("IsGlobalOnly", isGlobalOnly) :
                new ObjectParameter("IsGlobalOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("OutboundCallScheduleViewByTargetID", targetIDParameter, isGlobalOnlyParameter);
        }
    
        public virtual int OutboundCallSubscriptionListDelete(Nullable<long> iVRTreeID, Nullable<long> dID)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutboundCallSubscriptionListDelete", iVRTreeIDParameter, dIDParameter);
        }
    
        public virtual int OutboundEventSchedulerQueueUpdate(Nullable<long> oesID)
        {
            var oesIDParameter = oesID.HasValue ?
                new ObjectParameter("oesID", oesID) :
                new ObjectParameter("oesID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutboundEventSchedulerQueueUpdate", oesIDParameter);
        }
    
        public virtual ObjectResult<OutboundEventSchedulerService_Result> OutboundEventSchedulerService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutboundEventSchedulerService_Result>("OutboundEventSchedulerService");
        }
    
        public virtual ObjectResult<string> OutboundEventTypeURLView(Nullable<long> oet)
        {
            var oetParameter = oet.HasValue ?
                new ObjectParameter("oet", oet) :
                new ObjectParameter("oet", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("OutboundEventTypeURLView", oetParameter);
        }
    
        public virtual ObjectResult<PaymentGatewayView_Result> PaymentGatewayView(Nullable<long> paymentGatewayID)
        {
            var paymentGatewayIDParameter = paymentGatewayID.HasValue ?
                new ObjectParameter("PaymentGatewayID", paymentGatewayID) :
                new ObjectParameter("PaymentGatewayID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentGatewayView_Result>("PaymentGatewayView", paymentGatewayIDParameter);
        }
    
        public virtual int PDSHourDelete(Nullable<long> predictiveDialerScheduleID, Nullable<long> hour)
        {
            var predictiveDialerScheduleIDParameter = predictiveDialerScheduleID.HasValue ?
                new ObjectParameter("PredictiveDialerScheduleID", predictiveDialerScheduleID) :
                new ObjectParameter("PredictiveDialerScheduleID", typeof(long));
    
            var hourParameter = hour.HasValue ?
                new ObjectParameter("Hour", hour) :
                new ObjectParameter("Hour", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDSHourDelete", predictiveDialerScheduleIDParameter, hourParameter);
        }
    
        public virtual int PDSHourInsert(Nullable<long> predictiveDialerScheduleID, Nullable<int> hour, Nullable<int> transfers, Nullable<bool> easternTime, Nullable<bool> centralTime, Nullable<bool> mountainTime, Nullable<bool> pacificTime)
        {
            var predictiveDialerScheduleIDParameter = predictiveDialerScheduleID.HasValue ?
                new ObjectParameter("PredictiveDialerScheduleID", predictiveDialerScheduleID) :
                new ObjectParameter("PredictiveDialerScheduleID", typeof(long));
    
            var hourParameter = hour.HasValue ?
                new ObjectParameter("Hour", hour) :
                new ObjectParameter("Hour", typeof(int));
    
            var transfersParameter = transfers.HasValue ?
                new ObjectParameter("Transfers", transfers) :
                new ObjectParameter("Transfers", typeof(int));
    
            var easternTimeParameter = easternTime.HasValue ?
                new ObjectParameter("EasternTime", easternTime) :
                new ObjectParameter("EasternTime", typeof(bool));
    
            var centralTimeParameter = centralTime.HasValue ?
                new ObjectParameter("CentralTime", centralTime) :
                new ObjectParameter("CentralTime", typeof(bool));
    
            var mountainTimeParameter = mountainTime.HasValue ?
                new ObjectParameter("MountainTime", mountainTime) :
                new ObjectParameter("MountainTime", typeof(bool));
    
            var pacificTimeParameter = pacificTime.HasValue ?
                new ObjectParameter("PacificTime", pacificTime) :
                new ObjectParameter("PacificTime", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDSHourInsert", predictiveDialerScheduleIDParameter, hourParameter, transfersParameter, easternTimeParameter, centralTimeParameter, mountainTimeParameter, pacificTimeParameter);
        }
    
        public virtual ObjectResult<PDSHourViewByDate_Result> PDSHourViewByDate(Nullable<System.DateTime> scheduledDate, Nullable<long> campaignID)
        {
            var scheduledDateParameter = scheduledDate.HasValue ?
                new ObjectParameter("ScheduledDate", scheduledDate) :
                new ObjectParameter("ScheduledDate", typeof(System.DateTime));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDSHourViewByDate_Result>("PDSHourViewByDate", scheduledDateParameter, campaignIDParameter);
        }
    
        public virtual int PollResponseInsert(Nullable<long> pollID, Nullable<long> userID, Nullable<long> pollAnswerID)
        {
            var pollIDParameter = pollID.HasValue ?
                new ObjectParameter("PollID", pollID) :
                new ObjectParameter("PollID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var pollAnswerIDParameter = pollAnswerID.HasValue ?
                new ObjectParameter("PollAnswerID", pollAnswerID) :
                new ObjectParameter("PollAnswerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PollResponseInsert", pollIDParameter, userIDParameter, pollAnswerIDParameter);
        }
    
        public virtual int PredictiveDialerScheduleInsert(Nullable<System.DateTime> scheduledDate, Nullable<long> campaignID, Nullable<long> callerID, ObjectParameter predictiveDialerScheduleID)
        {
            var scheduledDateParameter = scheduledDate.HasValue ?
                new ObjectParameter("ScheduledDate", scheduledDate) :
                new ObjectParameter("ScheduledDate", typeof(System.DateTime));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PredictiveDialerScheduleInsert", scheduledDateParameter, campaignIDParameter, callerIDParameter, predictiveDialerScheduleID);
        }
    
        public virtual int PredictiveDialerScheduleUserInsert(Nullable<long> companyID, Nullable<long> predictiveDialerScheduleID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var predictiveDialerScheduleIDParameter = predictiveDialerScheduleID.HasValue ?
                new ObjectParameter("PredictiveDialerScheduleID", predictiveDialerScheduleID) :
                new ObjectParameter("PredictiveDialerScheduleID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PredictiveDialerScheduleUserInsert", companyIDParameter, predictiveDialerScheduleIDParameter);
        }
    
        public virtual int PredictiveDialerScheduleUserInsertOld(Nullable<long> companyID, Nullable<long> predictiveDialerScheduleID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var predictiveDialerScheduleIDParameter = predictiveDialerScheduleID.HasValue ?
                new ObjectParameter("PredictiveDialerScheduleID", predictiveDialerScheduleID) :
                new ObjectParameter("PredictiveDialerScheduleID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PredictiveDialerScheduleUserInsertOld", companyIDParameter, predictiveDialerScheduleIDParameter);
        }
    
        public virtual ObjectResult<PredictiveDialerScheduleView_Result> PredictiveDialerScheduleView(Nullable<System.DateTime> scheduledDate, Nullable<long> campaignID)
        {
            var scheduledDateParameter = scheduledDate.HasValue ?
                new ObjectParameter("ScheduledDate", scheduledDate) :
                new ObjectParameter("ScheduledDate", typeof(System.DateTime));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PredictiveDialerScheduleView_Result>("PredictiveDialerScheduleView", scheduledDateParameter, campaignIDParameter);
        }
    
        public virtual int ProcessBroadcastSMSQueue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcessBroadcastSMSQueue");
        }
    
        public virtual int ProcessBroadcastSMSQueueSendPage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcessBroadcastSMSQueueSendPage");
        }
    
        public virtual ObjectResult<ProcessBroadcastSMSQueueSendPagePrint_Result> ProcessBroadcastSMSQueueSendPagePrint(Nullable<long> broadcastSMSQueueID)
        {
            var broadcastSMSQueueIDParameter = broadcastSMSQueueID.HasValue ?
                new ObjectParameter("BroadcastSMSQueueID", broadcastSMSQueueID) :
                new ObjectParameter("BroadcastSMSQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcessBroadcastSMSQueueSendPagePrint_Result>("ProcessBroadcastSMSQueueSendPagePrint", broadcastSMSQueueIDParameter);
        }
    
        public virtual int ProcessNationalBroadcastSMSQueue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcessNationalBroadcastSMSQueue");
        }
    
        public virtual ObjectResult<PSMSPayoutTypeView_Result> PSMSPayoutTypeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PSMSPayoutTypeView_Result>("PSMSPayoutTypeView");
        }
    
        public virtual int PSMSStatusDelete(Nullable<int> pSMSStatusID)
        {
            var pSMSStatusIDParameter = pSMSStatusID.HasValue ?
                new ObjectParameter("PSMSStatusID", pSMSStatusID) :
                new ObjectParameter("PSMSStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSMSStatusDelete", pSMSStatusIDParameter);
        }
    
        public virtual int PSMSStatusInsert(ObjectParameter pSMSStatusID, string description)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSMSStatusInsert", pSMSStatusID, descriptionParameter);
        }
    
        public virtual int PSMSStatusUpdate(Nullable<int> pSMSStatusID, string description)
        {
            var pSMSStatusIDParameter = pSMSStatusID.HasValue ?
                new ObjectParameter("PSMSStatusID", pSMSStatusID) :
                new ObjectParameter("PSMSStatusID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSMSStatusUpdate", pSMSStatusIDParameter, descriptionParameter);
        }
    
        public virtual int PSMSTransactionDelete(Nullable<long> pSMSTransactionID)
        {
            var pSMSTransactionIDParameter = pSMSTransactionID.HasValue ?
                new ObjectParameter("PSMSTransactionID", pSMSTransactionID) :
                new ObjectParameter("PSMSTransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSMSTransactionDelete", pSMSTransactionIDParameter);
        }
    
        public virtual int PSMSTransactionInsert(ObjectParameter pSMSTransactionID, Nullable<long> transactionID, Nullable<long> aggregatorTransactionID, Nullable<int> pSMSStatusID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var aggregatorTransactionIDParameter = aggregatorTransactionID.HasValue ?
                new ObjectParameter("AggregatorTransactionID", aggregatorTransactionID) :
                new ObjectParameter("AggregatorTransactionID", typeof(long));
    
            var pSMSStatusIDParameter = pSMSStatusID.HasValue ?
                new ObjectParameter("PSMSStatusID", pSMSStatusID) :
                new ObjectParameter("PSMSStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSMSTransactionInsert", pSMSTransactionID, transactionIDParameter, aggregatorTransactionIDParameter, pSMSStatusIDParameter);
        }
    
        public virtual int PSMSTransactionUpdate(Nullable<long> pSMSTransactionID, Nullable<long> transactionID, Nullable<long> aggregatorTransactionID, Nullable<int> pSMSStatusID)
        {
            var pSMSTransactionIDParameter = pSMSTransactionID.HasValue ?
                new ObjectParameter("PSMSTransactionID", pSMSTransactionID) :
                new ObjectParameter("PSMSTransactionID", typeof(long));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var aggregatorTransactionIDParameter = aggregatorTransactionID.HasValue ?
                new ObjectParameter("AggregatorTransactionID", aggregatorTransactionID) :
                new ObjectParameter("AggregatorTransactionID", typeof(long));
    
            var pSMSStatusIDParameter = pSMSStatusID.HasValue ?
                new ObjectParameter("PSMSStatusID", pSMSStatusID) :
                new ObjectParameter("PSMSStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PSMSTransactionUpdate", pSMSTransactionIDParameter, transactionIDParameter, aggregatorTransactionIDParameter, pSMSStatusIDParameter);
        }
    
        public virtual ObjectResult<RandomDraw_Result> RandomDraw(Nullable<int> drawMembers, Nullable<int> maximumChances, string campaignIDs, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var drawMembersParameter = drawMembers.HasValue ?
                new ObjectParameter("DrawMembers", drawMembers) :
                new ObjectParameter("DrawMembers", typeof(int));
    
            var maximumChancesParameter = maximumChances.HasValue ?
                new ObjectParameter("MaximumChances", maximumChances) :
                new ObjectParameter("MaximumChances", typeof(int));
    
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RandomDraw_Result>("RandomDraw", drawMembersParameter, maximumChancesParameter, campaignIDsParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int RemoveContactsFromGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveContactsFromGroup");
        }
    
        public virtual int Report(string product, string phone, string begin, string end, string sortby, string sortType, string campaignID, string dID, ObjectParameter totalRows, string iVRTreeID)
        {
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var sortbyParameter = sortby != null ?
                new ObjectParameter("sortby", sortby) :
                new ObjectParameter("sortby", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var iVRTreeIDParameter = iVRTreeID != null ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report", productParameter, phoneParameter, beginParameter, endParameter, sortbyParameter, sortTypeParameter, campaignIDParameter, dIDParameter, totalRows, iVRTreeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Report_RW(string product, string phone, string begin, string end, string sortby, string sortType, string campaignID, string dID, ObjectParameter totalRows)
        {
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var sortbyParameter = sortby != null ?
                new ObjectParameter("sortby", sortby) :
                new ObjectParameter("sortby", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Report_RW", productParameter, phoneParameter, beginParameter, endParameter, sortbyParameter, sortTypeParameter, campaignIDParameter, dIDParameter, totalRows);
        }
    
        public virtual ObjectResult<ReportBroadcastSMSView_Result> ReportBroadcastSMSView(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, Nullable<long> phone, string searchKeyword, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportBroadcastSMSView_Result>("ReportBroadcastSMSView", campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, phoneParameter, searchKeywordParameter, totalRows);
        }
    
        public virtual ObjectResult<ReportBroadcastSummary_Result> ReportBroadcastSummary(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportBroadcastSummary_Result>("ReportBroadcastSummary", campaignIDParameter, startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual ObjectResult<ReportBroadcastSummaryCompleteGroupView_Result> ReportBroadcastSummaryCompleteGroupView(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportBroadcastSummaryCompleteGroupView_Result>("ReportBroadcastSummaryCompleteGroupView", campaignIDParameter, startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual int ReportBroadcastSummaryCompleteGroupViewCurrentDay(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportBroadcastSummaryCompleteGroupViewCurrentDay", startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual int ReportBroadcastSummaryCompleteGroupViewWithPaging(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID, string sortBy, string sortType, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRowsOut, ObjectParameter totalMessages, ObjectParameter totalBroadcasts)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportBroadcastSummaryCompleteGroupViewWithPaging", startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter, sortByParameter, sortTypeParameter, pageSizeParameter, pageNumberParameter, totalRowsOut, totalMessages, totalBroadcasts);
        }
    
        public virtual int ReportBroadcastSummaryCompleteListView(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportBroadcastSummaryCompleteListView", startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual ObjectResult<ReportBroadcastSummaryNewDONOTDELETE_Result> ReportBroadcastSummaryNewDONOTDELETE(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportBroadcastSummaryNewDONOTDELETE_Result>("ReportBroadcastSummaryNewDONOTDELETE", campaignIDParameter, startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual int ReportBroadcastSummaryScheduledGroupView(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportBroadcastSummaryScheduledGroupView", startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual int ReportBroadcastSummaryScheduledGroupViewWithPaging(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID, string sortBy, string sortType, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRowsOut)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportBroadcastSummaryScheduledGroupViewWithPaging", startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter, sortByParameter, sortTypeParameter, pageSizeParameter, pageNumberParameter, totalRowsOut);
        }
    
        public virtual int ReportBroadcastSummaryScheduledListView(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportBroadcastSummaryScheduledListView", startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual ObjectResult<ReportCarrier_Result> ReportCarrier(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportCarrier_Result>("ReportCarrier", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int ReportCarrierWithPercentage(string campaignID, string startDate, string endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportCarrierWithPercentage", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int ReportCatchAllView(string campaignID, string viewableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<long> shortCodeInfoID, Nullable<bool> isAdmin, ObjectParameter totalReceived, ObjectParameter totalReplied, ObjectParameter totalDeleted)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportCatchAllView", campaignIDParameter, viewableCampaignIDParameter, startDateParameter, endDateParameter, searchKeywordParameter, shortCodeInfoIDParameter, isAdminParameter, totalReceived, totalReplied, totalDeleted);
        }
    
        public virtual ObjectResult<ReportCDRCountByPhone_Result> ReportCDRCountByPhone(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportCDRCountByPhone_Result>("ReportCDRCountByPhone", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportChickFilAMonthlyBroadcastsPerLogin_Result> ReportChickFilAMonthlyBroadcastsPerLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportChickFilAMonthlyBroadcastsPerLogin_Result>("ReportChickFilAMonthlyBroadcastsPerLogin");
        }
    
        public virtual ObjectResult<ReportChickFilAMonthlySubscriberCounts_Result> ReportChickFilAMonthlySubscriberCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportChickFilAMonthlySubscriberCounts_Result>("ReportChickFilAMonthlySubscriberCounts");
        }
    
        public virtual ObjectResult<ReportClientsWithNotifications_Result> ReportClientsWithNotifications()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportClientsWithNotifications_Result>("ReportClientsWithNotifications");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> ReportCNNPollSorted(Nullable<long> companyID, string timeFrames)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var timeFramesParameter = timeFrames != null ?
                new ObjectParameter("TimeFrames", timeFrames) :
                new ObjectParameter("TimeFrames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("ReportCNNPollSorted", companyIDParameter, timeFramesParameter);
        }
    
        public virtual int ReportDashboardIVR(string campaignID, Nullable<System.DateTime> begin, Nullable<System.DateTime> end)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var beginParameter = begin.HasValue ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportDashboardIVR", campaignIDParameter, beginParameter, endParameter);
        }
    
        public virtual int ReportDashboardSubscribers(string campaignID, Nullable<System.DateTime> begin, Nullable<System.DateTime> end)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var beginParameter = begin.HasValue ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportDashboardSubscribers", campaignIDParameter, beginParameter, endParameter);
        }
    
        public virtual int ReportDavidTest(string product, string phone, string begin, string end, string sortby, string sortType, string campaignID, string dID, ObjectParameter totalRows, string iVRTreeID)
        {
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var sortbyParameter = sortby != null ?
                new ObjectParameter("sortby", sortby) :
                new ObjectParameter("sortby", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var iVRTreeIDParameter = iVRTreeID != null ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportDavidTest", productParameter, phoneParameter, beginParameter, endParameter, sortbyParameter, sortTypeParameter, campaignIDParameter, dIDParameter, totalRows, iVRTreeIDParameter);
        }
    
        public virtual int ReportDavidTestMENU(string product, string phone, string begin, string end, string sortby, string sortType, string campaignID, string dID, ObjectParameter totalRows, string iVRTreeID)
        {
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var sortbyParameter = sortby != null ?
                new ObjectParameter("sortby", sortby) :
                new ObjectParameter("sortby", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var iVRTreeIDParameter = iVRTreeID != null ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportDavidTestMENU", productParameter, phoneParameter, beginParameter, endParameter, sortbyParameter, sortTypeParameter, campaignIDParameter, dIDParameter, totalRows, iVRTreeIDParameter);
        }
    
        public virtual ObjectResult<ReportFailedLoginHistoryPastSevenDays_Result> ReportFailedLoginHistoryPastSevenDays()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportFailedLoginHistoryPastSevenDays_Result>("ReportFailedLoginHistoryPastSevenDays");
        }
    
        public virtual ObjectResult<ReportFeedbackView_Result> ReportFeedbackView(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, Nullable<long> messageFlowID, Nullable<long> phone, string searchKeyword, Nullable<bool> isAdmin, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportFeedbackView_Result>("ReportFeedbackView", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, messageFlowIDParameter, phoneParameter, searchKeywordParameter, isAdminParameter, totalRows);
        }
    
        public virtual ObjectResult<ReportFeedbackViewTimeSpan_Result> ReportFeedbackViewTimeSpan(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, Nullable<long> messageFlowID, Nullable<long> phone, string searchKeyword, Nullable<bool> isAdmin, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportFeedbackViewTimeSpan_Result>("ReportFeedbackViewTimeSpan", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, messageFlowIDParameter, phoneParameter, searchKeywordParameter, isAdminParameter, totalRows);
        }
    
        public virtual int ReportFeedbackViewWithPaging(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string orderByClause, Nullable<long> messageFlowID, Nullable<long> phone, string searchKeyword, Nullable<bool> isAdmin, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var orderByClauseParameter = orderByClause != null ?
                new ObjectParameter("OrderByClause", orderByClause) :
                new ObjectParameter("OrderByClause", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportFeedbackViewWithPaging", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, orderByClauseParameter, messageFlowIDParameter, phoneParameter, searchKeywordParameter, isAdminParameter, pageSizeParameter, pageNumberParameter, totalRows);
        }
    
        public virtual int ReportGeographicDistribution(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportGeographicDistribution", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportLoginHistory_Result> ReportLoginHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportLoginHistory_Result>("ReportLoginHistory");
        }
    
        public virtual ObjectResult<ReportLoginHistoryPastSevenDays_Result> ReportLoginHistoryPastSevenDays()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportLoginHistoryPastSevenDays_Result>("ReportLoginHistoryPastSevenDays");
        }
    
        public virtual ObjectResult<ReportMenuSorted_Result> ReportMenuSorted(string campaignID, string startDate, string endDate, string descSearch)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var descSearchParameter = descSearch != null ?
                new ObjectParameter("DescSearch", descSearch) :
                new ObjectParameter("DescSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMenuSorted_Result>("ReportMenuSorted", campaignIDParameter, startDateParameter, endDateParameter, descSearchParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ReportMessageDetailsView(string messageFlowID, string phone, string begin, string end, string sortby, string sortType, string campaignID, ObjectParameter totalRows, string searchKeyword)
        {
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var sortbyParameter = sortby != null ?
                new ObjectParameter("sortby", sortby) :
                new ObjectParameter("sortby", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ReportMessageDetailsView", messageFlowIDParameter, phoneParameter, beginParameter, endParameter, sortbyParameter, sortTypeParameter, campaignIDParameter, totalRows, searchKeywordParameter);
        }
    
        public virtual ObjectResult<ReportMessageSummaryView_Result> ReportMessageSummaryView(string campaignID, string companyID, string begin, string end)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMessageSummaryView_Result>("ReportMessageSummaryView", campaignIDParameter, companyIDParameter, beginParameter, endParameter);
        }
    
        public virtual int ReportMessageSummaryView_Archive(string campaignID, string companyID, string begin, string end, Nullable<bool> isHourly, string sortBy, string sortType, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRowsOut)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var isHourlyParameter = isHourly.HasValue ?
                new ObjectParameter("IsHourly", isHourly) :
                new ObjectParameter("IsHourly", typeof(bool));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportMessageSummaryView_Archive", campaignIDParameter, companyIDParameter, beginParameter, endParameter, isHourlyParameter, sortByParameter, sortTypeParameter, pageSizeParameter, pageNumberParameter, totalRowsOut);
        }
    
        public virtual ObjectResult<ReportMessageSummaryView_PAB_Result> ReportMessageSummaryView_PAB(string campaignID, string companyID, string begin, string end, Nullable<bool> isHourly)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var isHourlyParameter = isHourly.HasValue ?
                new ObjectParameter("IsHourly", isHourly) :
                new ObjectParameter("IsHourly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMessageSummaryView_PAB_Result>("ReportMessageSummaryView_PAB", campaignIDParameter, companyIDParameter, beginParameter, endParameter, isHourlyParameter);
        }
    
        public virtual int ReportMessageSummaryView_PABWithPaging(string campaignID, string companyID, string begin, string end, Nullable<bool> isHourly, string sortBy, string sortType, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRowsOut)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var isHourlyParameter = isHourly.HasValue ?
                new ObjectParameter("IsHourly", isHourly) :
                new ObjectParameter("IsHourly", typeof(bool));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportMessageSummaryView_PABWithPaging", campaignIDParameter, companyIDParameter, beginParameter, endParameter, isHourlyParameter, sortByParameter, sortTypeParameter, pageSizeParameter, pageNumberParameter, totalRowsOut);
        }
    
        public virtual int ReportMessageSummaryView2(string phone, string begin, string end, string campaignID, string companyID)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportMessageSummaryView2", phoneParameter, beginParameter, endParameter, campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<ReportMessageSummaryView2_PAB_Result> ReportMessageSummaryView2_PAB(string phone, string begin, string end, string campaignID, string companyID, Nullable<bool> isHourly)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var isHourlyParameter = isHourly.HasValue ?
                new ObjectParameter("IsHourly", isHourly) :
                new ObjectParameter("IsHourly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMessageSummaryView2_PAB_Result>("ReportMessageSummaryView2_PAB", phoneParameter, beginParameter, endParameter, campaignIDParameter, companyIDParameter, isHourlyParameter);
        }
    
        public virtual int ReportMessageSummaryView2_PAB_Archive(string begin, string end, string campaignID)
        {
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportMessageSummaryView2_PAB_Archive", beginParameter, endParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<ReportMessageSummaryView2_PABTest_Result> ReportMessageSummaryView2_PABTest(string phone, string begin, string end, string campaignID, string companyID, Nullable<bool> isHourly)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var isHourlyParameter = isHourly.HasValue ?
                new ObjectParameter("IsHourly", isHourly) :
                new ObjectParameter("IsHourly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMessageSummaryView2_PABTest_Result>("ReportMessageSummaryView2_PABTest", phoneParameter, beginParameter, endParameter, campaignIDParameter, companyIDParameter, isHourlyParameter);
        }
    
        public virtual ObjectResult<ReportMOView_Result> ReportMOView(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, Nullable<long> messageFlowID, Nullable<long> phone, string searchKeyword, Nullable<bool> isAdmin, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMOView_Result>("ReportMOView", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, messageFlowIDParameter, phoneParameter, searchKeywordParameter, isAdminParameter, totalRows);
        }
    
        public virtual ObjectResult<ReportMOViewSpeedTest_Result> ReportMOViewSpeedTest(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, Nullable<long> messageFlowID, Nullable<long> phone, string searchKeyword, Nullable<bool> isAdmin, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMOViewSpeedTest_Result>("ReportMOViewSpeedTest", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, messageFlowIDParameter, phoneParameter, searchKeywordParameter, isAdminParameter, totalRows);
        }
    
        public virtual ObjectResult<ReportMOViewTest_Result> ReportMOViewTest(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, Nullable<long> messageFlowID, Nullable<long> phone, string searchKeyword, Nullable<bool> isAdmin, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMOViewTest_Result>("ReportMOViewTest", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, messageFlowIDParameter, phoneParameter, searchKeywordParameter, isAdminParameter, totalRows);
        }
    
        public virtual ObjectResult<ReportMOViewWithPaging_Result> ReportMOViewWithPaging(string campaignID, string viewableCampaignID, string editableCampaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, Nullable<long> messageFlowID, Nullable<long> phone, string searchKeyword, Nullable<bool> isAdmin, Nullable<long> startIndex, Nullable<long> endIndex, ObjectParameter totalRows)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var viewableCampaignIDParameter = viewableCampaignID != null ?
                new ObjectParameter("ViewableCampaignID", viewableCampaignID) :
                new ObjectParameter("ViewableCampaignID", typeof(string));
    
            var editableCampaignIDParameter = editableCampaignID != null ?
                new ObjectParameter("EditableCampaignID", editableCampaignID) :
                new ObjectParameter("EditableCampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("startIndex", startIndex) :
                new ObjectParameter("startIndex", typeof(long));
    
            var endIndexParameter = endIndex.HasValue ?
                new ObjectParameter("endIndex", endIndex) :
                new ObjectParameter("endIndex", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMOViewWithPaging_Result>("ReportMOViewWithPaging", campaignIDParameter, viewableCampaignIDParameter, editableCampaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, messageFlowIDParameter, phoneParameter, searchKeywordParameter, isAdminParameter, startIndexParameter, endIndexParameter, totalRows);
        }
    
        public virtual ObjectResult<ReportMTCount_Result> ReportMTCount(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMTCount_Result>("ReportMTCount", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ReportMTCount2(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ReportMTCount2", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportMTCountJT_Result> ReportMTCountJT(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMTCountJT_Result>("ReportMTCountJT", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportMTCountPastData_Result> ReportMTCountPastData(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMTCountPastData_Result>("ReportMTCountPastData", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportNotificationList_Result> ReportNotificationList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportNotificationList_Result>("ReportNotificationList");
        }
    
        public virtual ObjectResult<ReportOptInsBySource_Result> ReportOptInsBySource(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportOptInsBySource_Result>("ReportOptInsBySource", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportOptInSource_Result> ReportOptInSource(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportOptInSource_Result>("ReportOptInSource", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportPollAudienceResponse_Result> ReportPollAudienceResponse(string campaignIDs)
        {
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportPollAudienceResponse_Result>("ReportPollAudienceResponse", campaignIDsParameter);
        }
    
        public virtual ObjectResult<ReportPollDIDResponse_Result> ReportPollDIDResponse(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> pollCampaignID, Nullable<long> didCampaignID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var pollCampaignIDParameter = pollCampaignID.HasValue ?
                new ObjectParameter("PollCampaignID", pollCampaignID) :
                new ObjectParameter("PollCampaignID", typeof(long));
    
            var didCampaignIDParameter = didCampaignID.HasValue ?
                new ObjectParameter("DidCampaignID", didCampaignID) :
                new ObjectParameter("DidCampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportPollDIDResponse_Result>("ReportPollDIDResponse", startDateParameter, endDateParameter, pollCampaignIDParameter, didCampaignIDParameter);
        }
    
        public virtual ObjectResult<ReportScheduledBroadcastSummaryLimited_Result> ReportScheduledBroadcastSummaryLimited(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportScheduledBroadcastSummaryLimited_Result>("ReportScheduledBroadcastSummaryLimited", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int ReportScheduledBroadcastSummaryLimitedAsync(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportScheduledBroadcastSummaryLimitedAsync", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportScheduledBroadcastSummaryLimitedWithFilter_Result> ReportScheduledBroadcastSummaryLimitedWithFilter(string campaignIDs, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> userSID, Nullable<long> companySID, Nullable<bool> isAdmin, Nullable<short> displayLength, Nullable<short> displayStart, string sortOrder, Nullable<short> sortCol)
        {
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var userSIDParameter = userSID.HasValue ?
                new ObjectParameter("UserSID", userSID) :
                new ObjectParameter("UserSID", typeof(long));
    
            var companySIDParameter = companySID.HasValue ?
                new ObjectParameter("CompanySID", companySID) :
                new ObjectParameter("CompanySID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(short));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(short));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportScheduledBroadcastSummaryLimitedWithFilter_Result>("ReportScheduledBroadcastSummaryLimitedWithFilter", campaignIDsParameter, startDateParameter, endDateParameter, userSIDParameter, companySIDParameter, isAdminParameter, displayLengthParameter, displayStartParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual ObjectResult<ReportSonicDistinctSubscriberCount_Result> ReportSonicDistinctSubscriberCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportSonicDistinctSubscriberCount_Result>("ReportSonicDistinctSubscriberCount");
        }
    
        public virtual int ReportSonicWeeklySubscriberCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSonicWeeklySubscriberCount");
        }
    
        public virtual int ReportStamptFraud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportStamptFraud");
        }
    
        public virtual ObjectResult<ReportSubscriberCount_Result> ReportSubscriberCount(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportSubscriberCount_Result>("ReportSubscriberCount", dateParameter);
        }
    
        public virtual int ReportSubscriberSummary(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSubscriberSummary", startDateParameter, endDateParameter);
        }
    
        public virtual int ReportSubscriberSummaryBasedOnBroadcast(string campaignID, string startDate, string endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSubscriberSummaryBasedOnBroadcast", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ReportSubscriberSummaryCount_Result> ReportSubscriberSummaryCount(string campaignIDs, string startDate, string endDate, Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin)
        {
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportSubscriberSummaryCount_Result>("ReportSubscriberSummaryCount", campaignIDsParameter, startDateParameter, endDateParameter, userIDParameter, companyIDParameter, isAdminParameter);
        }
    
        public virtual ObjectResult<ReportSubscriberSummaryWithPaging_Result> ReportSubscriberSummaryWithPaging(string campaignIDs, string startDate, string endDate, Nullable<long> userID, Nullable<long> companyID, Nullable<bool> isAdmin, Nullable<int> displayLength, Nullable<int> displayStart, string sortOrder, Nullable<int> sortCol)
        {
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportSubscriberSummaryWithPaging_Result>("ReportSubscriberSummaryWithPaging", campaignIDsParameter, startDateParameter, endDateParameter, userIDParameter, companyIDParameter, isAdminParameter, displayLengthParameter, displayStartParameter, sortOrderParameter, sortColParameter);
        }
    
        public virtual int ReportSubscription(string campaignID, string startDate, string endDate, Nullable<bool> iVRorMessage, Nullable<bool> webVsStandard)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var iVRorMessageParameter = iVRorMessage.HasValue ?
                new ObjectParameter("IVRorMessage", iVRorMessage) :
                new ObjectParameter("IVRorMessage", typeof(bool));
    
            var webVsStandardParameter = webVsStandard.HasValue ?
                new ObjectParameter("WebVsStandard", webVsStandard) :
                new ObjectParameter("WebVsStandard", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSubscription", campaignIDParameter, startDateParameter, endDateParameter, iVRorMessageParameter, webVsStandardParameter);
        }
    
        public virtual int ReportSubscriptionNew(string campaignID, string startDate, string endDate, Nullable<bool> iVRorMessage, Nullable<bool> webVsStandard)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var iVRorMessageParameter = iVRorMessage.HasValue ?
                new ObjectParameter("IVRorMessage", iVRorMessage) :
                new ObjectParameter("IVRorMessage", typeof(bool));
    
            var webVsStandardParameter = webVsStandard.HasValue ?
                new ObjectParameter("WebVsStandard", webVsStandard) :
                new ObjectParameter("WebVsStandard", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSubscriptionNew", campaignIDParameter, startDateParameter, endDateParameter, iVRorMessageParameter, webVsStandardParameter);
        }
    
        public virtual int ReportSubscriptionOld(string campaignID, string startDate, string endDate, Nullable<bool> iVRorMessage, Nullable<bool> webVsStandard)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var iVRorMessageParameter = iVRorMessage.HasValue ?
                new ObjectParameter("IVRorMessage", iVRorMessage) :
                new ObjectParameter("IVRorMessage", typeof(bool));
    
            var webVsStandardParameter = webVsStandard.HasValue ?
                new ObjectParameter("WebVsStandard", webVsStandard) :
                new ObjectParameter("WebVsStandard", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSubscriptionOld", campaignIDParameter, startDateParameter, endDateParameter, iVRorMessageParameter, webVsStandardParameter);
        }
    
        public virtual int ReportSubscriptionTest(string campaignID, string startDate, string endDate, Nullable<bool> iVRorMessage, Nullable<bool> webVsStandard)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var iVRorMessageParameter = iVRorMessage.HasValue ?
                new ObjectParameter("IVRorMessage", iVRorMessage) :
                new ObjectParameter("IVRorMessage", typeof(bool));
    
            var webVsStandardParameter = webVsStandard.HasValue ?
                new ObjectParameter("WebVsStandard", webVsStandard) :
                new ObjectParameter("WebVsStandard", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSubscriptionTest", campaignIDParameter, startDateParameter, endDateParameter, iVRorMessageParameter, webVsStandardParameter);
        }
    
        public virtual int ReportSubscriptionTEST2(string campaignID, string startDate, string endDate, Nullable<bool> iVRorMessage, Nullable<bool> webVsStandard)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var iVRorMessageParameter = iVRorMessage.HasValue ?
                new ObjectParameter("IVRorMessage", iVRorMessage) :
                new ObjectParameter("IVRorMessage", typeof(bool));
    
            var webVsStandardParameter = webVsStandard.HasValue ?
                new ObjectParameter("WebVsStandard", webVsStandard) :
                new ObjectParameter("WebVsStandard", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSubscriptionTEST2", campaignIDParameter, startDateParameter, endDateParameter, iVRorMessageParameter, webVsStandardParameter);
        }
    
        public virtual ObjectResult<ReportSummaryBroadcastSMSView_Result> ReportSummaryBroadcastSMSView(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string searchKeyword, Nullable<int> isScheduled, Nullable<bool> isListByCampaign, Nullable<long> userID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            var isScheduledParameter = isScheduled.HasValue ?
                new ObjectParameter("IsScheduled", isScheduled) :
                new ObjectParameter("IsScheduled", typeof(int));
    
            var isListByCampaignParameter = isListByCampaign.HasValue ?
                new ObjectParameter("IsListByCampaign", isListByCampaign) :
                new ObjectParameter("IsListByCampaign", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportSummaryBroadcastSMSView_Result>("ReportSummaryBroadcastSMSView", campaignIDParameter, startDateParameter, endDateParameter, searchKeywordParameter, isScheduledParameter, isListByCampaignParameter, userIDParameter);
        }
    
        public virtual int ReportSummaryView(string campaignID, string dID, string begin, string end)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSummaryView", campaignIDParameter, dIDParameter, beginParameter, endParameter);
        }
    
        public virtual int ReportSummaryView_PAB(string campaignID, string companyID, string dID, string begin, string end)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSummaryView_PAB", campaignIDParameter, companyIDParameter, dIDParameter, beginParameter, endParameter);
        }
    
        public virtual int ReportSummaryView_PABWithPaging(string campaignID, string companyID, string dID, string begin, string end, string sortBy, string sortType, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRowsOut)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportSummaryView_PABWithPaging", campaignIDParameter, companyIDParameter, dIDParameter, beginParameter, endParameter, sortByParameter, sortTypeParameter, pageSizeParameter, pageNumberParameter, totalRowsOut);
        }
    
        public virtual ObjectResult<ReportTarget_Result> ReportTarget(string campaignID, string startDate, string endDate, string targetDescSearch)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var targetDescSearchParameter = targetDescSearch != null ?
                new ObjectParameter("TargetDescSearch", targetDescSearch) :
                new ObjectParameter("TargetDescSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTarget_Result>("ReportTarget", campaignIDParameter, startDateParameter, endDateParameter, targetDescSearchParameter);
        }
    
        public virtual ObjectResult<ReportTargetSorted_Result> ReportTargetSorted(string campaignID, string startDate, string endDate, string targetDescSearch)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var targetDescSearchParameter = targetDescSearch != null ?
                new ObjectParameter("TargetDescSearch", targetDescSearch) :
                new ObjectParameter("TargetDescSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTargetSorted_Result>("ReportTargetSorted", campaignIDParameter, startDateParameter, endDateParameter, targetDescSearchParameter);
        }
    
        public virtual ObjectResult<ReportTargetSortedJTTest_Result> ReportTargetSortedJTTest(string campaignID, string startDate, string endDate, string targetDescSearch)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var targetDescSearchParameter = targetDescSearch != null ?
                new ObjectParameter("TargetDescSearch", targetDescSearch) :
                new ObjectParameter("TargetDescSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTargetSortedJTTest_Result>("ReportTargetSortedJTTest", campaignIDParameter, startDateParameter, endDateParameter, targetDescSearchParameter);
        }
    
        public virtual ObjectResult<ReportTargetTwilight_Result> ReportTargetTwilight(string campaignID, string startDate, string endDate, string targetDescSearch)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var targetDescSearchParameter = targetDescSearch != null ?
                new ObjectParameter("TargetDescSearch", targetDescSearch) :
                new ObjectParameter("TargetDescSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTargetTwilight_Result>("ReportTargetTwilight", campaignIDParameter, startDateParameter, endDateParameter, targetDescSearchParameter);
        }
    
        public virtual int ReportTextMessageDetailsView(string messageFlowID, string phone, string begin, string end, string sortby, string sortType, string campaignID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, string searchKeyword)
        {
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var beginParameter = begin != null ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(string));
    
            var sortbyParameter = sortby != null ?
                new ObjectParameter("sortby", sortby) :
                new ObjectParameter("sortby", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportTextMessageDetailsView", messageFlowIDParameter, phoneParameter, beginParameter, endParameter, sortbyParameter, sortTypeParameter, campaignIDParameter, pageSizeParameter, pageNumberParameter, totalRows, searchKeywordParameter);
        }
    
        public virtual int ReportTotalVsUniqueContacts(string campaignID, Nullable<System.DateTime> begin, Nullable<System.DateTime> end)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var beginParameter = begin.HasValue ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportTotalVsUniqueContacts", campaignIDParameter, beginParameter, endParameter);
        }
    
        public virtual ObjectResult<ReportVoting_Result> ReportVoting(string campaignID, string startDate, string endDate, string targetDescSearch)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var targetDescSearchParameter = targetDescSearch != null ?
                new ObjectParameter("TargetDescSearch", targetDescSearch) :
                new ObjectParameter("TargetDescSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportVoting_Result>("ReportVoting", campaignIDParameter, startDateParameter, endDateParameter, targetDescSearchParameter);
        }
    
        public virtual int RevertMessageFlowTreeToParent(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RevertMessageFlowTreeToParent", transactionIDParameter);
        }
    
        public virtual ObjectResult<RingtonesDistributionChart_Result> RingtonesDistributionChart(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string targetID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var targetIDParameter = targetID != null ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RingtonesDistributionChart_Result>("RingtonesDistributionChart", campaignIDParameter, startDateParameter, endDateParameter, targetIDParameter);
        }
    
        public virtual int SaveCampaignsForReporting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveCampaignsForReporting");
        }
    
        public virtual ObjectResult<SendC4Prize_Result> SendC4Prize(Nullable<int> action, Nullable<long> prizeListID, Nullable<long> prizePoolID, Nullable<long> campaignID, Nullable<long> userID)
        {
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            var prizeListIDParameter = prizeListID.HasValue ?
                new ObjectParameter("PrizeListID", prizeListID) :
                new ObjectParameter("PrizeListID", typeof(long));
    
            var prizePoolIDParameter = prizePoolID.HasValue ?
                new ObjectParameter("PrizePoolID", prizePoolID) :
                new ObjectParameter("PrizePoolID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SendC4Prize_Result>("SendC4Prize", actionParameter, prizeListIDParameter, prizePoolIDParameter, campaignIDParameter, userIDParameter);
        }
    
        public virtual int ServiceIDInsert(Nullable<long> shortCodeKeywordID, Nullable<long> carrierID, Nullable<long> serviceID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServiceIDInsert", shortCodeKeywordIDParameter, carrierIDParameter, serviceIDParameter);
        }
    
        public virtual int ServiceIDInsertUpdate(Nullable<long> shortCodeKeywordID, Nullable<long> carrierID, Nullable<long> serviceID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServiceIDInsertUpdate", shortCodeKeywordIDParameter, carrierIDParameter, serviceIDParameter);
        }
    
        public virtual int ServiceIDUpdate(Nullable<long> shortCodeKeywordID, Nullable<long> carrierID, Nullable<long> serviceID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServiceIDUpdate", shortCodeKeywordIDParameter, carrierIDParameter, serviceIDParameter);
        }
    
        public virtual ObjectResult<ServiceIDView_ShortCodeKeywordID_Result> ServiceIDView_ShortCodeKeywordID(Nullable<long> shortCodeKeywordID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiceIDView_ShortCodeKeywordID_Result>("ServiceIDView_ShortCodeKeywordID", shortCodeKeywordIDParameter);
        }
    
        public virtual int SetReportAccessByCompanyID(Nullable<long> companyID, Nullable<int> reportID, Nullable<bool> hasAccess)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(int));
    
            var hasAccessParameter = hasAccess.HasValue ?
                new ObjectParameter("HasAccess", hasAccess) :
                new ObjectParameter("HasAccess", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetReportAccessByCompanyID", companyIDParameter, reportIDParameter, hasAccessParameter);
        }
    
        public virtual int ShortCodeInfoDelete(Nullable<long> shortCodeInfoID)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShortCodeInfoDelete", shortCodeInfoIDParameter);
        }
    
        public virtual int ShortCodeInfoInsert(ObjectParameter shortCodeInfoID, Nullable<long> shortCode, Nullable<int> shortCodeProviderID, string login, string password, string description, Nullable<long> companyID, string mBloxProfileID, string mBloxServerURL, Nullable<long> shortCodeTransportID)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var shortCodeProviderIDParameter = shortCodeProviderID.HasValue ?
                new ObjectParameter("ShortCodeProviderID", shortCodeProviderID) :
                new ObjectParameter("ShortCodeProviderID", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var mBloxProfileIDParameter = mBloxProfileID != null ?
                new ObjectParameter("mBloxProfileID", mBloxProfileID) :
                new ObjectParameter("mBloxProfileID", typeof(string));
    
            var mBloxServerURLParameter = mBloxServerURL != null ?
                new ObjectParameter("mBloxServerURL", mBloxServerURL) :
                new ObjectParameter("mBloxServerURL", typeof(string));
    
            var shortCodeTransportIDParameter = shortCodeTransportID.HasValue ?
                new ObjectParameter("ShortCodeTransportID", shortCodeTransportID) :
                new ObjectParameter("ShortCodeTransportID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShortCodeInfoInsert", shortCodeInfoID, shortCodeParameter, shortCodeProviderIDParameter, loginParameter, passwordParameter, descriptionParameter, companyIDParameter, mBloxProfileIDParameter, mBloxServerURLParameter, shortCodeTransportIDParameter);
        }
    
        public virtual int ShortCodeInfoPasswordUpdate(Nullable<long> shortCodeInfoID, string password)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShortCodeInfoPasswordUpdate", shortCodeInfoIDParameter, passwordParameter);
        }
    
        public virtual int ShortCodeInfoUpdate(Nullable<long> shortCodeInfoID, Nullable<long> shortCode, Nullable<int> shortCodeProviderID, string login, string description, Nullable<long> companyID, string mBloxProfileID, string mBloxServerURL, Nullable<long> shortCodeTransportID)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var shortCodeProviderIDParameter = shortCodeProviderID.HasValue ?
                new ObjectParameter("ShortCodeProviderID", shortCodeProviderID) :
                new ObjectParameter("ShortCodeProviderID", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var mBloxProfileIDParameter = mBloxProfileID != null ?
                new ObjectParameter("mBloxProfileID", mBloxProfileID) :
                new ObjectParameter("mBloxProfileID", typeof(string));
    
            var mBloxServerURLParameter = mBloxServerURL != null ?
                new ObjectParameter("mBloxServerURL", mBloxServerURL) :
                new ObjectParameter("mBloxServerURL", typeof(string));
    
            var shortCodeTransportIDParameter = shortCodeTransportID.HasValue ?
                new ObjectParameter("ShortCodeTransportID", shortCodeTransportID) :
                new ObjectParameter("ShortCodeTransportID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShortCodeInfoUpdate", shortCodeInfoIDParameter, shortCodeParameter, shortCodeProviderIDParameter, loginParameter, descriptionParameter, companyIDParameter, mBloxProfileIDParameter, mBloxServerURLParameter, shortCodeTransportIDParameter);
        }
    
        public virtual ObjectResult<string> ShortCodeInfoUpdateCheck(Nullable<long> shortCodeInfoID, Nullable<long> shortCode)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShortCodeInfoUpdateCheck", shortCodeInfoIDParameter, shortCodeParameter);
        }
    
        public virtual ObjectResult<ShortCodeInfoView_Result> ShortCodeInfoView(Nullable<long> companyID, Nullable<bool> isCatchAllOnly)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var isCatchAllOnlyParameter = isCatchAllOnly.HasValue ?
                new ObjectParameter("IsCatchAllOnly", isCatchAllOnly) :
                new ObjectParameter("IsCatchAllOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeInfoView_Result>("ShortCodeInfoView", companyIDParameter, isCatchAllOnlyParameter);
        }
    
        public virtual ObjectResult<ShortCodeInfoView_with_ShortCodeInfoID_Result> ShortCodeInfoView_with_ShortCodeInfoID(Nullable<long> shortCodeInfoID)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeInfoView_with_ShortCodeInfoID_Result>("ShortCodeInfoView_with_ShortCodeInfoID", shortCodeInfoIDParameter);
        }
    
        public virtual ObjectResult<ShortCodeInfoViewByCampaign_Result> ShortCodeInfoViewByCampaign(string campaignID, Nullable<bool> isCatchAllOnly)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var isCatchAllOnlyParameter = isCatchAllOnly.HasValue ?
                new ObjectParameter("IsCatchAllOnly", isCatchAllOnly) :
                new ObjectParameter("IsCatchAllOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeInfoViewByCampaign_Result>("ShortCodeInfoViewByCampaign", campaignIDParameter, isCatchAllOnlyParameter);
        }
    
        public virtual ObjectResult<ShortCodeKeyword_ViewInfo_Result> ShortCodeKeyword_ViewInfo(string keyword, Nullable<long> shortCode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeyword_ViewInfo_Result>("ShortCodeKeyword_ViewInfo", keywordParameter, shortCodeParameter);
        }
    
        public virtual ObjectResult<ShortCodeKeyword_ViewInfo_MessageFlow_Result> ShortCodeKeyword_ViewInfo_MessageFlow(string keyword, Nullable<long> shortCode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeyword_ViewInfo_MessageFlow_Result>("ShortCodeKeyword_ViewInfo_MessageFlow", keywordParameter, shortCodeParameter);
        }
    
        public virtual ObjectResult<ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxInt_Result> ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxInt(string keyword, Nullable<long> shortCode, ObjectParameter userID, Nullable<int> userTypeID, Nullable<long> phone, Nullable<System.DateTime> dateCreated, Nullable<bool> active, Nullable<long> mobileModelID, Nullable<long> mobileCarrierID, ObjectParameter hasExceeded, ObjectParameter messagingTargetID, ObjectParameter hasExceededReplies, ObjectParameter isOutsideActivePeriod, ObjectParameter inactiveCampaignMessageText)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var mobileModelIDParameter = mobileModelID.HasValue ?
                new ObjectParameter("MobileModelID", mobileModelID) :
                new ObjectParameter("MobileModelID", typeof(long));
    
            var mobileCarrierIDParameter = mobileCarrierID.HasValue ?
                new ObjectParameter("MobileCarrierID", mobileCarrierID) :
                new ObjectParameter("MobileCarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxInt_Result>("ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxInt", keywordParameter, shortCodeParameter, userID, userTypeIDParameter, phoneParameter, dateCreatedParameter, activeParameter, mobileModelIDParameter, mobileCarrierIDParameter, hasExceeded, messagingTargetID, hasExceededReplies, isOutsideActivePeriod, inactiveCampaignMessageText);
        }
    
        public virtual ObjectResult<ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxIntJT_Result> ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxIntJT(string keyword, Nullable<long> shortCode, ObjectParameter userID, Nullable<int> userTypeID, Nullable<long> phone, Nullable<System.DateTime> dateCreated, Nullable<bool> active, Nullable<long> mobileModelID, Nullable<long> mobileCarrierID, ObjectParameter hasExceeded, ObjectParameter messagingTargetID, ObjectParameter hasExceededReplies, ObjectParameter isOutsideActivePeriod, ObjectParameter inactiveCampaignMessageText)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var mobileModelIDParameter = mobileModelID.HasValue ?
                new ObjectParameter("MobileModelID", mobileModelID) :
                new ObjectParameter("MobileModelID", typeof(long));
    
            var mobileCarrierIDParameter = mobileCarrierID.HasValue ?
                new ObjectParameter("MobileCarrierID", mobileCarrierID) :
                new ObjectParameter("MobileCarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxIntJT_Result>("ShortCodeKeyword_ViewInfo_MessageFlow_UserInsert_MaxIntJT", keywordParameter, shortCodeParameter, userID, userTypeIDParameter, phoneParameter, dateCreatedParameter, activeParameter, mobileModelIDParameter, mobileCarrierIDParameter, hasExceeded, messagingTargetID, hasExceededReplies, isOutsideActivePeriod, inactiveCampaignMessageText);
        }
    
        public virtual ObjectResult<ShortCodeKeyword_ViewInfo_ShortCodeKeywordID_Result> ShortCodeKeyword_ViewInfo_ShortCodeKeywordID(Nullable<long> shortCodeKeywordID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeyword_ViewInfo_ShortCodeKeywordID_Result>("ShortCodeKeyword_ViewInfo_ShortCodeKeywordID", shortCodeKeywordIDParameter);
        }
    
        public virtual int ShortCodeKeywordsDelete(Nullable<long> shortCodeKeywordID, Nullable<long> campaignID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShortCodeKeywordsDelete", shortCodeKeywordIDParameter, campaignIDParameter);
        }
    
        public virtual int ShortCodeKeywordsInsert(ObjectParameter shortCodeKeywordID, Nullable<long> shortCodeInfoID, string keyword, Nullable<decimal> price, Nullable<long> serviceID, Nullable<long> userID)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShortCodeKeywordsInsert", shortCodeKeywordID, shortCodeInfoIDParameter, keywordParameter, priceParameter, serviceIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<ShortCodeKeywordsInsertCheck_Result> ShortCodeKeywordsInsertCheck(Nullable<long> shortCode, string keyword)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeywordsInsertCheck_Result>("ShortCodeKeywordsInsertCheck", shortCodeParameter, keywordParameter);
        }
    
        public virtual ObjectResult<string> ShortCodeKeywordsInsertCheckAll(Nullable<long> shortCode, string keyword)
        {
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShortCodeKeywordsInsertCheckAll", shortCodeParameter, keywordParameter);
        }
    
        public virtual ObjectResult<ShortCodeKeywordsMessageFlowInsertCheck_Result> ShortCodeKeywordsMessageFlowInsertCheck(Nullable<long> messageFlowInputID, string keyword, Nullable<long> messageFlowID)
        {
            var messageFlowInputIDParameter = messageFlowInputID.HasValue ?
                new ObjectParameter("MessageFlowInputID", messageFlowInputID) :
                new ObjectParameter("MessageFlowInputID", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeywordsMessageFlowInsertCheck_Result>("ShortCodeKeywordsMessageFlowInsertCheck", messageFlowInputIDParameter, keywordParameter, messageFlowIDParameter);
        }
    
        public virtual int ShortCodeKeywordsUpdate(Nullable<long> shortCodeKeywordID, string keyword, Nullable<decimal> price, Nullable<long> serviceID, Nullable<long> shortCodeInfoID)
        {
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShortCodeKeywordsUpdate", shortCodeKeywordIDParameter, keywordParameter, priceParameter, serviceIDParameter, shortCodeInfoIDParameter);
        }
    
        public virtual ObjectResult<ShortCodeKeywordsView_Result> ShortCodeKeywordsView(Nullable<long> shortCodeInfoID, string orderBy)
        {
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeKeywordsView_Result>("ShortCodeKeywordsView", shortCodeInfoIDParameter, orderByParameter);
        }
    
        public virtual ObjectResult<ShortCodeMOOptions_ViewInfo_Result> ShortCodeMOOptions_ViewInfo(string shortCodeMOOptions_Value, Nullable<long> shortCode, string callerID)
        {
            var shortCodeMOOptions_ValueParameter = shortCodeMOOptions_Value != null ?
                new ObjectParameter("ShortCodeMOOptions_Value", shortCodeMOOptions_Value) :
                new ObjectParameter("ShortCodeMOOptions_Value", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var callerIDParameter = callerID != null ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeMOOptions_ViewInfo_Result>("ShortCodeMOOptions_ViewInfo", shortCodeMOOptions_ValueParameter, shortCodeParameter, callerIDParameter);
        }
    
        public virtual ObjectResult<ShortCodeProviderView_Result> ShortCodeProviderView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShortCodeProviderView_Result>("ShortCodeProviderView");
        }
    
        public virtual int SmartSMSTemplateInsert(Nullable<long> companyID, Nullable<int> priority, string logoURL, string backgroundColor, Nullable<bool> isZone3On, string offerTextColor, string offerBackgroundColor, string zone3TextColor, string zone3BackgroundColor, string zone4TextColor, string buttonColor, string zone3Text, string offerImageURL, string redemptionImageURL)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var logoURLParameter = logoURL != null ?
                new ObjectParameter("LogoURL", logoURL) :
                new ObjectParameter("LogoURL", typeof(string));
    
            var backgroundColorParameter = backgroundColor != null ?
                new ObjectParameter("BackgroundColor", backgroundColor) :
                new ObjectParameter("BackgroundColor", typeof(string));
    
            var isZone3OnParameter = isZone3On.HasValue ?
                new ObjectParameter("IsZone3On", isZone3On) :
                new ObjectParameter("IsZone3On", typeof(bool));
    
            var offerTextColorParameter = offerTextColor != null ?
                new ObjectParameter("OfferTextColor", offerTextColor) :
                new ObjectParameter("OfferTextColor", typeof(string));
    
            var offerBackgroundColorParameter = offerBackgroundColor != null ?
                new ObjectParameter("OfferBackgroundColor", offerBackgroundColor) :
                new ObjectParameter("OfferBackgroundColor", typeof(string));
    
            var zone3TextColorParameter = zone3TextColor != null ?
                new ObjectParameter("Zone3TextColor", zone3TextColor) :
                new ObjectParameter("Zone3TextColor", typeof(string));
    
            var zone3BackgroundColorParameter = zone3BackgroundColor != null ?
                new ObjectParameter("Zone3BackgroundColor", zone3BackgroundColor) :
                new ObjectParameter("Zone3BackgroundColor", typeof(string));
    
            var zone4TextColorParameter = zone4TextColor != null ?
                new ObjectParameter("Zone4TextColor", zone4TextColor) :
                new ObjectParameter("Zone4TextColor", typeof(string));
    
            var buttonColorParameter = buttonColor != null ?
                new ObjectParameter("ButtonColor", buttonColor) :
                new ObjectParameter("ButtonColor", typeof(string));
    
            var zone3TextParameter = zone3Text != null ?
                new ObjectParameter("Zone3Text", zone3Text) :
                new ObjectParameter("Zone3Text", typeof(string));
    
            var offerImageURLParameter = offerImageURL != null ?
                new ObjectParameter("OfferImageURL", offerImageURL) :
                new ObjectParameter("OfferImageURL", typeof(string));
    
            var redemptionImageURLParameter = redemptionImageURL != null ?
                new ObjectParameter("RedemptionImageURL", redemptionImageURL) :
                new ObjectParameter("RedemptionImageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SmartSMSTemplateInsert", companyIDParameter, priorityParameter, logoURLParameter, backgroundColorParameter, isZone3OnParameter, offerTextColorParameter, offerBackgroundColorParameter, zone3TextColorParameter, zone3BackgroundColorParameter, zone4TextColorParameter, buttonColorParameter, zone3TextParameter, offerImageURLParameter, redemptionImageURLParameter);
        }
    
        public virtual int SMSBroadcastQueueInsert(Nullable<long> companyID, string campaignID, string messageFlowID, string shortCodeProvider, Nullable<int> timeZoneID, Nullable<long> totalRows, Nullable<bool> isNationalBroadcast, Nullable<long> shortCodeInfoID, string messageText, string broadcastSMSBatchID, Nullable<bool> broadcastSMSRecordsCreated, Nullable<bool> dblOptInBroadCastSent, Nullable<long> broadcastTypeID, string smartSMSCouponName, ObjectParameter broadcastQueueID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var totalRowsParameter = totalRows.HasValue ?
                new ObjectParameter("TotalRows", totalRows) :
                new ObjectParameter("TotalRows", typeof(long));
    
            var isNationalBroadcastParameter = isNationalBroadcast.HasValue ?
                new ObjectParameter("IsNationalBroadcast", isNationalBroadcast) :
                new ObjectParameter("IsNationalBroadcast", typeof(bool));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            var broadcastSMSRecordsCreatedParameter = broadcastSMSRecordsCreated.HasValue ?
                new ObjectParameter("BroadcastSMSRecordsCreated", broadcastSMSRecordsCreated) :
                new ObjectParameter("BroadcastSMSRecordsCreated", typeof(bool));
    
            var dblOptInBroadCastSentParameter = dblOptInBroadCastSent.HasValue ?
                new ObjectParameter("DblOptInBroadCastSent", dblOptInBroadCastSent) :
                new ObjectParameter("DblOptInBroadCastSent", typeof(bool));
    
            var broadcastTypeIDParameter = broadcastTypeID.HasValue ?
                new ObjectParameter("BroadcastTypeID", broadcastTypeID) :
                new ObjectParameter("BroadcastTypeID", typeof(long));
    
            var smartSMSCouponNameParameter = smartSMSCouponName != null ?
                new ObjectParameter("SmartSMSCouponName", smartSMSCouponName) :
                new ObjectParameter("SmartSMSCouponName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMSBroadcastQueueInsert", companyIDParameter, campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRowsParameter, isNationalBroadcastParameter, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter, broadcastSMSRecordsCreatedParameter, dblOptInBroadCastSentParameter, broadcastTypeIDParameter, smartSMSCouponNameParameter, broadcastQueueID);
        }
    
        public virtual int SMSBroadcastQueueInsertSendPage(Nullable<long> companyID, string campaignID, string messageFlowID, string shortCodeProvider, Nullable<int> timeZoneID, Nullable<long> totalRows, Nullable<long> shortCodeInfoID, string messageText, string broadcastSMSBatchID, Nullable<bool> broadcastSMSRecordsCreated, ObjectParameter broadcastQueueID, Nullable<bool> dblOptInBroadCastSent, string timeZoneFilterID, string areaCodeFilterID, string carrierFilterID, string loyaltyStatusFilterID, string loyaltyPoints, string loyaltyStartDate, string loyaltyEndDate, Nullable<long> broadcastTypeID, string smartSMSCouponName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var shortCodeProviderParameter = shortCodeProvider != null ?
                new ObjectParameter("ShortCodeProvider", shortCodeProvider) :
                new ObjectParameter("ShortCodeProvider", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var totalRowsParameter = totalRows.HasValue ?
                new ObjectParameter("TotalRows", totalRows) :
                new ObjectParameter("TotalRows", typeof(long));
    
            var shortCodeInfoIDParameter = shortCodeInfoID.HasValue ?
                new ObjectParameter("ShortCodeInfoID", shortCodeInfoID) :
                new ObjectParameter("ShortCodeInfoID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var broadcastSMSBatchIDParameter = broadcastSMSBatchID != null ?
                new ObjectParameter("BroadcastSMSBatchID", broadcastSMSBatchID) :
                new ObjectParameter("BroadcastSMSBatchID", typeof(string));
    
            var broadcastSMSRecordsCreatedParameter = broadcastSMSRecordsCreated.HasValue ?
                new ObjectParameter("BroadcastSMSRecordsCreated", broadcastSMSRecordsCreated) :
                new ObjectParameter("BroadcastSMSRecordsCreated", typeof(bool));
    
            var dblOptInBroadCastSentParameter = dblOptInBroadCastSent.HasValue ?
                new ObjectParameter("DblOptInBroadCastSent", dblOptInBroadCastSent) :
                new ObjectParameter("DblOptInBroadCastSent", typeof(bool));
    
            var timeZoneFilterIDParameter = timeZoneFilterID != null ?
                new ObjectParameter("TimeZoneFilterID", timeZoneFilterID) :
                new ObjectParameter("TimeZoneFilterID", typeof(string));
    
            var areaCodeFilterIDParameter = areaCodeFilterID != null ?
                new ObjectParameter("AreaCodeFilterID", areaCodeFilterID) :
                new ObjectParameter("AreaCodeFilterID", typeof(string));
    
            var carrierFilterIDParameter = carrierFilterID != null ?
                new ObjectParameter("CarrierFilterID", carrierFilterID) :
                new ObjectParameter("CarrierFilterID", typeof(string));
    
            var loyaltyStatusFilterIDParameter = loyaltyStatusFilterID != null ?
                new ObjectParameter("LoyaltyStatusFilterID", loyaltyStatusFilterID) :
                new ObjectParameter("LoyaltyStatusFilterID", typeof(string));
    
            var loyaltyPointsParameter = loyaltyPoints != null ?
                new ObjectParameter("LoyaltyPoints", loyaltyPoints) :
                new ObjectParameter("LoyaltyPoints", typeof(string));
    
            var loyaltyStartDateParameter = loyaltyStartDate != null ?
                new ObjectParameter("LoyaltyStartDate", loyaltyStartDate) :
                new ObjectParameter("LoyaltyStartDate", typeof(string));
    
            var loyaltyEndDateParameter = loyaltyEndDate != null ?
                new ObjectParameter("LoyaltyEndDate", loyaltyEndDate) :
                new ObjectParameter("LoyaltyEndDate", typeof(string));
    
            var broadcastTypeIDParameter = broadcastTypeID.HasValue ?
                new ObjectParameter("BroadcastTypeID", broadcastTypeID) :
                new ObjectParameter("BroadcastTypeID", typeof(long));
    
            var smartSMSCouponNameParameter = smartSMSCouponName != null ?
                new ObjectParameter("SmartSMSCouponName", smartSMSCouponName) :
                new ObjectParameter("SmartSMSCouponName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMSBroadcastQueueInsertSendPage", companyIDParameter, campaignIDParameter, messageFlowIDParameter, shortCodeProviderParameter, timeZoneIDParameter, totalRowsParameter, shortCodeInfoIDParameter, messageTextParameter, broadcastSMSBatchIDParameter, broadcastSMSRecordsCreatedParameter, broadcastQueueID, dblOptInBroadCastSentParameter, timeZoneFilterIDParameter, areaCodeFilterIDParameter, carrierFilterIDParameter, loyaltyStatusFilterIDParameter, loyaltyPointsParameter, loyaltyStartDateParameter, loyaltyEndDateParameter, broadcastTypeIDParameter, smartSMSCouponNameParameter);
        }
    
        public virtual int SocialBroadcastQueueCancel(Nullable<long> socialBroadcastQueueID)
        {
            var socialBroadcastQueueIDParameter = socialBroadcastQueueID.HasValue ?
                new ObjectParameter("SocialBroadcastQueueID", socialBroadcastQueueID) :
                new ObjectParameter("SocialBroadcastQueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SocialBroadcastQueueCancel", socialBroadcastQueueIDParameter);
        }
    
        public virtual int SocialBroadcastQueueInsert(Nullable<long> companyID, string campaignID, string messageFlowID, Nullable<int> timeZoneID, string messageText, Nullable<System.DateTime> datecreated, Nullable<System.DateTime> nextScheduledTime, string twitterUsername, string twitterToken, string twitterTokenSecret, Nullable<long> fBFanPageID, string fBAuthCode, string fBUserName, string description, Nullable<long> userid, Nullable<long> reach, ObjectParameter socialBroadcastQueueID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var nextScheduledTimeParameter = nextScheduledTime.HasValue ?
                new ObjectParameter("NextScheduledTime", nextScheduledTime) :
                new ObjectParameter("NextScheduledTime", typeof(System.DateTime));
    
            var twitterUsernameParameter = twitterUsername != null ?
                new ObjectParameter("TwitterUsername", twitterUsername) :
                new ObjectParameter("TwitterUsername", typeof(string));
    
            var twitterTokenParameter = twitterToken != null ?
                new ObjectParameter("TwitterToken", twitterToken) :
                new ObjectParameter("TwitterToken", typeof(string));
    
            var twitterTokenSecretParameter = twitterTokenSecret != null ?
                new ObjectParameter("TwitterTokenSecret", twitterTokenSecret) :
                new ObjectParameter("TwitterTokenSecret", typeof(string));
    
            var fBFanPageIDParameter = fBFanPageID.HasValue ?
                new ObjectParameter("FBFanPageID", fBFanPageID) :
                new ObjectParameter("FBFanPageID", typeof(long));
    
            var fBAuthCodeParameter = fBAuthCode != null ?
                new ObjectParameter("FBAuthCode", fBAuthCode) :
                new ObjectParameter("FBAuthCode", typeof(string));
    
            var fBUserNameParameter = fBUserName != null ?
                new ObjectParameter("FBUserName", fBUserName) :
                new ObjectParameter("FBUserName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var reachParameter = reach.HasValue ?
                new ObjectParameter("Reach", reach) :
                new ObjectParameter("Reach", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SocialBroadcastQueueInsert", companyIDParameter, campaignIDParameter, messageFlowIDParameter, timeZoneIDParameter, messageTextParameter, datecreatedParameter, nextScheduledTimeParameter, twitterUsernameParameter, twitterTokenParameter, twitterTokenSecretParameter, fBFanPageIDParameter, fBAuthCodeParameter, fBUserNameParameter, descriptionParameter, useridParameter, reachParameter, socialBroadcastQueueID);
        }
    
        public virtual int SocialBroadcastQueueUpdate(Nullable<long> socialBroadcastQueueID, Nullable<long> reach, string status, string error)
        {
            var socialBroadcastQueueIDParameter = socialBroadcastQueueID.HasValue ?
                new ObjectParameter("SocialBroadcastQueueID", socialBroadcastQueueID) :
                new ObjectParameter("SocialBroadcastQueueID", typeof(long));
    
            var reachParameter = reach.HasValue ?
                new ObjectParameter("reach", reach) :
                new ObjectParameter("reach", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var errorParameter = error != null ?
                new ObjectParameter("error", error) :
                new ObjectParameter("error", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SocialBroadcastQueueUpdate", socialBroadcastQueueIDParameter, reachParameter, statusParameter, errorParameter);
        }
    
        public virtual int SocialBroadcastQueueUpdateReach(Nullable<long> socialBroadcastQueueID, Nullable<long> reach)
        {
            var socialBroadcastQueueIDParameter = socialBroadcastQueueID.HasValue ?
                new ObjectParameter("SocialBroadcastQueueID", socialBroadcastQueueID) :
                new ObjectParameter("SocialBroadcastQueueID", typeof(long));
    
            var reachParameter = reach.HasValue ?
                new ObjectParameter("reach", reach) :
                new ObjectParameter("reach", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SocialBroadcastQueueUpdateReach", socialBroadcastQueueIDParameter, reachParameter);
        }
    
        public virtual ObjectResult<SoftwareLicenseTypeView_Result> SoftwareLicenseTypeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SoftwareLicenseTypeView_Result>("SoftwareLicenseTypeView");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SubwayUserSubscribe_Result> SubwayUserSubscribe(Nullable<long> phone, Nullable<long> companyID, string keyword, Nullable<long> shortCode)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubwayUserSubscribe_Result>("SubwayUserSubscribe", phoneParameter, companyIDParameter, keywordParameter, shortCodeParameter);
        }
    
        public virtual int SupportedCarrierDelete(Nullable<long> supportedCarrierID)
        {
            var supportedCarrierIDParameter = supportedCarrierID.HasValue ?
                new ObjectParameter("SupportedCarrierID", supportedCarrierID) :
                new ObjectParameter("SupportedCarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupportedCarrierDelete", supportedCarrierIDParameter);
        }
    
        public virtual int SupportedCarrierDelete_CampaignID(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupportedCarrierDelete_CampaignID", campaignIDParameter);
        }
    
        public virtual int SupportedCarrierInsert(ObjectParameter supportedCarrierID, Nullable<long> mobileCarrierID, Nullable<long> campaignID)
        {
            var mobileCarrierIDParameter = mobileCarrierID.HasValue ?
                new ObjectParameter("MobileCarrierID", mobileCarrierID) :
                new ObjectParameter("MobileCarrierID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupportedCarrierInsert", supportedCarrierID, mobileCarrierIDParameter, campaignIDParameter);
        }
    
        public virtual int SupportedCarrierInsertAll(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupportedCarrierInsertAll", campaignIDParameter);
        }
    
        public virtual int SupportedCarriersInsert_CampaignID(Nullable<long> campaignID, Nullable<bool> selectedAll)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var selectedAllParameter = selectedAll.HasValue ?
                new ObjectParameter("SelectedAll", selectedAll) :
                new ObjectParameter("SelectedAll", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupportedCarriersInsert_CampaignID", campaignIDParameter, selectedAllParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> SupportedCarriersView_CampaignID(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("SupportedCarriersView_CampaignID", campaignIDParameter);
        }
    
        public virtual int SupportedCarrierUpdate(Nullable<long> supportedCarrierID, Nullable<long> mobileCarrierID, Nullable<long> campaignID)
        {
            var supportedCarrierIDParameter = supportedCarrierID.HasValue ?
                new ObjectParameter("SupportedCarrierID", supportedCarrierID) :
                new ObjectParameter("SupportedCarrierID", typeof(long));
    
            var mobileCarrierIDParameter = mobileCarrierID.HasValue ?
                new ObjectParameter("MobileCarrierID", mobileCarrierID) :
                new ObjectParameter("MobileCarrierID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupportedCarrierUpdate", supportedCarrierIDParameter, mobileCarrierIDParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<SybaseDeactivationCount_Result> SybaseDeactivationCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SybaseDeactivationCount_Result>("SybaseDeactivationCount");
        }
    
        public virtual ObjectResult<TargetDelete_Result> TargetDelete(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetDelete_Result>("TargetDelete", targetIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TargetHitsGetRank(string targetID, Nullable<long> userID, Nullable<System.DateTime> date)
        {
            var targetIDParameter = targetID != null ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TargetHitsGetRank", targetIDParameter, userIDParameter, dateParameter);
        }
    
        public virtual int TargetInsert(ObjectParameter targetID, Nullable<int> contentTypeID, string contentURL, string messageText, Nullable<long> shortCodeKeywordID, Nullable<long> paymentGatewayID, Nullable<long> campaignID, string description, Nullable<long> postTargetIVRTreeDestinationID, Nullable<long> postTargetTargetID, Nullable<long> postTargetFailureIVRTreeDestinationID, Nullable<long> postTargetFailureTargetID, Nullable<int> pollAnswerID)
        {
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(int));
    
            var contentURLParameter = contentURL != null ?
                new ObjectParameter("ContentURL", contentURL) :
                new ObjectParameter("ContentURL", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var paymentGatewayIDParameter = paymentGatewayID.HasValue ?
                new ObjectParameter("PaymentGatewayID", paymentGatewayID) :
                new ObjectParameter("PaymentGatewayID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var postTargetIVRTreeDestinationIDParameter = postTargetIVRTreeDestinationID.HasValue ?
                new ObjectParameter("PostTargetIVRTreeDestinationID", postTargetIVRTreeDestinationID) :
                new ObjectParameter("PostTargetIVRTreeDestinationID", typeof(long));
    
            var postTargetTargetIDParameter = postTargetTargetID.HasValue ?
                new ObjectParameter("PostTargetTargetID", postTargetTargetID) :
                new ObjectParameter("PostTargetTargetID", typeof(long));
    
            var postTargetFailureIVRTreeDestinationIDParameter = postTargetFailureIVRTreeDestinationID.HasValue ?
                new ObjectParameter("PostTargetFailureIVRTreeDestinationID", postTargetFailureIVRTreeDestinationID) :
                new ObjectParameter("PostTargetFailureIVRTreeDestinationID", typeof(long));
    
            var postTargetFailureTargetIDParameter = postTargetFailureTargetID.HasValue ?
                new ObjectParameter("PostTargetFailureTargetID", postTargetFailureTargetID) :
                new ObjectParameter("PostTargetFailureTargetID", typeof(long));
    
            var pollAnswerIDParameter = pollAnswerID.HasValue ?
                new ObjectParameter("PollAnswerID", pollAnswerID) :
                new ObjectParameter("PollAnswerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TargetInsert", targetID, contentTypeIDParameter, contentURLParameter, messageTextParameter, shortCodeKeywordIDParameter, paymentGatewayIDParameter, campaignIDParameter, descriptionParameter, postTargetIVRTreeDestinationIDParameter, postTargetTargetIDParameter, postTargetFailureIVRTreeDestinationIDParameter, postTargetFailureTargetIDParameter, pollAnswerIDParameter);
        }
    
        public virtual ObjectResult<TargetInteractionRatio_Result> TargetInteractionRatio(string campaignID, string startDate, string endDate, string targetID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var targetIDParameter = targetID != null ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetInteractionRatio_Result>("TargetInteractionRatio", campaignIDParameter, startDateParameter, endDateParameter, targetIDParameter);
        }
    
        public virtual ObjectResult<TargetInteractionView_Result> TargetInteractionView(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> contentTypeID, string targetID, Nullable<byte> targetSourceID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(int));
    
            var targetIDParameter = targetID != null ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(string));
    
            var targetSourceIDParameter = targetSourceID.HasValue ?
                new ObjectParameter("TargetSourceID", targetSourceID) :
                new ObjectParameter("TargetSourceID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetInteractionView_Result>("TargetInteractionView", campaignIDParameter, startDateParameter, endDateParameter, contentTypeIDParameter, targetIDParameter, targetSourceIDParameter);
        }
    
        public virtual ObjectResult<TargetInteractionViewByCarrier_Result> TargetInteractionViewByCarrier(string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetInteractionViewByCarrier_Result>("TargetInteractionViewByCarrier", campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<TargetLoopDetection_Result> TargetLoopDetection(Nullable<long> campaignId)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetLoopDetection_Result>("TargetLoopDetection", campaignIdParameter);
        }
    
        public virtual ObjectResult<TargetMessageFlowView_Result> TargetMessageFlowView(Nullable<long> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetMessageFlowView_Result>("TargetMessageFlowView", campaignIDParameter);
        }
    
        public virtual int TargetPaymentDelete(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TargetPaymentDelete", targetIDParameter);
        }
    
        public virtual int TargetPaymentInsert(ObjectParameter targetPaymentID, Nullable<long> targetID, Nullable<long> paymentMethodID, Nullable<decimal> amount)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TargetPaymentInsert", targetPaymentID, targetIDParameter, paymentMethodIDParameter, amountParameter);
        }
    
        public virtual int TargetPaymentUpdate(Nullable<long> targetPaymentID, Nullable<long> targetID, Nullable<long> paymentMethodID, Nullable<decimal> amount)
        {
            var targetPaymentIDParameter = targetPaymentID.HasValue ?
                new ObjectParameter("TargetPaymentID", targetPaymentID) :
                new ObjectParameter("TargetPaymentID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TargetPaymentUpdate", targetPaymentIDParameter, targetIDParameter, paymentMethodIDParameter, amountParameter);
        }
    
        public virtual ObjectResult<TargetPaymentView_Result> TargetPaymentView(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetPaymentView_Result>("TargetPaymentView", targetIDParameter);
        }
    
        public virtual int TargetUpdate(Nullable<long> targetID, Nullable<int> contentTypeID, string contentURL, string messageText, Nullable<long> shortCodeKeywordID, Nullable<long> paymentGatewayID, Nullable<long> campaignID, string description, Nullable<long> postTargetIVRTreeDestinationID, Nullable<long> postTargetTargetID, Nullable<long> postTargetFailureIVRTreeDestinationID, Nullable<long> postTargetFailureTargetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(int));
    
            var contentURLParameter = contentURL != null ?
                new ObjectParameter("ContentURL", contentURL) :
                new ObjectParameter("ContentURL", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var paymentGatewayIDParameter = paymentGatewayID.HasValue ?
                new ObjectParameter("PaymentGatewayID", paymentGatewayID) :
                new ObjectParameter("PaymentGatewayID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var postTargetIVRTreeDestinationIDParameter = postTargetIVRTreeDestinationID.HasValue ?
                new ObjectParameter("PostTargetIVRTreeDestinationID", postTargetIVRTreeDestinationID) :
                new ObjectParameter("PostTargetIVRTreeDestinationID", typeof(long));
    
            var postTargetTargetIDParameter = postTargetTargetID.HasValue ?
                new ObjectParameter("PostTargetTargetID", postTargetTargetID) :
                new ObjectParameter("PostTargetTargetID", typeof(long));
    
            var postTargetFailureIVRTreeDestinationIDParameter = postTargetFailureIVRTreeDestinationID.HasValue ?
                new ObjectParameter("PostTargetFailureIVRTreeDestinationID", postTargetFailureIVRTreeDestinationID) :
                new ObjectParameter("PostTargetFailureIVRTreeDestinationID", typeof(long));
    
            var postTargetFailureTargetIDParameter = postTargetFailureTargetID.HasValue ?
                new ObjectParameter("PostTargetFailureTargetID", postTargetFailureTargetID) :
                new ObjectParameter("PostTargetFailureTargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TargetUpdate", targetIDParameter, contentTypeIDParameter, contentURLParameter, messageTextParameter, shortCodeKeywordIDParameter, paymentGatewayIDParameter, campaignIDParameter, descriptionParameter, postTargetIVRTreeDestinationIDParameter, postTargetTargetIDParameter, postTargetFailureIVRTreeDestinationIDParameter, postTargetFailureTargetIDParameter);
        }
    
        public virtual int TargetUpdate_PostTargets(Nullable<long> targetID, Nullable<long> postTargetIVRTreeDestinationID, Nullable<long> postTargetTargetID, Nullable<long> postTargetFailureIVRTreeDestinationID, Nullable<long> postTargetFailureTargetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var postTargetIVRTreeDestinationIDParameter = postTargetIVRTreeDestinationID.HasValue ?
                new ObjectParameter("PostTargetIVRTreeDestinationID", postTargetIVRTreeDestinationID) :
                new ObjectParameter("PostTargetIVRTreeDestinationID", typeof(long));
    
            var postTargetTargetIDParameter = postTargetTargetID.HasValue ?
                new ObjectParameter("PostTargetTargetID", postTargetTargetID) :
                new ObjectParameter("PostTargetTargetID", typeof(long));
    
            var postTargetFailureIVRTreeDestinationIDParameter = postTargetFailureIVRTreeDestinationID.HasValue ?
                new ObjectParameter("PostTargetFailureIVRTreeDestinationID", postTargetFailureIVRTreeDestinationID) :
                new ObjectParameter("PostTargetFailureIVRTreeDestinationID", typeof(long));
    
            var postTargetFailureTargetIDParameter = postTargetFailureTargetID.HasValue ?
                new ObjectParameter("PostTargetFailureTargetID", postTargetFailureTargetID) :
                new ObjectParameter("PostTargetFailureTargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TargetUpdate_PostTargets", targetIDParameter, postTargetIVRTreeDestinationIDParameter, postTargetTargetIDParameter, postTargetFailureIVRTreeDestinationIDParameter, postTargetFailureTargetIDParameter);
        }
    
        public virtual int TargetUpdateForMessagingCampaign(Nullable<long> targetID, string messageText, string description)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TargetUpdateForMessagingCampaign", targetIDParameter, messageTextParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<TargetView_Result> TargetView(string campaignID, Nullable<long> companyID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetView_Result>("TargetView", campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<TargetView_TargetID_Result> TargetView_TargetID(Nullable<long> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetView_TargetID_Result>("TargetView_TargetID", targetIDParameter);
        }
    
        public virtual ObjectResult<TargetViewIVR_Result> TargetViewIVR(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetViewIVR_Result>("TargetViewIVR", companyIDParameter);
        }
    
        public virtual ObjectResult<TargetViewIVRSorted_Result> TargetViewIVRSorted(string campaignID, Nullable<long> companyID)
        {
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetViewIVRSorted_Result>("TargetViewIVRSorted", campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<TargetViewSorted_Result> TargetViewSorted(Nullable<long> campaignID, string sortBy, string sortType)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TargetViewSorted_Result>("TargetViewSorted", campaignIDParameter, sortByParameter, sortTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TEMP_AdidasValidateFilterNumber(Nullable<int> storeNumber, Nullable<int> regionNumber, Nullable<int> districtNumber)
        {
            var storeNumberParameter = storeNumber.HasValue ?
                new ObjectParameter("StoreNumber", storeNumber) :
                new ObjectParameter("StoreNumber", typeof(int));
    
            var regionNumberParameter = regionNumber.HasValue ?
                new ObjectParameter("RegionNumber", regionNumber) :
                new ObjectParameter("RegionNumber", typeof(int));
    
            var districtNumberParameter = districtNumber.HasValue ?
                new ObjectParameter("DistrictNumber", districtNumber) :
                new ObjectParameter("DistrictNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TEMP_AdidasValidateFilterNumber", storeNumberParameter, regionNumberParameter, districtNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> TEMP_AdidasView(Nullable<int> returnType, Nullable<int> storeNumber, Nullable<int> regionNumber, Nullable<int> districtNumber, Nullable<int> duration, Nullable<int> topCount)
        {
            var returnTypeParameter = returnType.HasValue ?
                new ObjectParameter("ReturnType", returnType) :
                new ObjectParameter("ReturnType", typeof(int));
    
            var storeNumberParameter = storeNumber.HasValue ?
                new ObjectParameter("StoreNumber", storeNumber) :
                new ObjectParameter("StoreNumber", typeof(int));
    
            var regionNumberParameter = regionNumber.HasValue ?
                new ObjectParameter("RegionNumber", regionNumber) :
                new ObjectParameter("RegionNumber", typeof(int));
    
            var districtNumberParameter = districtNumber.HasValue ?
                new ObjectParameter("DistrictNumber", districtNumber) :
                new ObjectParameter("DistrictNumber", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var topCountParameter = topCount.HasValue ?
                new ObjectParameter("TopCount", topCount) :
                new ObjectParameter("TopCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("TEMP_AdidasView", returnTypeParameter, storeNumberParameter, regionNumberParameter, districtNumberParameter, durationParameter, topCountParameter);
        }
    
        public virtual ObjectResult<TEMP_GetObamaResults_Result> TEMP_GetObamaResults(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> calledID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var calledIDParameter = calledID.HasValue ?
                new ObjectParameter("CalledID", calledID) :
                new ObjectParameter("CalledID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TEMP_GetObamaResults_Result>("TEMP_GetObamaResults", startDateParameter, endDateParameter, calledIDParameter);
        }
    
        public virtual int TEMP_ObamaInsert(Nullable<long> cDRID, Nullable<long> precinct, Nullable<long> totalvotes, Nullable<long> barackvotes, Nullable<long> votessurvey, Nullable<long> electionbarack, Nullable<long> hillary, Nullable<long> edwards, Nullable<long> kucinich, Nullable<long> gravel, Nullable<long> other, Nullable<long> callerID, Nullable<long> calledID, Nullable<long> turnout, Nullable<long> uncommitted, Nullable<long> delegates, Nullable<long> barackDelegates, Nullable<long> hillaryDelegates, Nullable<long> edwardsDelegates, string state)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var precinctParameter = precinct.HasValue ?
                new ObjectParameter("Precinct", precinct) :
                new ObjectParameter("Precinct", typeof(long));
    
            var totalvotesParameter = totalvotes.HasValue ?
                new ObjectParameter("totalvotes", totalvotes) :
                new ObjectParameter("totalvotes", typeof(long));
    
            var barackvotesParameter = barackvotes.HasValue ?
                new ObjectParameter("barackvotes", barackvotes) :
                new ObjectParameter("barackvotes", typeof(long));
    
            var votessurveyParameter = votessurvey.HasValue ?
                new ObjectParameter("votessurvey", votessurvey) :
                new ObjectParameter("votessurvey", typeof(long));
    
            var electionbarackParameter = electionbarack.HasValue ?
                new ObjectParameter("electionbarack", electionbarack) :
                new ObjectParameter("electionbarack", typeof(long));
    
            var hillaryParameter = hillary.HasValue ?
                new ObjectParameter("hillary", hillary) :
                new ObjectParameter("hillary", typeof(long));
    
            var edwardsParameter = edwards.HasValue ?
                new ObjectParameter("edwards", edwards) :
                new ObjectParameter("edwards", typeof(long));
    
            var kucinichParameter = kucinich.HasValue ?
                new ObjectParameter("kucinich", kucinich) :
                new ObjectParameter("kucinich", typeof(long));
    
            var gravelParameter = gravel.HasValue ?
                new ObjectParameter("gravel", gravel) :
                new ObjectParameter("gravel", typeof(long));
    
            var otherParameter = other.HasValue ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var calledIDParameter = calledID.HasValue ?
                new ObjectParameter("CalledID", calledID) :
                new ObjectParameter("CalledID", typeof(long));
    
            var turnoutParameter = turnout.HasValue ?
                new ObjectParameter("Turnout", turnout) :
                new ObjectParameter("Turnout", typeof(long));
    
            var uncommittedParameter = uncommitted.HasValue ?
                new ObjectParameter("Uncommitted", uncommitted) :
                new ObjectParameter("Uncommitted", typeof(long));
    
            var delegatesParameter = delegates.HasValue ?
                new ObjectParameter("Delegates", delegates) :
                new ObjectParameter("Delegates", typeof(long));
    
            var barackDelegatesParameter = barackDelegates.HasValue ?
                new ObjectParameter("BarackDelegates", barackDelegates) :
                new ObjectParameter("BarackDelegates", typeof(long));
    
            var hillaryDelegatesParameter = hillaryDelegates.HasValue ?
                new ObjectParameter("HillaryDelegates", hillaryDelegates) :
                new ObjectParameter("HillaryDelegates", typeof(long));
    
            var edwardsDelegatesParameter = edwardsDelegates.HasValue ?
                new ObjectParameter("EdwardsDelegates", edwardsDelegates) :
                new ObjectParameter("EdwardsDelegates", typeof(long));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TEMP_ObamaInsert", cDRIDParameter, precinctParameter, totalvotesParameter, barackvotesParameter, votessurveyParameter, electionbarackParameter, hillaryParameter, edwardsParameter, kucinichParameter, gravelParameter, otherParameter, callerIDParameter, calledIDParameter, turnoutParameter, uncommittedParameter, delegatesParameter, barackDelegatesParameter, hillaryDelegatesParameter, edwardsDelegatesParameter, stateParameter);
        }
    
        public virtual int TEMP_ObamaVoterLine(Nullable<long> cDRID, Nullable<long> callerID, Nullable<long> calledID, Nullable<int> zip, Nullable<int> pollingOpen, Nullable<int> turnout, Nullable<int> totalVotes, Nullable<int> barackVotes, Nullable<int> mcCainVotes, Nullable<int> precinct, Nullable<int> legal, Nullable<int> early, Nullable<int> var1, Nullable<int> var2, Nullable<int> var3, Nullable<int> var4, Nullable<int> var5)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var calledIDParameter = calledID.HasValue ?
                new ObjectParameter("CalledID", calledID) :
                new ObjectParameter("CalledID", typeof(long));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var pollingOpenParameter = pollingOpen.HasValue ?
                new ObjectParameter("PollingOpen", pollingOpen) :
                new ObjectParameter("PollingOpen", typeof(int));
    
            var turnoutParameter = turnout.HasValue ?
                new ObjectParameter("Turnout", turnout) :
                new ObjectParameter("Turnout", typeof(int));
    
            var totalVotesParameter = totalVotes.HasValue ?
                new ObjectParameter("TotalVotes", totalVotes) :
                new ObjectParameter("TotalVotes", typeof(int));
    
            var barackVotesParameter = barackVotes.HasValue ?
                new ObjectParameter("BarackVotes", barackVotes) :
                new ObjectParameter("BarackVotes", typeof(int));
    
            var mcCainVotesParameter = mcCainVotes.HasValue ?
                new ObjectParameter("McCainVotes", mcCainVotes) :
                new ObjectParameter("McCainVotes", typeof(int));
    
            var precinctParameter = precinct.HasValue ?
                new ObjectParameter("Precinct", precinct) :
                new ObjectParameter("Precinct", typeof(int));
    
            var legalParameter = legal.HasValue ?
                new ObjectParameter("Legal", legal) :
                new ObjectParameter("Legal", typeof(int));
    
            var earlyParameter = early.HasValue ?
                new ObjectParameter("Early", early) :
                new ObjectParameter("Early", typeof(int));
    
            var var1Parameter = var1.HasValue ?
                new ObjectParameter("Var1", var1) :
                new ObjectParameter("Var1", typeof(int));
    
            var var2Parameter = var2.HasValue ?
                new ObjectParameter("Var2", var2) :
                new ObjectParameter("Var2", typeof(int));
    
            var var3Parameter = var3.HasValue ?
                new ObjectParameter("Var3", var3) :
                new ObjectParameter("Var3", typeof(int));
    
            var var4Parameter = var4.HasValue ?
                new ObjectParameter("Var4", var4) :
                new ObjectParameter("Var4", typeof(int));
    
            var var5Parameter = var5.HasValue ?
                new ObjectParameter("Var5", var5) :
                new ObjectParameter("Var5", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TEMP_ObamaVoterLine", cDRIDParameter, callerIDParameter, calledIDParameter, zipParameter, pollingOpenParameter, turnoutParameter, totalVotesParameter, barackVotesParameter, mcCainVotesParameter, precinctParameter, legalParameter, earlyParameter, var1Parameter, var2Parameter, var3Parameter, var4Parameter, var5Parameter);
        }
    
        public virtual ObjectResult<testSP_Result> testSP(Nullable<long> companyID, Nullable<long> campaignID, string startDate, string endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<testSP_Result>("testSP", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int TickerGraphicUpdateStartFromMessageID(Nullable<int> graphicID, Nullable<int> startFromMessageID, Nullable<System.DateTime> startFromMessageDate)
        {
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("graphicID", graphicID) :
                new ObjectParameter("graphicID", typeof(int));
    
            var startFromMessageIDParameter = startFromMessageID.HasValue ?
                new ObjectParameter("StartFromMessageID", startFromMessageID) :
                new ObjectParameter("StartFromMessageID", typeof(int));
    
            var startFromMessageDateParameter = startFromMessageDate.HasValue ?
                new ObjectParameter("StartFromMessageDate", startFromMessageDate) :
                new ObjectParameter("StartFromMessageDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TickerGraphicUpdateStartFromMessageID", graphicIDParameter, startFromMessageIDParameter, startFromMessageDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> TickerMessageInsert(string bucketName, Nullable<long> campaignID, string channel, string id, string messageText, string email)
        {
            var bucketNameParameter = bucketName != null ?
                new ObjectParameter("bucketName", bucketName) :
                new ObjectParameter("bucketName", typeof(string));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var channelParameter = channel != null ?
                new ObjectParameter("Channel", channel) :
                new ObjectParameter("Channel", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("TickerMessageInsert", bucketNameParameter, campaignIDParameter, channelParameter, idParameter, messageTextParameter, emailParameter);
        }
    
        public virtual int TickerMessageUpdate(string tickerMessageIDList, Nullable<int> status)
        {
            var tickerMessageIDListParameter = tickerMessageIDList != null ?
                new ObjectParameter("TickerMessageIDList", tickerMessageIDList) :
                new ObjectParameter("TickerMessageIDList", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TickerMessageUpdate", tickerMessageIDListParameter, statusParameter);
        }
    
        public virtual int TickerMessageUpdateMessage(string messageText, Nullable<long> tickerID)
        {
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var tickerIDParameter = tickerID.HasValue ?
                new ObjectParameter("TickerID", tickerID) :
                new ObjectParameter("TickerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TickerMessageUpdateMessage", messageTextParameter, tickerIDParameter);
        }
    
        public virtual ObjectResult<TimePeriodView_Result> TimePeriodView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimePeriodView_Result>("TimePeriodView");
        }
    
        public virtual ObjectResult<TimeZoneView_Result> TimeZoneView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimeZoneView_Result>("TimeZoneView");
        }
    
        public virtual int tools_CS_SPROC_Builder(string objName)
        {
            var objNameParameter = objName != null ?
                new ObjectParameter("objName", objName) :
                new ObjectParameter("objName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tools_CS_SPROC_Builder", objNameParameter);
        }
    
        public virtual int TrainingGuideDelete(Nullable<long> trainingGuideID)
        {
            var trainingGuideIDParameter = trainingGuideID.HasValue ?
                new ObjectParameter("TrainingGuideID", trainingGuideID) :
                new ObjectParameter("TrainingGuideID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrainingGuideDelete", trainingGuideIDParameter);
        }
    
        public virtual int TrainingGuideInsert(ObjectParameter trainingGuideID, string trianingGuideFileName, string trainingGuideFilePath, string trainingGuideFileCaption, Nullable<decimal> trainingGuideFileSize)
        {
            var trianingGuideFileNameParameter = trianingGuideFileName != null ?
                new ObjectParameter("TrianingGuideFileName", trianingGuideFileName) :
                new ObjectParameter("TrianingGuideFileName", typeof(string));
    
            var trainingGuideFilePathParameter = trainingGuideFilePath != null ?
                new ObjectParameter("TrainingGuideFilePath", trainingGuideFilePath) :
                new ObjectParameter("TrainingGuideFilePath", typeof(string));
    
            var trainingGuideFileCaptionParameter = trainingGuideFileCaption != null ?
                new ObjectParameter("TrainingGuideFileCaption", trainingGuideFileCaption) :
                new ObjectParameter("TrainingGuideFileCaption", typeof(string));
    
            var trainingGuideFileSizeParameter = trainingGuideFileSize.HasValue ?
                new ObjectParameter("TrainingGuideFileSize", trainingGuideFileSize) :
                new ObjectParameter("TrainingGuideFileSize", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrainingGuideInsert", trainingGuideID, trianingGuideFileNameParameter, trainingGuideFilePathParameter, trainingGuideFileCaptionParameter, trainingGuideFileSizeParameter);
        }
    
        public virtual int TransactionDelete(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionDelete", transactionIDParameter);
        }
    
        public virtual int TransactionInsert(ObjectParameter transactionID, Nullable<long> targetID, Nullable<System.DateTime> dateCreated, Nullable<double> amount, Nullable<bool> approved, Nullable<bool> refunded, Nullable<bool> voided, Nullable<bool> delivered, Nullable<long> cDRID, string gUID, Nullable<long> userID, Nullable<long> nextMessageFlowTreeID, Nullable<long> shortCodeKeywordID, Nullable<long> messageFlowID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var refundedParameter = refunded.HasValue ?
                new ObjectParameter("Refunded", refunded) :
                new ObjectParameter("Refunded", typeof(bool));
    
            var voidedParameter = voided.HasValue ?
                new ObjectParameter("Voided", voided) :
                new ObjectParameter("Voided", typeof(bool));
    
            var deliveredParameter = delivered.HasValue ?
                new ObjectParameter("Delivered", delivered) :
                new ObjectParameter("Delivered", typeof(bool));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var nextMessageFlowTreeIDParameter = nextMessageFlowTreeID.HasValue ?
                new ObjectParameter("NextMessageFlowTreeID", nextMessageFlowTreeID) :
                new ObjectParameter("NextMessageFlowTreeID", typeof(long));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionInsert", transactionID, targetIDParameter, dateCreatedParameter, amountParameter, approvedParameter, refundedParameter, voidedParameter, deliveredParameter, cDRIDParameter, gUIDParameter, userIDParameter, nextMessageFlowTreeIDParameter, shortCodeKeywordIDParameter, messageFlowIDParameter);
        }
    
        public virtual int TransactionInsertTest(ObjectParameter transactionID, Nullable<long> targetID, Nullable<System.DateTime> dateCreated, Nullable<double> amount, Nullable<bool> approved, Nullable<bool> refunded, Nullable<bool> voided, Nullable<bool> delivered, Nullable<long> cDRID, string gUID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var refundedParameter = refunded.HasValue ?
                new ObjectParameter("Refunded", refunded) :
                new ObjectParameter("Refunded", typeof(bool));
    
            var voidedParameter = voided.HasValue ?
                new ObjectParameter("Voided", voided) :
                new ObjectParameter("Voided", typeof(bool));
    
            var deliveredParameter = delivered.HasValue ?
                new ObjectParameter("Delivered", delivered) :
                new ObjectParameter("Delivered", typeof(bool));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionInsertTest", transactionID, targetIDParameter, dateCreatedParameter, amountParameter, approvedParameter, refundedParameter, voidedParameter, deliveredParameter, cDRIDParameter, gUIDParameter);
        }
    
        public virtual int TransactionLogInsert(ObjectParameter transactionLogID, Nullable<long> transactionID, string description)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionLogInsert", transactionLogID, transactionIDParameter, descriptionParameter);
        }
    
        public virtual int TransactionMessageFlowView_ShortCode_UserID_Param(Nullable<long> userID, Nullable<long> shortCode, string phone, string inputText, string messageFlowInputTypeID, string carrierID, string messageFlowTreeID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionMessageFlowView_ShortCode_UserID_Param", userIDParameter, shortCodeParameter, phoneParameter, inputTextParameter, messageFlowInputTypeIDParameter, carrierIDParameter, messageFlowTreeIDParameter);
        }
    
        public virtual int TransactionMessageFlowView_ShortCode_UserID_Param_old(Nullable<long> userID, Nullable<long> shortCode, string phone, string inputText, string messageFlowInputTypeID, string carrierID, string messageFlowTreeID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var messageFlowInputTypeIDParameter = messageFlowInputTypeID != null ?
                new ObjectParameter("MessageFlowInputTypeID", messageFlowInputTypeID) :
                new ObjectParameter("MessageFlowInputTypeID", typeof(string));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var messageFlowTreeIDParameter = messageFlowTreeID != null ?
                new ObjectParameter("MessageFlowTreeID", messageFlowTreeID) :
                new ObjectParameter("MessageFlowTreeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionMessageFlowView_ShortCode_UserID_Param_old", userIDParameter, shortCodeParameter, phoneParameter, inputTextParameter, messageFlowInputTypeIDParameter, carrierIDParameter, messageFlowTreeIDParameter);
        }
    
        public virtual int TransactionMessageTransactionInsert(Nullable<long> userID, Nullable<System.DateTime> dateCreated, ObjectParameter transactionID, Nullable<long> targetID, Nullable<double> amount, Nullable<bool> approved, Nullable<bool> refunded, Nullable<bool> voided, Nullable<bool> delivered, Nullable<long> cDRID, string gUID, Nullable<long> nextMessageFlowTreeID, Nullable<long> shortCodeKeywordID, Nullable<long> messageFlowID, ObjectParameter messageTransactionID, Nullable<decimal> aggregatorTransactionID, Nullable<long> messageStatusID, Nullable<System.DateTime> dateUpdated, Nullable<long> numberOfAttempts, string subject, string messageText, Nullable<long> messageTypeID, Nullable<long> contentTypeID, Nullable<decimal> price)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var refundedParameter = refunded.HasValue ?
                new ObjectParameter("Refunded", refunded) :
                new ObjectParameter("Refunded", typeof(bool));
    
            var voidedParameter = voided.HasValue ?
                new ObjectParameter("Voided", voided) :
                new ObjectParameter("Voided", typeof(bool));
    
            var deliveredParameter = delivered.HasValue ?
                new ObjectParameter("Delivered", delivered) :
                new ObjectParameter("Delivered", typeof(bool));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            var nextMessageFlowTreeIDParameter = nextMessageFlowTreeID.HasValue ?
                new ObjectParameter("NextMessageFlowTreeID", nextMessageFlowTreeID) :
                new ObjectParameter("NextMessageFlowTreeID", typeof(long));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var aggregatorTransactionIDParameter = aggregatorTransactionID.HasValue ?
                new ObjectParameter("AggregatorTransactionID", aggregatorTransactionID) :
                new ObjectParameter("AggregatorTransactionID", typeof(decimal));
    
            var messageStatusIDParameter = messageStatusID.HasValue ?
                new ObjectParameter("MessageStatusID", messageStatusID) :
                new ObjectParameter("MessageStatusID", typeof(long));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            var numberOfAttemptsParameter = numberOfAttempts.HasValue ?
                new ObjectParameter("NumberOfAttempts", numberOfAttempts) :
                new ObjectParameter("NumberOfAttempts", typeof(long));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var messageTypeIDParameter = messageTypeID.HasValue ?
                new ObjectParameter("MessageTypeID", messageTypeID) :
                new ObjectParameter("MessageTypeID", typeof(long));
    
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(long));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionMessageTransactionInsert", userIDParameter, dateCreatedParameter, transactionID, targetIDParameter, amountParameter, approvedParameter, refundedParameter, voidedParameter, deliveredParameter, cDRIDParameter, gUIDParameter, nextMessageFlowTreeIDParameter, shortCodeKeywordIDParameter, messageFlowIDParameter, messageTransactionID, aggregatorTransactionIDParameter, messageStatusIDParameter, dateUpdatedParameter, numberOfAttemptsParameter, subjectParameter, messageTextParameter, messageTypeIDParameter, contentTypeIDParameter, priceParameter);
        }
    
        public virtual int TransactionUpdate(Nullable<long> transactionID, Nullable<long> targetID, Nullable<System.DateTime> dateCreated, Nullable<double> amount, Nullable<bool> approved, Nullable<bool> refunded, Nullable<bool> voided, Nullable<bool> delivered, Nullable<long> cDRID, Nullable<long> nextMessageFlowTreeID, string sessionID, string billingLiteral, string gUID, Nullable<long> messageFlowID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var refundedParameter = refunded.HasValue ?
                new ObjectParameter("Refunded", refunded) :
                new ObjectParameter("Refunded", typeof(bool));
    
            var voidedParameter = voided.HasValue ?
                new ObjectParameter("Voided", voided) :
                new ObjectParameter("Voided", typeof(bool));
    
            var deliveredParameter = delivered.HasValue ?
                new ObjectParameter("Delivered", delivered) :
                new ObjectParameter("Delivered", typeof(bool));
    
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var nextMessageFlowTreeIDParameter = nextMessageFlowTreeID.HasValue ?
                new ObjectParameter("NextMessageFlowTreeID", nextMessageFlowTreeID) :
                new ObjectParameter("NextMessageFlowTreeID", typeof(long));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            var billingLiteralParameter = billingLiteral != null ?
                new ObjectParameter("BillingLiteral", billingLiteral) :
                new ObjectParameter("BillingLiteral", typeof(string));
    
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TransactionUpdate", transactionIDParameter, targetIDParameter, dateCreatedParameter, amountParameter, approvedParameter, refundedParameter, voidedParameter, deliveredParameter, cDRIDParameter, nextMessageFlowTreeIDParameter, sessionIDParameter, billingLiteralParameter, gUIDParameter, messageFlowIDParameter);
        }
    
        public virtual ObjectResult<TransactionView_Result> TransactionView(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransactionView_Result>("TransactionView", transactionIDParameter);
        }
    
        public virtual ObjectResult<TransactionView_SessionID_Result> TransactionView_SessionID(string sessionID)
        {
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransactionView_SessionID_Result>("TransactionView_SessionID", sessionIDParameter);
        }
    
        public virtual ObjectResult<TransactionView_User_MessageFlowID_Result> TransactionView_User_MessageFlowID(Nullable<long> userID, Nullable<long> messageFlowID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransactionView_User_MessageFlowID_Result>("TransactionView_User_MessageFlowID", userIDParameter, messageFlowIDParameter);
        }
    
        public virtual ObjectResult<TransactionView_User_ShortCode_Result> TransactionView_User_ShortCode(Nullable<long> userID, Nullable<long> shortCode, string phone)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var shortCodeParameter = shortCode.HasValue ?
                new ObjectParameter("ShortCode", shortCode) :
                new ObjectParameter("ShortCode", typeof(long));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransactionView_User_ShortCode_Result>("TransactionView_User_ShortCode", userIDParameter, shortCodeParameter, phoneParameter);
        }
    
        public virtual ObjectResult<TransactionView_with_UserSubscriptionID_OIOO_Result> TransactionView_with_UserSubscriptionID_OIOO(Nullable<long> userSubscriptionID)
        {
            var userSubscriptionIDParameter = userSubscriptionID.HasValue ?
                new ObjectParameter("UserSubscriptionID", userSubscriptionID) :
                new ObjectParameter("UserSubscriptionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransactionView_with_UserSubscriptionID_OIOO_Result>("TransactionView_with_UserSubscriptionID_OIOO", userSubscriptionIDParameter);
        }
    
        public virtual int TruncateSybaseDeactivatedPhoneNumbers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TruncateSybaseDeactivatedPhoneNumbers");
        }
    
        public virtual int UnsubscribeContacts(ObjectParameter contactCount, Nullable<long> changedByUserID)
        {
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnsubscribeContacts", contactCount, changedByUserIDParameter);
        }
    
        public virtual ObjectResult<UnSubscribeUserFromAllMessagingSubscription_Result> UnSubscribeUserFromAllMessagingSubscription(Nullable<long> userID, Nullable<long> transactionID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnSubscribeUserFromAllMessagingSubscription_Result>("UnSubscribeUserFromAllMessagingSubscription", userIDParameter, transactionIDParameter);
        }
    
        public virtual int UpdateAccessReports(Nullable<long> userid, Nullable<int> reportId, Nullable<bool> status)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("ReportId", reportId) :
                new ObjectParameter("ReportId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAccessReports", useridParameter, reportIdParameter, statusParameter);
        }
    
        public virtual int UpdateBroadcastPhoneNumbers(ObjectParameter broadcastQueueID, Nullable<int> reach)
        {
            var reachParameter = reach.HasValue ?
                new ObjectParameter("Reach", reach) :
                new ObjectParameter("Reach", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBroadcastPhoneNumbers", broadcastQueueID, reachParameter);
        }
    
        public virtual int UpdateBroadcastPhoneNumbersByCampaignIDs(ObjectParameter broadcastQueueID, Nullable<int> reach)
        {
            var reachParameter = reach.HasValue ?
                new ObjectParameter("Reach", reach) :
                new ObjectParameter("Reach", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBroadcastPhoneNumbersByCampaignIDs", broadcastQueueID, reachParameter);
        }
    
        public virtual int UpdateBroadcastPlusNumber(Nullable<int> iD, string number)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBroadcastPlusNumber", iDParameter, numberParameter);
        }
    
        public virtual int UpdateBroadcastSMSMessagetextUserArchive(Nullable<long> broadcastSMSMessagetextUserArchiveID, string messageText, Nullable<short> sortOrder, string tag)
        {
            var broadcastSMSMessagetextUserArchiveIDParameter = broadcastSMSMessagetextUserArchiveID.HasValue ?
                new ObjectParameter("BroadcastSMSMessagetextUserArchiveID", broadcastSMSMessagetextUserArchiveID) :
                new ObjectParameter("BroadcastSMSMessagetextUserArchiveID", typeof(long));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("MessageText", messageText) :
                new ObjectParameter("MessageText", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(short));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBroadcastSMSMessagetextUserArchive", broadcastSMSMessagetextUserArchiveIDParameter, messageTextParameter, sortOrderParameter, tagParameter);
        }
    
        public virtual int UpdateCampaignLocation(Nullable<int> campaignLocationID, Nullable<bool> active, string region, string sREntityID, string address, string address2, string city, string state, string zipcode, string email)
        {
            var campaignLocationIDParameter = campaignLocationID.HasValue ?
                new ObjectParameter("CampaignLocationID", campaignLocationID) :
                new ObjectParameter("CampaignLocationID", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var sREntityIDParameter = sREntityID != null ?
                new ObjectParameter("SREntityID", sREntityID) :
                new ObjectParameter("SREntityID", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCampaignLocation", campaignLocationIDParameter, activeParameter, regionParameter, sREntityIDParameter, addressParameter, address2Parameter, cityParameter, stateParameter, zipcodeParameter, emailParameter);
        }
    
        public virtual int UpdateCDRLog_IVRTreeID_TargetID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCDRLog_IVRTreeID_TargetID");
        }
    
        public virtual int UpdateCompanyConfiguration(Nullable<long> companyId, Nullable<bool> exportBroadcastBatchIdList)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var exportBroadcastBatchIdListParameter = exportBroadcastBatchIdList.HasValue ?
                new ObjectParameter("ExportBroadcastBatchIdList", exportBroadcastBatchIdList) :
                new ObjectParameter("ExportBroadcastBatchIdList", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCompanyConfiguration", companyIdParameter, exportBroadcastBatchIdListParameter);
        }
    
        public virtual ObjectResult<string> updateCountDownTime(Nullable<int> companyid, Nullable<int> value, Nullable<bool> action)
        {
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updateCountDownTime", companyidParameter, valueParameter, actionParameter);
        }
    
        public virtual int updateDA_CleanupGrammar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDA_CleanupGrammar");
        }
    
        public virtual ObjectResult<string> updateEnableDelayedOptin(Nullable<int> companyid, Nullable<int> value, Nullable<bool> action)
        {
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updateEnableDelayedOptin", companyidParameter, valueParameter, actionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdateGraphic(Nullable<int> userid, Nullable<int> graphicid, Nullable<int> campaignid, string title, Nullable<int> graphicType, string email, string tickerURL, Nullable<int> statusType, Nullable<int> graphicTemplateId, Nullable<int> graphicBackgroundID, Nullable<bool> isPublic, string backgroundColor)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var graphicidParameter = graphicid.HasValue ?
                new ObjectParameter("graphicid", graphicid) :
                new ObjectParameter("graphicid", typeof(int));
    
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var graphicTypeParameter = graphicType.HasValue ?
                new ObjectParameter("GraphicType", graphicType) :
                new ObjectParameter("GraphicType", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var tickerURLParameter = tickerURL != null ?
                new ObjectParameter("TickerURL", tickerURL) :
                new ObjectParameter("TickerURL", typeof(string));
    
            var statusTypeParameter = statusType.HasValue ?
                new ObjectParameter("StatusType", statusType) :
                new ObjectParameter("StatusType", typeof(int));
    
            var graphicTemplateIdParameter = graphicTemplateId.HasValue ?
                new ObjectParameter("GraphicTemplateId", graphicTemplateId) :
                new ObjectParameter("GraphicTemplateId", typeof(int));
    
            var graphicBackgroundIDParameter = graphicBackgroundID.HasValue ?
                new ObjectParameter("GraphicBackgroundID", graphicBackgroundID) :
                new ObjectParameter("GraphicBackgroundID", typeof(int));
    
            var isPublicParameter = isPublic.HasValue ?
                new ObjectParameter("IsPublic", isPublic) :
                new ObjectParameter("IsPublic", typeof(bool));
    
            var backgroundColorParameter = backgroundColor != null ?
                new ObjectParameter("BackgroundColor", backgroundColor) :
                new ObjectParameter("BackgroundColor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateGraphic", useridParameter, graphicidParameter, campaignidParameter, titleParameter, graphicTypeParameter, emailParameter, tickerURLParameter, statusTypeParameter, graphicTemplateIdParameter, graphicBackgroundIDParameter, isPublicParameter, backgroundColorParameter);
        }
    
        public virtual int UpdateGraphicExtraElement(Nullable<int> graphicid, string elementKey, string value)
        {
            var graphicidParameter = graphicid.HasValue ?
                new ObjectParameter("graphicid", graphicid) :
                new ObjectParameter("graphicid", typeof(int));
    
            var elementKeyParameter = elementKey != null ?
                new ObjectParameter("elementKey", elementKey) :
                new ObjectParameter("elementKey", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGraphicExtraElement", graphicidParameter, elementKeyParameter, valueParameter);
        }
    
        public virtual int UpdateGraphicTemplate(Nullable<int> graphictemplateid, Nullable<int> graphicformatid, string title, string layoutxml)
        {
            var graphictemplateidParameter = graphictemplateid.HasValue ?
                new ObjectParameter("graphictemplateid", graphictemplateid) :
                new ObjectParameter("graphictemplateid", typeof(int));
    
            var graphicformatidParameter = graphicformatid.HasValue ?
                new ObjectParameter("graphicformatid", graphicformatid) :
                new ObjectParameter("graphicformatid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var layoutxmlParameter = layoutxml != null ?
                new ObjectParameter("layoutxml", layoutxml) :
                new ObjectParameter("layoutxml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGraphicTemplate", graphictemplateidParameter, graphicformatidParameter, titleParameter, layoutxmlParameter);
        }
    
        public virtual int UpdateMessageFLow(Nullable<long> messageFlowID, string description)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMessageFLow", messageFlowIDParameter, descriptionParameter);
        }
    
        public virtual int UpdateMessageFlowSchedule(Nullable<long> messageFlowScheduleID, Nullable<System.DateTime> nextScheduled, string schedule)
        {
            var messageFlowScheduleIDParameter = messageFlowScheduleID.HasValue ?
                new ObjectParameter("MessageFlowScheduleID", messageFlowScheduleID) :
                new ObjectParameter("MessageFlowScheduleID", typeof(long));
    
            var nextScheduledParameter = nextScheduled.HasValue ?
                new ObjectParameter("NextScheduled", nextScheduled) :
                new ObjectParameter("NextScheduled", typeof(System.DateTime));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("Schedule", schedule) :
                new ObjectParameter("Schedule", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMessageFlowSchedule", messageFlowScheduleIDParameter, nextScheduledParameter, scheduleParameter);
        }
    
        public virtual int UpdateMessageTransaction_Price(Nullable<long> messageTransactionID, Nullable<decimal> price)
        {
            var messageTransactionIDParameter = messageTransactionID.HasValue ?
                new ObjectParameter("MessageTransactionID", messageTransactionID) :
                new ObjectParameter("MessageTransactionID", typeof(long));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMessageTransaction_Price", messageTransactionIDParameter, priceParameter);
        }
    
        public virtual int UpdateNextMessageFlowTreeID(Nullable<long> transactionID, Nullable<long> nextMessageFlowTreeID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var nextMessageFlowTreeIDParameter = nextMessageFlowTreeID.HasValue ?
                new ObjectParameter("NextMessageFlowTreeID", nextMessageFlowTreeID) :
                new ObjectParameter("NextMessageFlowTreeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateNextMessageFlowTreeID", transactionIDParameter, nextMessageFlowTreeIDParameter);
        }
    
        public virtual int UpdateOutboundCallSchedule(Nullable<long> iVRTreeID, Nullable<System.DateTime> nextScheduled, string schedule)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var nextScheduledParameter = nextScheduled.HasValue ?
                new ObjectParameter("NextScheduled", nextScheduled) :
                new ObjectParameter("NextScheduled", typeof(System.DateTime));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("Schedule", schedule) :
                new ObjectParameter("Schedule", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOutboundCallSchedule", iVRTreeIDParameter, nextScheduledParameter, scheduleParameter);
        }
    
        public virtual int UpdatePoll(Nullable<long> campaignID, ObjectParameter pollID, string description)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePoll", campaignIDParameter, pollID, descriptionParameter);
        }
    
        public virtual int UpdatePollAnswerAudience(Nullable<int> pollAnswerAudienceID, Nullable<int> audienceSize, Nullable<System.DateTime> fromActiveDate, Nullable<System.DateTime> toActiveDate, string title)
        {
            var pollAnswerAudienceIDParameter = pollAnswerAudienceID.HasValue ?
                new ObjectParameter("PollAnswerAudienceID", pollAnswerAudienceID) :
                new ObjectParameter("PollAnswerAudienceID", typeof(int));
    
            var audienceSizeParameter = audienceSize.HasValue ?
                new ObjectParameter("AudienceSize", audienceSize) :
                new ObjectParameter("AudienceSize", typeof(int));
    
            var fromActiveDateParameter = fromActiveDate.HasValue ?
                new ObjectParameter("FromActiveDate", fromActiveDate) :
                new ObjectParameter("FromActiveDate", typeof(System.DateTime));
    
            var toActiveDateParameter = toActiveDate.HasValue ?
                new ObjectParameter("ToActiveDate", toActiveDate) :
                new ObjectParameter("ToActiveDate", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePollAnswerAudience", pollAnswerAudienceIDParameter, audienceSizeParameter, fromActiveDateParameter, toActiveDateParameter, titleParameter);
        }
    
        public virtual int UpdatePostTargetID(Nullable<long> targetID, Nullable<long> postTargetTargetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var postTargetTargetIDParameter = postTargetTargetID.HasValue ?
                new ObjectParameter("PostTargetTargetID", postTargetTargetID) :
                new ObjectParameter("PostTargetTargetID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePostTargetID", targetIDParameter, postTargetTargetIDParameter);
        }
    
        public virtual int UpdatePromotionalMessage(Nullable<int> graphicid, Nullable<int> promotionalMessageID, string messageText, Nullable<int> weighting)
        {
            var graphicidParameter = graphicid.HasValue ?
                new ObjectParameter("graphicid", graphicid) :
                new ObjectParameter("graphicid", typeof(int));
    
            var promotionalMessageIDParameter = promotionalMessageID.HasValue ?
                new ObjectParameter("promotionalMessageID", promotionalMessageID) :
                new ObjectParameter("promotionalMessageID", typeof(int));
    
            var messageTextParameter = messageText != null ?
                new ObjectParameter("messageText", messageText) :
                new ObjectParameter("messageText", typeof(string));
    
            var weightingParameter = weighting.HasValue ?
                new ObjectParameter("Weighting", weighting) :
                new ObjectParameter("Weighting", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePromotionalMessage", graphicidParameter, promotionalMessageIDParameter, messageTextParameter, weightingParameter);
        }
    
        public virtual int UpdateReminderDoubleOptIn(Nullable<long> messageFlowID, Nullable<long> userSubscriptionID)
        {
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var userSubscriptionIDParameter = userSubscriptionID.HasValue ?
                new ObjectParameter("UserSubscriptionID", userSubscriptionID) :
                new ObjectParameter("UserSubscriptionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReminderDoubleOptIn", messageFlowIDParameter, userSubscriptionIDParameter);
        }
    
        public virtual int UpdateReminderInfo(Nullable<long> userID, string companyName, Nullable<long> companyPhone, string timeZone)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var companyPhoneParameter = companyPhone.HasValue ?
                new ObjectParameter("companyPhone", companyPhone) :
                new ObjectParameter("companyPhone", typeof(long));
    
            var timeZoneParameter = timeZone != null ?
                new ObjectParameter("timeZone", timeZone) :
                new ObjectParameter("timeZone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReminderInfo", userIDParameter, companyNameParameter, companyPhoneParameter, timeZoneParameter);
        }
    
        public virtual int UpdateScheduleReport(Nullable<long> reportID, string reportName, Nullable<int> reportTypeID, Nullable<int> timePeriodID, string campaignIDs, Nullable<System.DateTime> startDate, Nullable<int> repeatTypeID, Nullable<int> repeatInterval, Nullable<bool> isMon, Nullable<bool> isTue, Nullable<bool> isWed, Nullable<bool> isThu, Nullable<bool> isFri, Nullable<bool> isSat, Nullable<bool> isSun, Nullable<bool> neverEnds, Nullable<int> endsAfterOccurrences, Nullable<System.DateTime> endsOn, string recipients, Nullable<long> userID)
        {
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(long));
    
            var reportNameParameter = reportName != null ?
                new ObjectParameter("ReportName", reportName) :
                new ObjectParameter("ReportName", typeof(string));
    
            var reportTypeIDParameter = reportTypeID.HasValue ?
                new ObjectParameter("ReportTypeID", reportTypeID) :
                new ObjectParameter("ReportTypeID", typeof(int));
    
            var timePeriodIDParameter = timePeriodID.HasValue ?
                new ObjectParameter("TimePeriodID", timePeriodID) :
                new ObjectParameter("TimePeriodID", typeof(int));
    
            var campaignIDsParameter = campaignIDs != null ?
                new ObjectParameter("CampaignIDs", campaignIDs) :
                new ObjectParameter("CampaignIDs", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var repeatTypeIDParameter = repeatTypeID.HasValue ?
                new ObjectParameter("RepeatTypeID", repeatTypeID) :
                new ObjectParameter("RepeatTypeID", typeof(int));
    
            var repeatIntervalParameter = repeatInterval.HasValue ?
                new ObjectParameter("RepeatInterval", repeatInterval) :
                new ObjectParameter("RepeatInterval", typeof(int));
    
            var isMonParameter = isMon.HasValue ?
                new ObjectParameter("IsMon", isMon) :
                new ObjectParameter("IsMon", typeof(bool));
    
            var isTueParameter = isTue.HasValue ?
                new ObjectParameter("IsTue", isTue) :
                new ObjectParameter("IsTue", typeof(bool));
    
            var isWedParameter = isWed.HasValue ?
                new ObjectParameter("IsWed", isWed) :
                new ObjectParameter("IsWed", typeof(bool));
    
            var isThuParameter = isThu.HasValue ?
                new ObjectParameter("IsThu", isThu) :
                new ObjectParameter("IsThu", typeof(bool));
    
            var isFriParameter = isFri.HasValue ?
                new ObjectParameter("IsFri", isFri) :
                new ObjectParameter("IsFri", typeof(bool));
    
            var isSatParameter = isSat.HasValue ?
                new ObjectParameter("IsSat", isSat) :
                new ObjectParameter("IsSat", typeof(bool));
    
            var isSunParameter = isSun.HasValue ?
                new ObjectParameter("IsSun", isSun) :
                new ObjectParameter("IsSun", typeof(bool));
    
            var neverEndsParameter = neverEnds.HasValue ?
                new ObjectParameter("NeverEnds", neverEnds) :
                new ObjectParameter("NeverEnds", typeof(bool));
    
            var endsAfterOccurrencesParameter = endsAfterOccurrences.HasValue ?
                new ObjectParameter("EndsAfterOccurrences", endsAfterOccurrences) :
                new ObjectParameter("EndsAfterOccurrences", typeof(int));
    
            var endsOnParameter = endsOn.HasValue ?
                new ObjectParameter("EndsOn", endsOn) :
                new ObjectParameter("EndsOn", typeof(System.DateTime));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateScheduleReport", reportIDParameter, reportNameParameter, reportTypeIDParameter, timePeriodIDParameter, campaignIDsParameter, startDateParameter, repeatTypeIDParameter, repeatIntervalParameter, isMonParameter, isTueParameter, isWedParameter, isThuParameter, isFriParameter, isSatParameter, isSunParameter, neverEndsParameter, endsAfterOccurrencesParameter, endsOnParameter, recipientsParameter, userIDParameter);
        }
    
        public virtual int UpdateSentBroadcastMessageStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSentBroadcastMessageStatus");
        }
    
        public virtual int UpdateSmartAnalytics(string user, Nullable<bool> hasSmartAnalyticsAccess, Nullable<bool> hasSmartReceiptAccess)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var hasSmartAnalyticsAccessParameter = hasSmartAnalyticsAccess.HasValue ?
                new ObjectParameter("HasSmartAnalyticsAccess", hasSmartAnalyticsAccess) :
                new ObjectParameter("HasSmartAnalyticsAccess", typeof(bool));
    
            var hasSmartReceiptAccessParameter = hasSmartReceiptAccess.HasValue ?
                new ObjectParameter("HasSmartReceiptAccess", hasSmartReceiptAccess) :
                new ObjectParameter("HasSmartReceiptAccess", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSmartAnalytics", userParameter, hasSmartAnalyticsAccessParameter, hasSmartReceiptAccessParameter);
        }
    
        public virtual int UpdateSmartAnalyticsUser(string user, Nullable<bool> hasSmartAnalyticsAccess, Nullable<bool> hasSmartReceiptAccess, Nullable<bool> hasExportContacts)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var hasSmartAnalyticsAccessParameter = hasSmartAnalyticsAccess.HasValue ?
                new ObjectParameter("HasSmartAnalyticsAccess", hasSmartAnalyticsAccess) :
                new ObjectParameter("HasSmartAnalyticsAccess", typeof(bool));
    
            var hasSmartReceiptAccessParameter = hasSmartReceiptAccess.HasValue ?
                new ObjectParameter("HasSmartReceiptAccess", hasSmartReceiptAccess) :
                new ObjectParameter("HasSmartReceiptAccess", typeof(bool));
    
            var hasExportContactsParameter = hasExportContacts.HasValue ?
                new ObjectParameter("HasExportContacts", hasExportContacts) :
                new ObjectParameter("HasExportContacts", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSmartAnalyticsUser", userParameter, hasSmartAnalyticsAccessParameter, hasSmartReceiptAccessParameter, hasExportContactsParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateTemplateBackground(Nullable<int> graphicTemplateID, string title, string url)
        {
            var graphicTemplateIDParameter = graphicTemplateID.HasValue ?
                new ObjectParameter("graphicTemplateID", graphicTemplateID) :
                new ObjectParameter("graphicTemplateID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateTemplateBackground", graphicTemplateIDParameter, titleParameter, urlParameter);
        }
    
        public virtual int UpdateTickerGraphic(Nullable<int> graphicid, Nullable<short> flickerDuration, Nullable<short> flickerTransition, Nullable<bool> flickerStretch, Nullable<bool> autoAprove, Nullable<int> promoMessageFreq)
        {
            var graphicidParameter = graphicid.HasValue ?
                new ObjectParameter("graphicid", graphicid) :
                new ObjectParameter("graphicid", typeof(int));
    
            var flickerDurationParameter = flickerDuration.HasValue ?
                new ObjectParameter("FlickerDuration", flickerDuration) :
                new ObjectParameter("FlickerDuration", typeof(short));
    
            var flickerTransitionParameter = flickerTransition.HasValue ?
                new ObjectParameter("FlickerTransition", flickerTransition) :
                new ObjectParameter("FlickerTransition", typeof(short));
    
            var flickerStretchParameter = flickerStretch.HasValue ?
                new ObjectParameter("FlickerStretch", flickerStretch) :
                new ObjectParameter("FlickerStretch", typeof(bool));
    
            var autoAproveParameter = autoAprove.HasValue ?
                new ObjectParameter("AutoAprove", autoAprove) :
                new ObjectParameter("AutoAprove", typeof(bool));
    
            var promoMessageFreqParameter = promoMessageFreq.HasValue ?
                new ObjectParameter("PromoMessageFreq", promoMessageFreq) :
                new ObjectParameter("PromoMessageFreq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTickerGraphic", graphicidParameter, flickerDurationParameter, flickerTransitionParameter, flickerStretchParameter, autoAproveParameter, promoMessageFreqParameter);
        }
    
        public virtual int UpdateTickerMessages(Nullable<long> graphicID)
        {
            var graphicIDParameter = graphicID.HasValue ?
                new ObjectParameter("graphicID", graphicID) :
                new ObjectParameter("graphicID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTickerMessages", graphicIDParameter);
        }
    
        public virtual int UpdateTransaction_MessageFlowID(Nullable<long> transactionID, Nullable<long> messageFlowID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransaction_MessageFlowID", transactionIDParameter, messageFlowIDParameter);
        }
    
        public virtual int UpdateTransactionAmount(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionAmount", transactionIDParameter);
        }
    
        public virtual int UpdateTransactionDelivered(Nullable<long> transactionID, Nullable<bool> delivered)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var deliveredParameter = delivered.HasValue ?
                new ObjectParameter("Delivered", delivered) :
                new ObjectParameter("Delivered", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionDelivered", transactionIDParameter, deliveredParameter);
        }
    
        public virtual int UpdateTransactionGUID(Nullable<long> transactionID, string gUID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionGUID", transactionIDParameter, gUIDParameter);
        }
    
        public virtual int UpdateTransactionSessionID(string sessionID, Nullable<long> transactionID)
        {
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionSessionID", sessionIDParameter, transactionIDParameter);
        }
    
        public virtual int UpdateTransactionStatus(Nullable<long> messageTransactionID, Nullable<int> messageStatusID)
        {
            var messageTransactionIDParameter = messageTransactionID.HasValue ?
                new ObjectParameter("MessageTransactionID", messageTransactionID) :
                new ObjectParameter("MessageTransactionID", typeof(long));
    
            var messageStatusIDParameter = messageStatusID.HasValue ?
                new ObjectParameter("MessageStatusID", messageStatusID) :
                new ObjectParameter("MessageStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionStatus", messageTransactionIDParameter, messageStatusIDParameter);
        }
    
        public virtual int UpdateTransactionTargetID(Nullable<long> transactionID, string targetID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var targetIDParameter = targetID != null ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionTargetID", transactionIDParameter, targetIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdateUser(string userLogin, Nullable<bool> canCreateIVRCampaign, Nullable<bool> hasRandomDrawAccess, Nullable<bool> canCreatePollingCampaign, Nullable<bool> sociallAccess, Nullable<bool> feedbackAccess, Nullable<bool> stamptAccess, Nullable<bool> displayAccess, Nullable<bool> keywordLookupAccess, Nullable<bool> reminderAccess, Nullable<bool> hasSalesAccess, Nullable<bool> hasSmartSMSAccess)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            var canCreateIVRCampaignParameter = canCreateIVRCampaign.HasValue ?
                new ObjectParameter("CanCreateIVRCampaign", canCreateIVRCampaign) :
                new ObjectParameter("CanCreateIVRCampaign", typeof(bool));
    
            var hasRandomDrawAccessParameter = hasRandomDrawAccess.HasValue ?
                new ObjectParameter("HasRandomDrawAccess", hasRandomDrawAccess) :
                new ObjectParameter("HasRandomDrawAccess", typeof(bool));
    
            var canCreatePollingCampaignParameter = canCreatePollingCampaign.HasValue ?
                new ObjectParameter("CanCreatePollingCampaign", canCreatePollingCampaign) :
                new ObjectParameter("CanCreatePollingCampaign", typeof(bool));
    
            var sociallAccessParameter = sociallAccess.HasValue ?
                new ObjectParameter("SociallAccess", sociallAccess) :
                new ObjectParameter("SociallAccess", typeof(bool));
    
            var feedbackAccessParameter = feedbackAccess.HasValue ?
                new ObjectParameter("FeedbackAccess", feedbackAccess) :
                new ObjectParameter("FeedbackAccess", typeof(bool));
    
            var stamptAccessParameter = stamptAccess.HasValue ?
                new ObjectParameter("StamptAccess", stamptAccess) :
                new ObjectParameter("StamptAccess", typeof(bool));
    
            var displayAccessParameter = displayAccess.HasValue ?
                new ObjectParameter("DisplayAccess", displayAccess) :
                new ObjectParameter("DisplayAccess", typeof(bool));
    
            var keywordLookupAccessParameter = keywordLookupAccess.HasValue ?
                new ObjectParameter("KeywordLookupAccess", keywordLookupAccess) :
                new ObjectParameter("KeywordLookupAccess", typeof(bool));
    
            var reminderAccessParameter = reminderAccess.HasValue ?
                new ObjectParameter("ReminderAccess", reminderAccess) :
                new ObjectParameter("ReminderAccess", typeof(bool));
    
            var hasSalesAccessParameter = hasSalesAccess.HasValue ?
                new ObjectParameter("HasSalesAccess", hasSalesAccess) :
                new ObjectParameter("HasSalesAccess", typeof(bool));
    
            var hasSmartSMSAccessParameter = hasSmartSMSAccess.HasValue ?
                new ObjectParameter("HasSmartSMSAccess", hasSmartSMSAccess) :
                new ObjectParameter("HasSmartSMSAccess", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateUser", userLoginParameter, canCreateIVRCampaignParameter, hasRandomDrawAccessParameter, canCreatePollingCampaignParameter, sociallAccessParameter, feedbackAccessParameter, stamptAccessParameter, displayAccessParameter, keywordLookupAccessParameter, reminderAccessParameter, hasSalesAccessParameter, hasSmartSMSAccessParameter);
        }
    
        public virtual int UpdateUserCompanyToTest(Nullable<long> phone)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserCompanyToTest", phoneParameter);
        }
    
        public virtual int UpdateUserHistoryReports(Nullable<long> userID, Nullable<int> reportID, Nullable<System.DateTime> lastViewed)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(int));
    
            var lastViewedParameter = lastViewed.HasValue ?
                new ObjectParameter("LastViewed", lastViewed) :
                new ObjectParameter("LastViewed", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserHistoryReports", userIDParameter, reportIDParameter, lastViewedParameter);
        }
    
        public virtual int UpdateUserLoyaltyPoints(Nullable<long> phone, Nullable<long> companyID, Nullable<int> loyaltyPoints)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var loyaltyPointsParameter = loyaltyPoints.HasValue ?
                new ObjectParameter("LoyaltyPoints", loyaltyPoints) :
                new ObjectParameter("LoyaltyPoints", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserLoyaltyPoints", phoneParameter, companyIDParameter, loyaltyPointsParameter);
        }
    
        public virtual int UpdateUserPermissions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserPermissions");
        }
    
        public virtual int UpdateUserPermissionsDisplayGraphic()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserPermissionsDisplayGraphic");
        }
    
        public virtual int UpdateUserPermissionsReports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserPermissionsReports");
        }
    
        public virtual int UpdateUserSecurity(string userLogin, Nullable<long> companyID, Nullable<bool> showSupport, string adminIdentityID, Nullable<bool> hasContactsAccess, Nullable<bool> hasSmartAnalyticsAccess)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var showSupportParameter = showSupport.HasValue ?
                new ObjectParameter("ShowSupport", showSupport) :
                new ObjectParameter("ShowSupport", typeof(bool));
    
            var adminIdentityIDParameter = adminIdentityID != null ?
                new ObjectParameter("AdminIdentityID", adminIdentityID) :
                new ObjectParameter("AdminIdentityID", typeof(string));
    
            var hasContactsAccessParameter = hasContactsAccess.HasValue ?
                new ObjectParameter("HasContactsAccess", hasContactsAccess) :
                new ObjectParameter("HasContactsAccess", typeof(bool));
    
            var hasSmartAnalyticsAccessParameter = hasSmartAnalyticsAccess.HasValue ?
                new ObjectParameter("HasSmartAnalyticsAccess", hasSmartAnalyticsAccess) :
                new ObjectParameter("HasSmartAnalyticsAccess", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserSecurity", userLoginParameter, companyIDParameter, showSupportParameter, adminIdentityIDParameter, hasContactsAccessParameter, hasSmartAnalyticsAccessParameter);
        }
    
        public virtual int UpdateUserSubscriptionLoyaltyPoints(Nullable<long> companyId, string phoneNumber, Nullable<int> loyaltyPoints, ObjectParameter recordCount)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var loyaltyPointsParameter = loyaltyPoints.HasValue ?
                new ObjectParameter("LoyaltyPoints", loyaltyPoints) :
                new ObjectParameter("LoyaltyPoints", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserSubscriptionLoyaltyPoints", companyIdParameter, phoneNumberParameter, loyaltyPointsParameter, recordCount);
        }
    
        public virtual int UpdateUserSubscriptionLoyaltyStatus(Nullable<long> userID, Nullable<int> loyaltyStatusTypeId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var loyaltyStatusTypeIdParameter = loyaltyStatusTypeId.HasValue ?
                new ObjectParameter("LoyaltyStatusTypeId", loyaltyStatusTypeId) :
                new ObjectParameter("LoyaltyStatusTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserSubscriptionLoyaltyStatus", userIDParameter, loyaltyStatusTypeIdParameter);
        }
    
        public virtual int UpdateUsersubscriptionSource(Nullable<long> userSubscriptionID)
        {
            var userSubscriptionIDParameter = userSubscriptionID.HasValue ?
                new ObjectParameter("UserSubscriptionID", userSubscriptionID) :
                new ObjectParameter("UserSubscriptionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUsersubscriptionSource", userSubscriptionIDParameter);
        }
    
        public virtual int UpdateVotingGraphic(Nullable<int> graphicid, string question, Nullable<System.DateTime> votesafter, Nullable<bool> overrideVotes)
        {
            var graphicidParameter = graphicid.HasValue ?
                new ObjectParameter("graphicid", graphicid) :
                new ObjectParameter("graphicid", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var votesafterParameter = votesafter.HasValue ?
                new ObjectParameter("votesafter", votesafter) :
                new ObjectParameter("votesafter", typeof(System.DateTime));
    
            var overrideVotesParameter = overrideVotes.HasValue ?
                new ObjectParameter("overrideVotes", overrideVotes) :
                new ObjectParameter("overrideVotes", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVotingGraphic", graphicidParameter, questionParameter, votesafterParameter, overrideVotesParameter);
        }
    
        public virtual int UpdateVotingGraphicOption(Nullable<int> graphicid, string optionKey, string optionText, Nullable<int> votesPercent, string url)
        {
            var graphicidParameter = graphicid.HasValue ?
                new ObjectParameter("graphicid", graphicid) :
                new ObjectParameter("graphicid", typeof(int));
    
            var optionKeyParameter = optionKey != null ?
                new ObjectParameter("optionKey", optionKey) :
                new ObjectParameter("optionKey", typeof(string));
    
            var optionTextParameter = optionText != null ?
                new ObjectParameter("optionText", optionText) :
                new ObjectParameter("optionText", typeof(string));
    
            var votesPercentParameter = votesPercent.HasValue ?
                new ObjectParameter("votesPercent", votesPercent) :
                new ObjectParameter("votesPercent", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVotingGraphicOption", graphicidParameter, optionKeyParameter, optionTextParameter, votesPercentParameter, urlParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UserCancelAccess(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UserCancelAccess", loginParameter);
        }
    
        public virtual int UserCopy(string oldLogin, string newogin)
        {
            var oldLoginParameter = oldLogin != null ?
                new ObjectParameter("OldLogin", oldLogin) :
                new ObjectParameter("OldLogin", typeof(string));
    
            var newoginParameter = newogin != null ?
                new ObjectParameter("Newogin", newogin) :
                new ObjectParameter("Newogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserCopy", oldLoginParameter, newoginParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UserDblOptInSubscriptionCountForShortCode(string phoneNumber, Nullable<long> shortcode)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var shortcodeParameter = shortcode.HasValue ?
                new ObjectParameter("shortcode", shortcode) :
                new ObjectParameter("shortcode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UserDblOptInSubscriptionCountForShortCode", phoneNumberParameter, shortcodeParameter);
        }
    
        public virtual int UserDelete(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDelete", userIDParameter);
        }
    
        public virtual int UserInfoDelete(Nullable<long> userInfoID)
        {
            var userInfoIDParameter = userInfoID.HasValue ?
                new ObjectParameter("UserInfoID", userInfoID) :
                new ObjectParameter("UserInfoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInfoDelete", userInfoIDParameter);
        }
    
        public virtual int UserInfoDeleteByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInfoDeleteByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<UserInfoFirstAdminView_Result> UserInfoFirstAdminView(Nullable<long> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserInfoFirstAdminView_Result>("UserInfoFirstAdminView", companyIDParameter);
        }
    
        public virtual int UserInfoInsert(ObjectParameter userInfoID, Nullable<long> userID, string fName, string lName, string address, string address2, string city, string state, string zip, string email)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInfoInsert", userInfoID, userIDParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, zipParameter, emailParameter);
        }
    
        public virtual int UserInfoInsertWithCountry(ObjectParameter userInfoID, Nullable<long> userID, string fName, string lName, string address, string address2, string city, string state, string zip, string email, string country)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInfoInsertWithCountry", userInfoID, userIDParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, zipParameter, emailParameter, countryParameter);
        }
    
        public virtual int UserInfoUpdate(Nullable<long> userInfoID, Nullable<long> userID, string fName, string lName, string address, string address2, string city, string state, string zip, string email)
        {
            var userInfoIDParameter = userInfoID.HasValue ?
                new ObjectParameter("UserInfoID", userInfoID) :
                new ObjectParameter("UserInfoID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInfoUpdate", userInfoIDParameter, userIDParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, zipParameter, emailParameter);
        }
    
        public virtual int UserInfoUpdateWithCountry(Nullable<long> userInfoID, Nullable<long> userID, string fName, string lName, string address, string address2, string city, string state, string zip, string email, string country, string gender, Nullable<int> timeZone)
        {
            var userInfoIDParameter = userInfoID.HasValue ?
                new ObjectParameter("UserInfoID", userInfoID) :
                new ObjectParameter("UserInfoID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var timeZoneParameter = timeZone.HasValue ?
                new ObjectParameter("TimeZone", timeZone) :
                new ObjectParameter("TimeZone", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInfoUpdateWithCountry", userInfoIDParameter, userIDParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, zipParameter, emailParameter, countryParameter, genderParameter, timeZoneParameter);
        }
    
        public virtual ObjectResult<UserInfoView_Result> UserInfoView(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserInfoView_Result>("UserInfoView", userIDParameter);
        }
    
        public virtual int UserInsert(ObjectParameter userID, Nullable<long> companyID, Nullable<int> userTypeID, Nullable<long> phone, Nullable<System.DateTime> dateCreated, Nullable<bool> active, Nullable<long> mobileModelID, Nullable<long> mobileCarrierID, string accountNum)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var mobileModelIDParameter = mobileModelID.HasValue ?
                new ObjectParameter("MobileModelID", mobileModelID) :
                new ObjectParameter("MobileModelID", typeof(long));
    
            var mobileCarrierIDParameter = mobileCarrierID.HasValue ?
                new ObjectParameter("MobileCarrierID", mobileCarrierID) :
                new ObjectParameter("MobileCarrierID", typeof(long));
    
            var accountNumParameter = accountNum != null ?
                new ObjectParameter("AccountNum", accountNum) :
                new ObjectParameter("AccountNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInsert", userID, companyIDParameter, userTypeIDParameter, phoneParameter, dateCreatedParameter, activeParameter, mobileModelIDParameter, mobileCarrierIDParameter, accountNumParameter);
        }
    
        public virtual int UserKeywordInsert(Nullable<long> userID, Nullable<long> shortCodeKeywordID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var shortCodeKeywordIDParameter = shortCodeKeywordID.HasValue ?
                new ObjectParameter("ShortCodeKeywordID", shortCodeKeywordID) :
                new ObjectParameter("ShortCodeKeywordID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserKeywordInsert", userIDParameter, shortCodeKeywordIDParameter);
        }
    
        public virtual ObjectResult<UserKeywordView_Result> UserKeywordView(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserKeywordView_Result>("UserKeywordView", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UserMaintenance_GetUsersWithBadCarriers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UserMaintenance_GetUsersWithBadCarriers");
        }
    
        public virtual int UserMaintenance_UpdateUserCarriers(Nullable<long> phone, Nullable<long> netNumberID)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var netNumberIDParameter = netNumberID.HasValue ?
                new ObjectParameter("NetNumberID", netNumberID) :
                new ObjectParameter("NetNumberID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserMaintenance_UpdateUserCarriers", phoneParameter, netNumberIDParameter);
        }
    
        public virtual int UserMaintenance_UpdateUserTimeZones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserMaintenance_UpdateUserTimeZones");
        }
    
        public virtual ObjectResult<UserPermissionsPerCampaignView_Result> UserPermissionsPerCampaignView(Nullable<long> companyID, Nullable<long> userID, string sortBy, string sortType)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("sortType", sortType) :
                new ObjectParameter("sortType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserPermissionsPerCampaignView_Result>("UserPermissionsPerCampaignView", companyIDParameter, userIDParameter, sortByParameter, sortTypeParameter);
        }
    
        public virtual ObjectResult<UserReport_Result> UserReport(Nullable<long> companyID, string campaignID, Nullable<int> userTypeID, string sortBy, string sortType, Nullable<long> custPhone, Nullable<long> messageFlowID, Nullable<long> dID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, ObjectParameter totalSubscribedUsers)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var custPhoneParameter = custPhone.HasValue ?
                new ObjectParameter("CustPhone", custPhone) :
                new ObjectParameter("CustPhone", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserReport_Result>("UserReport", companyIDParameter, campaignIDParameter, userTypeIDParameter, sortByParameter, sortTypeParameter, custPhoneParameter, messageFlowIDParameter, dIDParameter, pageSizeParameter, pageNumberParameter, totalRows, totalSubscribedUsers);
        }
    
        public virtual ObjectResult<UserReportSubscribed_Result> UserReportSubscribed(Nullable<long> companyID, Nullable<int> userTypeID, string sortBy, string sortType, Nullable<long> custPhone, Nullable<long> messageFlowID, Nullable<long> dID, ObjectParameter totalRows, ObjectParameter totalSubscribedUsers)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var custPhoneParameter = custPhone.HasValue ?
                new ObjectParameter("CustPhone", custPhone) :
                new ObjectParameter("CustPhone", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserReportSubscribed_Result>("UserReportSubscribed", companyIDParameter, userTypeIDParameter, sortByParameter, sortTypeParameter, custPhoneParameter, messageFlowIDParameter, dIDParameter, totalRows, totalSubscribedUsers);
        }
    
        public virtual ObjectResult<Nullable<bool>> UserReSubscribe(Nullable<long> campaignID, Nullable<long> phone)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("UserReSubscribe", campaignIDParameter, phoneParameter);
        }
    
        public virtual int UserSaveToSubscription(Nullable<long> companyID, string campaignID, Nullable<long> toBeSubscribedSubsID, string messageFlowID, string dID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string textQuery, Nullable<long> carrierID, string state, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, Nullable<int> timeZoneID, Nullable<long> changedByUserID, ObjectParameter totalRows)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var toBeSubscribedSubsIDParameter = toBeSubscribedSubsID.HasValue ?
                new ObjectParameter("ToBeSubscribedSubsID", toBeSubscribedSubsID) :
                new ObjectParameter("ToBeSubscribedSubsID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSaveToSubscription", companyIDParameter, campaignIDParameter, toBeSubscribedSubsIDParameter, messageFlowIDParameter, dIDParameter, startDateParameter, endDateParameter, textQueryParameter, carrierIDParameter, stateParameter, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, timeZoneIDParameter, changedByUserIDParameter, totalRows);
        }
    
        public virtual int UserSecurityDelete(Nullable<long> userSecurityID)
        {
            var userSecurityIDParameter = userSecurityID.HasValue ?
                new ObjectParameter("UserSecurityID", userSecurityID) :
                new ObjectParameter("UserSecurityID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSecurityDelete", userSecurityIDParameter);
        }
    
        public virtual int UserSecurityDeleteByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSecurityDeleteByUserID", userIDParameter);
        }
    
        public virtual int UserSecurityInsert(ObjectParameter userSecurityID, Nullable<long> userID, string login, string password, Nullable<long> c4ParentAccount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var c4ParentAccountParameter = c4ParentAccount.HasValue ?
                new ObjectParameter("C4ParentAccount", c4ParentAccount) :
                new ObjectParameter("C4ParentAccount", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSecurityInsert", userSecurityID, userIDParameter, loginParameter, passwordParameter, c4ParentAccountParameter);
        }
    
        public virtual int UserSecurityUpdate(Nullable<long> userSecurityID, Nullable<long> userID, string login, string password)
        {
            var userSecurityIDParameter = userSecurityID.HasValue ?
                new ObjectParameter("UserSecurityID", userSecurityID) :
                new ObjectParameter("UserSecurityID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSecurityUpdate", userSecurityIDParameter, userIDParameter, loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<UserSecurityView_Result> UserSecurityView(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSecurityView_Result>("UserSecurityView", userIDParameter);
        }
    
        public virtual ObjectResult<UsersFeatures_Result> UsersFeatures(string users, Nullable<long> companyID)
        {
            var usersParameter = users != null ?
                new ObjectParameter("users", users) :
                new ObjectParameter("users", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersFeatures_Result>("UsersFeatures", usersParameter, companyIDParameter);
        }
    
        public virtual int UserSignUp(ObjectParameter companyID, ObjectParameter userID, string companyName, string fName, string lName, string address, string address2, string city, string state, string country, string zip, Nullable<long> phone, Nullable<long> fax, string audioURL, string email, Nullable<int> userTypeID, string login, string password, Nullable<long> cRMID, Nullable<long> c4ParentUserID)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(long));
    
            var audioURLParameter = audioURL != null ?
                new ObjectParameter("AudioURL", audioURL) :
                new ObjectParameter("AudioURL", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var cRMIDParameter = cRMID.HasValue ?
                new ObjectParameter("CRMID", cRMID) :
                new ObjectParameter("CRMID", typeof(long));
    
            var c4ParentUserIDParameter = c4ParentUserID.HasValue ?
                new ObjectParameter("C4ParentUserID", c4ParentUserID) :
                new ObjectParameter("C4ParentUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSignUp", companyID, userID, companyNameParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, countryParameter, zipParameter, phoneParameter, faxParameter, audioURLParameter, emailParameter, userTypeIDParameter, loginParameter, passwordParameter, cRMIDParameter, c4ParentUserIDParameter);
        }
    
        public virtual int usersignup_delete(Nullable<long> companyID, Nullable<long> userID, Nullable<long> campaignID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usersignup_delete", companyIDParameter, userIDParameter, campaignIDParameter);
        }
    
        public virtual int UserSignUpNew(ObjectParameter companyID, ObjectParameter userID, string companyName, string fName, string lName, string address, string address2, string city, string state, string country, string zip, Nullable<long> phone, Nullable<long> fax, string email, Nullable<int> userTypeID, string login, string password, Nullable<long> cRMID, Nullable<System.DateTime> dateCreated, Nullable<bool> active, string companyVerticle, Nullable<bool> canViewFullPhoneNumber, Nullable<bool> isDemo, Nullable<bool> isSuspended, string logoURL, Nullable<bool> stampt, Nullable<bool> social, Nullable<bool> feedback, Nullable<bool> remainders, Nullable<bool> keywordLookup, Nullable<bool> display, Nullable<bool> randomDraw, Nullable<bool> polling, Nullable<bool> iVR, Nullable<bool> canViewCustomMessageFlows, Nullable<bool> canViewTargets, Nullable<bool> hasSmartSMSAccess, Nullable<bool> likeDislikeEnabled, Nullable<int> delayedOptin, Nullable<int> countdownTime, Nullable<bool> enableDelayedOptin, Nullable<bool> enableCountdowntime)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var cRMIDParameter = cRMID.HasValue ?
                new ObjectParameter("CRMID", cRMID) :
                new ObjectParameter("CRMID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var companyVerticleParameter = companyVerticle != null ?
                new ObjectParameter("CompanyVerticle", companyVerticle) :
                new ObjectParameter("CompanyVerticle", typeof(string));
    
            var canViewFullPhoneNumberParameter = canViewFullPhoneNumber.HasValue ?
                new ObjectParameter("CanViewFullPhoneNumber", canViewFullPhoneNumber) :
                new ObjectParameter("CanViewFullPhoneNumber", typeof(bool));
    
            var isDemoParameter = isDemo.HasValue ?
                new ObjectParameter("isDemo", isDemo) :
                new ObjectParameter("isDemo", typeof(bool));
    
            var isSuspendedParameter = isSuspended.HasValue ?
                new ObjectParameter("isSuspended", isSuspended) :
                new ObjectParameter("isSuspended", typeof(bool));
    
            var logoURLParameter = logoURL != null ?
                new ObjectParameter("LogoURL", logoURL) :
                new ObjectParameter("LogoURL", typeof(string));
    
            var stamptParameter = stampt.HasValue ?
                new ObjectParameter("Stampt", stampt) :
                new ObjectParameter("Stampt", typeof(bool));
    
            var socialParameter = social.HasValue ?
                new ObjectParameter("Social", social) :
                new ObjectParameter("Social", typeof(bool));
    
            var feedbackParameter = feedback.HasValue ?
                new ObjectParameter("Feedback", feedback) :
                new ObjectParameter("Feedback", typeof(bool));
    
            var remaindersParameter = remainders.HasValue ?
                new ObjectParameter("Remainders", remainders) :
                new ObjectParameter("Remainders", typeof(bool));
    
            var keywordLookupParameter = keywordLookup.HasValue ?
                new ObjectParameter("KeywordLookup", keywordLookup) :
                new ObjectParameter("KeywordLookup", typeof(bool));
    
            var displayParameter = display.HasValue ?
                new ObjectParameter("Display", display) :
                new ObjectParameter("Display", typeof(bool));
    
            var randomDrawParameter = randomDraw.HasValue ?
                new ObjectParameter("RandomDraw", randomDraw) :
                new ObjectParameter("RandomDraw", typeof(bool));
    
            var pollingParameter = polling.HasValue ?
                new ObjectParameter("Polling", polling) :
                new ObjectParameter("Polling", typeof(bool));
    
            var iVRParameter = iVR.HasValue ?
                new ObjectParameter("IVR", iVR) :
                new ObjectParameter("IVR", typeof(bool));
    
            var canViewCustomMessageFlowsParameter = canViewCustomMessageFlows.HasValue ?
                new ObjectParameter("CanViewCustomMessageFlows", canViewCustomMessageFlows) :
                new ObjectParameter("CanViewCustomMessageFlows", typeof(bool));
    
            var canViewTargetsParameter = canViewTargets.HasValue ?
                new ObjectParameter("CanViewTargets", canViewTargets) :
                new ObjectParameter("CanViewTargets", typeof(bool));
    
            var hasSmartSMSAccessParameter = hasSmartSMSAccess.HasValue ?
                new ObjectParameter("HasSmartSMSAccess", hasSmartSMSAccess) :
                new ObjectParameter("HasSmartSMSAccess", typeof(bool));
    
            var likeDislikeEnabledParameter = likeDislikeEnabled.HasValue ?
                new ObjectParameter("LikeDislikeEnabled", likeDislikeEnabled) :
                new ObjectParameter("LikeDislikeEnabled", typeof(bool));
    
            var delayedOptinParameter = delayedOptin.HasValue ?
                new ObjectParameter("DelayedOptin", delayedOptin) :
                new ObjectParameter("DelayedOptin", typeof(int));
    
            var countdownTimeParameter = countdownTime.HasValue ?
                new ObjectParameter("CountdownTime", countdownTime) :
                new ObjectParameter("CountdownTime", typeof(int));
    
            var enableDelayedOptinParameter = enableDelayedOptin.HasValue ?
                new ObjectParameter("EnableDelayedOptin", enableDelayedOptin) :
                new ObjectParameter("EnableDelayedOptin", typeof(bool));
    
            var enableCountdowntimeParameter = enableCountdowntime.HasValue ?
                new ObjectParameter("EnableCountdowntime", enableCountdowntime) :
                new ObjectParameter("EnableCountdowntime", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSignUpNew", companyID, userID, companyNameParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, countryParameter, zipParameter, phoneParameter, faxParameter, emailParameter, userTypeIDParameter, loginParameter, passwordParameter, cRMIDParameter, dateCreatedParameter, activeParameter, companyVerticleParameter, canViewFullPhoneNumberParameter, isDemoParameter, isSuspendedParameter, logoURLParameter, stamptParameter, socialParameter, feedbackParameter, remaindersParameter, keywordLookupParameter, displayParameter, randomDrawParameter, pollingParameter, iVRParameter, canViewCustomMessageFlowsParameter, canViewTargetsParameter, hasSmartSMSAccessParameter, likeDislikeEnabledParameter, delayedOptinParameter, countdownTimeParameter, enableDelayedOptinParameter, enableCountdowntimeParameter);
        }
    
        public virtual int UserSignUpUpdate(Nullable<long> companyID, string companyName, string fName, string lName, string address, string address2, string city, string state, string country, string zip, Nullable<long> phone, Nullable<long> fax, string email, Nullable<int> userTypeID, string login, string password, Nullable<long> cRMID, Nullable<System.DateTime> dateCreated, Nullable<bool> active, string companyVerticle, Nullable<bool> canViewFullPhoneNumber, Nullable<bool> isDemo, Nullable<bool> isSuspended, string logoURL, Nullable<bool> stampt, Nullable<bool> social, Nullable<bool> feedback, Nullable<bool> remainders, Nullable<bool> keywordLookup, Nullable<bool> display, Nullable<bool> randomDraw, Nullable<bool> polling, Nullable<bool> iVR, Nullable<bool> canViewCustomMessageFlows, Nullable<bool> canViewTargets, Nullable<bool> hasSmartSMSAccess, Nullable<bool> likeDislikeEnabled, Nullable<int> delayedOptin, Nullable<int> countdownTime, Nullable<bool> enableDelayedOptin, Nullable<bool> enableCountdowntime)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var faxParameter = fax.HasValue ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var cRMIDParameter = cRMID.HasValue ?
                new ObjectParameter("CRMID", cRMID) :
                new ObjectParameter("CRMID", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var companyVerticleParameter = companyVerticle != null ?
                new ObjectParameter("CompanyVerticle", companyVerticle) :
                new ObjectParameter("CompanyVerticle", typeof(string));
    
            var canViewFullPhoneNumberParameter = canViewFullPhoneNumber.HasValue ?
                new ObjectParameter("CanViewFullPhoneNumber", canViewFullPhoneNumber) :
                new ObjectParameter("CanViewFullPhoneNumber", typeof(bool));
    
            var isDemoParameter = isDemo.HasValue ?
                new ObjectParameter("isDemo", isDemo) :
                new ObjectParameter("isDemo", typeof(bool));
    
            var isSuspendedParameter = isSuspended.HasValue ?
                new ObjectParameter("isSuspended", isSuspended) :
                new ObjectParameter("isSuspended", typeof(bool));
    
            var logoURLParameter = logoURL != null ?
                new ObjectParameter("LogoURL", logoURL) :
                new ObjectParameter("LogoURL", typeof(string));
    
            var stamptParameter = stampt.HasValue ?
                new ObjectParameter("Stampt", stampt) :
                new ObjectParameter("Stampt", typeof(bool));
    
            var socialParameter = social.HasValue ?
                new ObjectParameter("Social", social) :
                new ObjectParameter("Social", typeof(bool));
    
            var feedbackParameter = feedback.HasValue ?
                new ObjectParameter("Feedback", feedback) :
                new ObjectParameter("Feedback", typeof(bool));
    
            var remaindersParameter = remainders.HasValue ?
                new ObjectParameter("Remainders", remainders) :
                new ObjectParameter("Remainders", typeof(bool));
    
            var keywordLookupParameter = keywordLookup.HasValue ?
                new ObjectParameter("KeywordLookup", keywordLookup) :
                new ObjectParameter("KeywordLookup", typeof(bool));
    
            var displayParameter = display.HasValue ?
                new ObjectParameter("Display", display) :
                new ObjectParameter("Display", typeof(bool));
    
            var randomDrawParameter = randomDraw.HasValue ?
                new ObjectParameter("RandomDraw", randomDraw) :
                new ObjectParameter("RandomDraw", typeof(bool));
    
            var pollingParameter = polling.HasValue ?
                new ObjectParameter("Polling", polling) :
                new ObjectParameter("Polling", typeof(bool));
    
            var iVRParameter = iVR.HasValue ?
                new ObjectParameter("IVR", iVR) :
                new ObjectParameter("IVR", typeof(bool));
    
            var canViewCustomMessageFlowsParameter = canViewCustomMessageFlows.HasValue ?
                new ObjectParameter("CanViewCustomMessageFlows", canViewCustomMessageFlows) :
                new ObjectParameter("CanViewCustomMessageFlows", typeof(bool));
    
            var canViewTargetsParameter = canViewTargets.HasValue ?
                new ObjectParameter("CanViewTargets", canViewTargets) :
                new ObjectParameter("CanViewTargets", typeof(bool));
    
            var hasSmartSMSAccessParameter = hasSmartSMSAccess.HasValue ?
                new ObjectParameter("HasSmartSMSAccess", hasSmartSMSAccess) :
                new ObjectParameter("HasSmartSMSAccess", typeof(bool));
    
            var likeDislikeEnabledParameter = likeDislikeEnabled.HasValue ?
                new ObjectParameter("LikeDislikeEnabled", likeDislikeEnabled) :
                new ObjectParameter("LikeDislikeEnabled", typeof(bool));
    
            var delayedOptinParameter = delayedOptin.HasValue ?
                new ObjectParameter("DelayedOptin", delayedOptin) :
                new ObjectParameter("DelayedOptin", typeof(int));
    
            var countdownTimeParameter = countdownTime.HasValue ?
                new ObjectParameter("CountdownTime", countdownTime) :
                new ObjectParameter("CountdownTime", typeof(int));
    
            var enableDelayedOptinParameter = enableDelayedOptin.HasValue ?
                new ObjectParameter("EnableDelayedOptin", enableDelayedOptin) :
                new ObjectParameter("EnableDelayedOptin", typeof(bool));
    
            var enableCountdowntimeParameter = enableCountdowntime.HasValue ?
                new ObjectParameter("EnableCountdowntime", enableCountdowntime) :
                new ObjectParameter("EnableCountdowntime", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSignUpUpdate", companyIDParameter, companyNameParameter, fNameParameter, lNameParameter, addressParameter, address2Parameter, cityParameter, stateParameter, countryParameter, zipParameter, phoneParameter, faxParameter, emailParameter, userTypeIDParameter, loginParameter, passwordParameter, cRMIDParameter, dateCreatedParameter, activeParameter, companyVerticleParameter, canViewFullPhoneNumberParameter, isDemoParameter, isSuspendedParameter, logoURLParameter, stamptParameter, socialParameter, feedbackParameter, remaindersParameter, keywordLookupParameter, displayParameter, randomDrawParameter, pollingParameter, iVRParameter, canViewCustomMessageFlowsParameter, canViewTargetsParameter, hasSmartSMSAccessParameter, likeDislikeEnabledParameter, delayedOptinParameter, countdownTimeParameter, enableDelayedOptinParameter, enableCountdowntimeParameter);
        }
    
        public virtual ObjectResult<UsersIVRDetailView_Result> UsersIVRDetailView(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersIVRDetailView_Result>("UsersIVRDetailView", userIDParameter);
        }
    
        public virtual ObjectResult<UsersMessageDetailView_Result> UsersMessageDetailView(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersMessageDetailView_Result>("UsersMessageDetailView", userIDParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionCountForCampaignID_Result> UserSubscriptionCountForCampaignID(Nullable<long> phone, Nullable<long> campaignID)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionCountForCampaignID_Result>("UserSubscriptionCountForCampaignID", phoneParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionCountForCompany_Result> UserSubscriptionCountForCompany(string phoneNumber, Nullable<int> companyid)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionCountForCompany_Result>("UserSubscriptionCountForCompany", phoneNumberParameter, companyidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UserSubscriptionCountForShortCode(string phoneNumber, Nullable<long> shortcode)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var shortcodeParameter = shortcode.HasValue ?
                new ObjectParameter("shortcode", shortcode) :
                new ObjectParameter("shortcode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UserSubscriptionCountForShortCode", phoneNumberParameter, shortcodeParameter);
        }
    
        public virtual int UserSubscriptionDelete(Nullable<long> userID, Nullable<long> messageFlowID, Nullable<long> outboundCallScheduleID, Nullable<long> changedByUserID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var outboundCallScheduleIDParameter = outboundCallScheduleID.HasValue ?
                new ObjectParameter("OutboundCallScheduleID", outboundCallScheduleID) :
                new ObjectParameter("OutboundCallScheduleID", typeof(long));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSubscriptionDelete", userIDParameter, messageFlowIDParameter, outboundCallScheduleIDParameter, changedByUserIDParameter);
        }
    
        public virtual int UserSubscriptionInsert(ObjectParameter userSubscriptionID, Nullable<long> userID, Nullable<long> messageFlowID, Nullable<int> subscribed, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated, Nullable<long> outboundCallScheduleID, Nullable<long> transactionID, Nullable<long> changedByUserID, Nullable<int> loyaltyStatusTypeID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var subscribedParameter = subscribed.HasValue ?
                new ObjectParameter("Subscribed", subscribed) :
                new ObjectParameter("Subscribed", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            var outboundCallScheduleIDParameter = outboundCallScheduleID.HasValue ?
                new ObjectParameter("OutboundCallScheduleID", outboundCallScheduleID) :
                new ObjectParameter("OutboundCallScheduleID", typeof(long));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            var loyaltyStatusTypeIDParameter = loyaltyStatusTypeID.HasValue ?
                new ObjectParameter("LoyaltyStatusTypeID", loyaltyStatusTypeID) :
                new ObjectParameter("LoyaltyStatusTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSubscriptionInsert", userSubscriptionID, userIDParameter, messageFlowIDParameter, subscribedParameter, dateCreatedParameter, dateUpdatedParameter, outboundCallScheduleIDParameter, transactionIDParameter, changedByUserIDParameter, loyaltyStatusTypeIDParameter);
        }
    
        public virtual int UserSubscriptionInsertTest_delete(ObjectParameter userSubscriptionID, Nullable<long> userID, Nullable<long> messageFlowID, Nullable<int> subscribed, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated, Nullable<long> outboundCallScheduleID, Nullable<long> transactionID, Nullable<long> changedByUserID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var subscribedParameter = subscribed.HasValue ?
                new ObjectParameter("Subscribed", subscribed) :
                new ObjectParameter("Subscribed", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            var outboundCallScheduleIDParameter = outboundCallScheduleID.HasValue ?
                new ObjectParameter("OutboundCallScheduleID", outboundCallScheduleID) :
                new ObjectParameter("OutboundCallScheduleID", typeof(long));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSubscriptionInsertTest_delete", userSubscriptionID, userIDParameter, messageFlowIDParameter, subscribedParameter, dateCreatedParameter, dateUpdatedParameter, outboundCallScheduleIDParameter, transactionIDParameter, changedByUserIDParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionToOutboundCallScheduleViewByUserID_Result> UserSubscriptionToOutboundCallScheduleViewByUserID(Nullable<long> userID, Nullable<long> dID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionToOutboundCallScheduleViewByUserID_Result>("UserSubscriptionToOutboundCallScheduleViewByUserID", userIDParameter, dIDParameter);
        }
    
        public virtual int UserSubscriptionUpdate(string userID, Nullable<long> messageFlowID, Nullable<long> dID, Nullable<bool> subscribed, Nullable<long> changedByUserID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var subscribedParameter = subscribed.HasValue ?
                new ObjectParameter("Subscribed", subscribed) :
                new ObjectParameter("Subscribed", typeof(bool));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSubscriptionUpdate", userIDParameter, messageFlowIDParameter, dIDParameter, subscribedParameter, changedByUserIDParameter);
        }
    
        public virtual int UserSubscriptionUpdate_EndDate(Nullable<long> userSubscriptionID, Nullable<bool> renew)
        {
            var userSubscriptionIDParameter = userSubscriptionID.HasValue ?
                new ObjectParameter("UserSubscriptionID", userSubscriptionID) :
                new ObjectParameter("UserSubscriptionID", typeof(long));
    
            var renewParameter = renew.HasValue ?
                new ObjectParameter("Renew", renew) :
                new ObjectParameter("Renew", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSubscriptionUpdate_EndDate", userSubscriptionIDParameter, renewParameter);
        }
    
        public virtual int UserSubscriptionUpdate2(Nullable<long> companyID, string campaignID, Nullable<int> userTypeID, string sortBy, string sortType, Nullable<long> custPhone, Nullable<long> messageFlowID, Nullable<long> dID, Nullable<int> totalRows, Nullable<int> pageNumber, Nullable<bool> subscribed, Nullable<long> changedByUserID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var custPhoneParameter = custPhone.HasValue ?
                new ObjectParameter("CustPhone", custPhone) :
                new ObjectParameter("CustPhone", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var totalRowsParameter = totalRows.HasValue ?
                new ObjectParameter("TotalRows", totalRows) :
                new ObjectParameter("TotalRows", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var subscribedParameter = subscribed.HasValue ?
                new ObjectParameter("Subscribed", subscribed) :
                new ObjectParameter("Subscribed", typeof(bool));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSubscriptionUpdate2", companyIDParameter, campaignIDParameter, userTypeIDParameter, sortByParameter, sortTypeParameter, custPhoneParameter, messageFlowIDParameter, dIDParameter, totalRowsParameter, pageNumberParameter, subscribedParameter, changedByUserIDParameter);
        }
    
        public virtual int UserSubscriptionUpdate3(string userID, Nullable<long> messageFlowID, Nullable<long> dID, Nullable<bool> subscribed, Nullable<long> changedByUserID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var subscribedParameter = subscribed.HasValue ?
                new ObjectParameter("Subscribed", subscribed) :
                new ObjectParameter("Subscribed", typeof(bool));
    
            var changedByUserIDParameter = changedByUserID.HasValue ?
                new ObjectParameter("ChangedByUserID", changedByUserID) :
                new ObjectParameter("ChangedByUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserSubscriptionUpdate3", userIDParameter, messageFlowIDParameter, dIDParameter, subscribedParameter, changedByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> UserSubscriptionView(Nullable<long> userID, string messageFlowID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("UserSubscriptionView", userIDParameter, messageFlowIDParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionView_MF_DID_Result> UserSubscriptionView_MF_DID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionView_MF_DID_Result>("UserSubscriptionView_MF_DID", userIDParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionView_with_PhoneNumber_Result> UserSubscriptionView_with_PhoneNumber(Nullable<long> phoneNumber)
        {
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionView_with_PhoneNumber_Result>("UserSubscriptionView_with_PhoneNumber", phoneNumberParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionView_with_UserID_Result> UserSubscriptionView_with_UserID(Nullable<long> userID, Nullable<long> messageFlowID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var messageFlowIDParameter = messageFlowID.HasValue ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionView_with_UserID_Result>("UserSubscriptionView_with_UserID", userIDParameter, messageFlowIDParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionViewALL_Result> UserSubscriptionViewALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionViewALL_Result>("UserSubscriptionViewALL");
        }
    
        public virtual ObjectResult<UserSubscriptionViewByCampaignIDUserID_Result> UserSubscriptionViewByCampaignIDUserID(Nullable<long> userID, string campaignID, Nullable<bool> subscribed)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var subscribedParameter = subscribed.HasValue ?
                new ObjectParameter("Subscribed", subscribed) :
                new ObjectParameter("Subscribed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionViewByCampaignIDUserID_Result>("UserSubscriptionViewByCampaignIDUserID", userIDParameter, campaignIDParameter, subscribedParameter);
        }
    
        public virtual ObjectResult<UserSubscriptionViewByTargetID_Result> UserSubscriptionViewByTargetID(Nullable<long> targetID, Nullable<long> userID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserSubscriptionViewByTargetID_Result>("UserSubscriptionViewByTargetID", targetIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UserSubscriptionViewByTargetIDSubscribedStatusHistory(Nullable<long> targetID, Nullable<long> userID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UserSubscriptionViewByTargetIDSubscribedStatusHistory", targetIDParameter, userIDParameter);
        }
    
        public virtual int UserTrainingGuideDelete(Nullable<long> userID, Nullable<long> trainingGuideID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var trainingGuideIDParameter = trainingGuideID.HasValue ?
                new ObjectParameter("TrainingGuideID", trainingGuideID) :
                new ObjectParameter("TrainingGuideID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserTrainingGuideDelete", userIDParameter, trainingGuideIDParameter);
        }
    
        public virtual int UserTrainingGuideInsert(Nullable<long> userID, Nullable<long> trainingGuideID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var trainingGuideIDParameter = trainingGuideID.HasValue ?
                new ObjectParameter("TrainingGuideID", trainingGuideID) :
                new ObjectParameter("TrainingGuideID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserTrainingGuideInsert", userIDParameter, trainingGuideIDParameter);
        }
    
        public virtual int UserTypeUpdate(string userLogin, Nullable<int> userTypeID)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("userLogin", userLogin) :
                new ObjectParameter("userLogin", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("userTypeID", userTypeID) :
                new ObjectParameter("userTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserTypeUpdate", userLoginParameter, userTypeIDParameter);
        }
    
        public virtual ObjectResult<UserTypeView_Result> UserTypeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserTypeView_Result>("UserTypeView");
        }
    
        public virtual ObjectResult<UserTypeView_UserID_Result> UserTypeView_UserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserTypeView_UserID_Result>("UserTypeView_UserID", userIDParameter);
        }
    
        public virtual ObjectResult<UserUnsubscribeAll_Result> UserUnsubscribeAll(Nullable<long> phone, Nullable<long> shortcode)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            var shortcodeParameter = shortcode.HasValue ?
                new ObjectParameter("shortcode", shortcode) :
                new ObjectParameter("shortcode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserUnsubscribeAll_Result>("UserUnsubscribeAll", phoneParameter, shortcodeParameter);
        }
    
        public virtual int UserUpdate(Nullable<long> userID, Nullable<long> companyID, Nullable<int> userTypeID, Nullable<long> phone, Nullable<System.DateTime> dateCreated, Nullable<bool> active, Nullable<long> mobileModelID, Nullable<long> mobileCarrierID, string accountNum, string pIN, Nullable<int> timeZoneID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var mobileModelIDParameter = mobileModelID.HasValue ?
                new ObjectParameter("MobileModelID", mobileModelID) :
                new ObjectParameter("MobileModelID", typeof(long));
    
            var mobileCarrierIDParameter = mobileCarrierID.HasValue ?
                new ObjectParameter("MobileCarrierID", mobileCarrierID) :
                new ObjectParameter("MobileCarrierID", typeof(long));
    
            var accountNumParameter = accountNum != null ?
                new ObjectParameter("AccountNum", accountNum) :
                new ObjectParameter("AccountNum", typeof(string));
    
            var pINParameter = pIN != null ?
                new ObjectParameter("PIN", pIN) :
                new ObjectParameter("PIN", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate", userIDParameter, companyIDParameter, userTypeIDParameter, phoneParameter, dateCreatedParameter, activeParameter, mobileModelIDParameter, mobileCarrierIDParameter, accountNumParameter, pINParameter, timeZoneIDParameter);
        }
    
        public virtual int UserUpdate_ArmCard(Nullable<long> userid, Nullable<System.Guid> armCardID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var armCardIDParameter = armCardID.HasValue ?
                new ObjectParameter("armCardID", armCardID) :
                new ObjectParameter("armCardID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_ArmCard", useridParameter, armCardIDParameter);
        }
    
        public virtual int UserUpdate_ClientName(Nullable<long> transcationID, string clientName, string custom)
        {
            var transcationIDParameter = transcationID.HasValue ?
                new ObjectParameter("transcationID", transcationID) :
                new ObjectParameter("transcationID", typeof(long));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("clientName", clientName) :
                new ObjectParameter("clientName", typeof(string));
    
            var customParameter = custom != null ?
                new ObjectParameter("custom", custom) :
                new ObjectParameter("custom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_ClientName", transcationIDParameter, clientNameParameter, customParameter);
        }
    
        public virtual int UserUpdate_CompanyName(Nullable<long> userID, string companyName)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_CompanyName", userIDParameter, companyNameParameter);
        }
    
        public virtual int UserUpdate_FBAuth(Nullable<long> userid, string fBAuthCode, Nullable<long> fBFanPageID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var fBAuthCodeParameter = fBAuthCode != null ?
                new ObjectParameter("FBAuthCode", fBAuthCode) :
                new ObjectParameter("FBAuthCode", typeof(string));
    
            var fBFanPageIDParameter = fBFanPageID.HasValue ?
                new ObjectParameter("FBFanPageID", fBFanPageID) :
                new ObjectParameter("FBFanPageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_FBAuth", useridParameter, fBAuthCodeParameter, fBFanPageIDParameter);
        }
    
        public virtual int UserUpdate_Password(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_Password", loginParameter, passwordParameter);
        }
    
        public virtual int UserUpdate_Social(Nullable<long> userid, string twitterUsername, string twitterPassword, string fBAuthCode)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var twitterUsernameParameter = twitterUsername != null ?
                new ObjectParameter("TwitterUsername", twitterUsername) :
                new ObjectParameter("TwitterUsername", typeof(string));
    
            var twitterPasswordParameter = twitterPassword != null ?
                new ObjectParameter("TwitterPassword", twitterPassword) :
                new ObjectParameter("TwitterPassword", typeof(string));
    
            var fBAuthCodeParameter = fBAuthCode != null ?
                new ObjectParameter("FBAuthCode", fBAuthCode) :
                new ObjectParameter("FBAuthCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_Social", useridParameter, twitterUsernameParameter, twitterPasswordParameter, fBAuthCodeParameter);
        }
    
        public virtual int UserUpdate_StamptID(Nullable<long> userid, Nullable<long> stamptUserID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var stamptUserIDParameter = stamptUserID.HasValue ?
                new ObjectParameter("stamptUserID", stamptUserID) :
                new ObjectParameter("stamptUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_StamptID", useridParameter, stamptUserIDParameter);
        }
    
        public virtual int UserUpdate_TCPATermsAccepted(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_TCPATermsAccepted", userIDParameter);
        }
    
        public virtual int UserUpdate_TwitterAuth(Nullable<long> userid, string twitterToken, string twitterTokenSecret, string twitterUserName)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var twitterTokenParameter = twitterToken != null ?
                new ObjectParameter("twitterToken", twitterToken) :
                new ObjectParameter("twitterToken", typeof(string));
    
            var twitterTokenSecretParameter = twitterTokenSecret != null ?
                new ObjectParameter("twitterTokenSecret", twitterTokenSecret) :
                new ObjectParameter("twitterTokenSecret", typeof(string));
    
            var twitterUserNameParameter = twitterUserName != null ?
                new ObjectParameter("twitterUserName", twitterUserName) :
                new ObjectParameter("twitterUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate_TwitterAuth", useridParameter, twitterTokenParameter, twitterTokenSecretParameter, twitterUserNameParameter);
        }
    
        public virtual int UserUpdateCarrierID(Nullable<long> userID, Nullable<long> carrierID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdateCarrierID", userIDParameter, carrierIDParameter);
        }
    
        public virtual int UserUpdateMobileDeviceName(Nullable<long> userID, string mobileDeviceName)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var mobileDeviceNameParameter = mobileDeviceName != null ?
                new ObjectParameter("MobileDeviceName", mobileDeviceName) :
                new ObjectParameter("MobileDeviceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdateMobileDeviceName", userIDParameter, mobileDeviceNameParameter);
        }
    
        public virtual int UserUpdateModelID(Nullable<long> userID, Nullable<long> mobileModelID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var mobileModelIDParameter = mobileModelID.HasValue ?
                new ObjectParameter("MobileModelID", mobileModelID) :
                new ObjectParameter("MobileModelID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdateModelID", userIDParameter, mobileModelIDParameter);
        }
    
        public virtual ObjectResult<UserView_Result> UserView(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserView_Result>("UserView", userIDParameter);
        }
    
        public virtual ObjectResult<UserViewDetailsForExport_Result> UserViewDetailsForExport(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserViewDetailsForExport_Result>("UserViewDetailsForExport", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual int UserViewDetailsForExportNew(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserViewDetailsForExportNew", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual int UserViewDetailsWithPaging(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserViewDetailsWithPaging", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, pageSizeParameter, pageNumberParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual int UserViewDetailsWithPaging_print(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserViewDetailsWithPaging_print", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, pageSizeParameter, pageNumberParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual ObjectResult<UserViewDetailsWithPagingMultipleFilters_Result> UserViewDetailsWithPagingMultipleFilters(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> userTypeID, string sortBy, string sortType, Nullable<long> phoneQuery, string carrierQuery, string stateQuery, string messageFlowID, string dID, string carrierID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, ObjectParameter totalSubscribedUsers)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var phoneQueryParameter = phoneQuery.HasValue ?
                new ObjectParameter("PhoneQuery", phoneQuery) :
                new ObjectParameter("PhoneQuery", typeof(long));
    
            var carrierQueryParameter = carrierQuery != null ?
                new ObjectParameter("CarrierQuery", carrierQuery) :
                new ObjectParameter("CarrierQuery", typeof(string));
    
            var stateQueryParameter = stateQuery != null ?
                new ObjectParameter("StateQuery", stateQuery) :
                new ObjectParameter("StateQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID != null ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserViewDetailsWithPagingMultipleFilters_Result>("UserViewDetailsWithPagingMultipleFilters", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, userTypeIDParameter, sortByParameter, sortTypeParameter, phoneQueryParameter, carrierQueryParameter, stateQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, pageSizeParameter, pageNumberParameter, totalRows, totalSubscribedUsers);
        }
    
        public virtual int UserViewDetailsWithPagingNew(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserViewDetailsWithPagingNew", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, pageSizeParameter, pageNumberParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual int UserViewDetailsWithPagingOld(Nullable<long> companyID, string campaignID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string sortBy, string sortType, string textQuery, string messageFlowID, string dID, Nullable<long> carrierID, Nullable<int> pageSize, Nullable<int> pageNumber, ObjectParameter totalRows, Nullable<bool> noZip, Nullable<bool> yesZip, Nullable<int> zip, Nullable<int> radiusMiles, string state, Nullable<int> timeZoneID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var campaignIDParameter = campaignID != null ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            var sortTypeParameter = sortType != null ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(string));
    
            var textQueryParameter = textQuery != null ?
                new ObjectParameter("TextQuery", textQuery) :
                new ObjectParameter("TextQuery", typeof(string));
    
            var messageFlowIDParameter = messageFlowID != null ?
                new ObjectParameter("MessageFlowID", messageFlowID) :
                new ObjectParameter("MessageFlowID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            var carrierIDParameter = carrierID.HasValue ?
                new ObjectParameter("CarrierID", carrierID) :
                new ObjectParameter("CarrierID", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var noZipParameter = noZip.HasValue ?
                new ObjectParameter("NoZip", noZip) :
                new ObjectParameter("NoZip", typeof(bool));
    
            var yesZipParameter = yesZip.HasValue ?
                new ObjectParameter("YesZip", yesZip) :
                new ObjectParameter("YesZip", typeof(bool));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var radiusMilesParameter = radiusMiles.HasValue ?
                new ObjectParameter("RadiusMiles", radiusMiles) :
                new ObjectParameter("RadiusMiles", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var timeZoneIDParameter = timeZoneID.HasValue ?
                new ObjectParameter("TimeZoneID", timeZoneID) :
                new ObjectParameter("TimeZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserViewDetailsWithPagingOld", companyIDParameter, campaignIDParameter, startDateParameter, endDateParameter, sortByParameter, sortTypeParameter, textQueryParameter, messageFlowIDParameter, dIDParameter, carrierIDParameter, pageSizeParameter, pageNumberParameter, totalRows, noZipParameter, yesZipParameter, zipParameter, radiusMilesParameter, stateParameter, timeZoneIDParameter);
        }
    
        public virtual int USP_CDREnd(Nullable<long> cDRID, Nullable<long> dID, ObjectParameter results)
        {
            var cDRIDParameter = cDRID.HasValue ?
                new ObjectParameter("CDRID", cDRID) :
                new ObjectParameter("CDRID", typeof(long));
    
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CDREnd", cDRIDParameter, dIDParameter, results);
        }
    
        public virtual int USP_CDRStart(ObjectParameter cDRID, Nullable<long> dID, Nullable<long> callerID, Nullable<long> userID)
        {
            var dIDParameter = dID.HasValue ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(long));
    
            var callerIDParameter = callerID.HasValue ?
                new ObjectParameter("CallerID", callerID) :
                new ObjectParameter("CallerID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CDRStart", cDRID, dIDParameter, callerIDParameter, userIDParameter);
        }
    
        public virtual int USP_CreateIVRUser(ObjectParameter userID, Nullable<long> phone, Nullable<long> companyID)
        {
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_CreateIVRUser", userID, phoneParameter, companyIDParameter);
        }
    
        public virtual int usp_GetFreeDID(Nullable<long> campaignID, ObjectParameter dID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetFreeDID", campaignIDParameter, dID);
        }
    
        public virtual int usp_IVRTree_AudioUpdate(Nullable<long> iVRTreeID, string audioURL)
        {
            var iVRTreeIDParameter = iVRTreeID.HasValue ?
                new ObjectParameter("IVRTreeID", iVRTreeID) :
                new ObjectParameter("IVRTreeID", typeof(long));
    
            var audioURLParameter = audioURL != null ?
                new ObjectParameter("AudioURL", audioURL) :
                new ObjectParameter("AudioURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IVRTree_AudioUpdate", iVRTreeIDParameter, audioURLParameter);
        }
    
        public virtual int USP_OutboundEventSchedulerInsert(ObjectParameter outboundEventSchedulerID, Nullable<long> userID, Nullable<System.DateTime> approxWindowStart, Nullable<System.DateTime> approxWindowEnd, Nullable<long> outboundEventTypeID, Nullable<long> campaignID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var approxWindowStartParameter = approxWindowStart.HasValue ?
                new ObjectParameter("ApproxWindowStart", approxWindowStart) :
                new ObjectParameter("ApproxWindowStart", typeof(System.DateTime));
    
            var approxWindowEndParameter = approxWindowEnd.HasValue ?
                new ObjectParameter("ApproxWindowEnd", approxWindowEnd) :
                new ObjectParameter("ApproxWindowEnd", typeof(System.DateTime));
    
            var outboundEventTypeIDParameter = outboundEventTypeID.HasValue ?
                new ObjectParameter("OutboundEventTypeID", outboundEventTypeID) :
                new ObjectParameter("OutboundEventTypeID", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OutboundEventSchedulerInsert", outboundEventSchedulerID, userIDParameter, approxWindowStartParameter, approxWindowEndParameter, outboundEventTypeIDParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<USP_ValidateCampaign_Result> USP_ValidateCampaign(Nullable<long> campaignID, Nullable<long> companyID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ValidateCampaign_Result>("USP_ValidateCampaign", campaignIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_ValidateCompanyUser(Nullable<long> userID, string phone, Nullable<long> companyID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_ValidateCompanyUser", userIDParameter, phoneParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<USP_ValidateLogin_Result> USP_ValidateLogin(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ValidateLogin_Result>("USP_ValidateLogin", loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_ValidateMBloxCarrierID(Nullable<long> mBloxID)
        {
            var mBloxIDParameter = mBloxID.HasValue ?
                new ObjectParameter("mBloxID", mBloxID) :
                new ObjectParameter("mBloxID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_ValidateMBloxCarrierID", mBloxIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_ValidateSybaseCarrierID(Nullable<long> sybaseid)
        {
            var sybaseidParameter = sybaseid.HasValue ?
                new ObjectParameter("sybaseid", sybaseid) :
                new ObjectParameter("sybaseid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_ValidateSybaseCarrierID", sybaseidParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_ValidateTargetID(Nullable<long> targetID, Nullable<long> companyID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(long));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_ValidateTargetID", targetIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<USP_ValidateTransactionID_Result> USP_ValidateTransactionID(Nullable<long> transactionID, Nullable<long> userID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_ValidateTransactionID_Result>("USP_ValidateTransactionID", transactionIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_ValidateUserByCompanyIDandPhone(Nullable<long> companyID, Nullable<long> phone)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(long));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_ValidateUserByCompanyIDandPhone", companyIDParameter, phoneParameter);
        }
    
        public virtual ObjectResult<usp_Worst_TSQL_Result> usp_Worst_TSQL(string dBNAME, Nullable<int> cOUNT, string oRDERBY)
        {
            var dBNAMEParameter = dBNAME != null ?
                new ObjectParameter("DBNAME", dBNAME) :
                new ObjectParameter("DBNAME", typeof(string));
    
            var cOUNTParameter = cOUNT.HasValue ?
                new ObjectParameter("COUNT", cOUNT) :
                new ObjectParameter("COUNT", typeof(int));
    
            var oRDERBYParameter = oRDERBY != null ?
                new ObjectParameter("ORDERBY", oRDERBY) :
                new ObjectParameter("ORDERBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Worst_TSQL_Result>("usp_Worst_TSQL", dBNAMEParameter, cOUNTParameter, oRDERBYParameter);
        }
    
        public virtual ObjectResult<ValidateAPILogin_Result> ValidateAPILogin(string login, string password, Nullable<bool> isAdmin, Nullable<bool> isSuperUser, Nullable<bool> isReportsOnly)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var isReportsOnlyParameter = isReportsOnly.HasValue ?
                new ObjectParameter("IsReportsOnly", isReportsOnly) :
                new ObjectParameter("IsReportsOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidateAPILogin_Result>("ValidateAPILogin", loginParameter, passwordParameter, isAdminParameter, isSuperUserParameter, isReportsOnlyParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> ValidatePIN(Nullable<long> pIN, Nullable<long> campaignID)
        {
            var pINParameter = pIN.HasValue ?
                new ObjectParameter("PIN", pIN) :
                new ObjectParameter("PIN", typeof(long));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("ValidatePIN", pINParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<ValidateUILogin_Result> ValidateUILogin(string login, string password, Nullable<bool> isAdmin, Nullable<bool> isSuperUser, Nullable<bool> isReportsOnly)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var isReportsOnlyParameter = isReportsOnly.HasValue ?
                new ObjectParameter("IsReportsOnly", isReportsOnly) :
                new ObjectParameter("IsReportsOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidateUILogin_Result>("ValidateUILogin", loginParameter, passwordParameter, isAdminParameter, isSuperUserParameter, isReportsOnlyParameter);
        }
    }
}
